/**
 * The contents of this file are subject to the OpenMRS Public License
 * Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://license.openmrs.org
 *
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * Copyright (C) OpenMRS, LLC.  All Rights Reserved.
 */
package org.openmrs.module.rwandareports.reporting;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.openmrs.Concept;
import org.openmrs.Form;
import org.openmrs.api.context.Context;
import org.openmrs.module.reporting.cohort.definition.AgeCohortDefinition;
import org.openmrs.module.reporting.cohort.definition.CohortDefinition;
import org.openmrs.module.reporting.cohort.definition.CompositionCohortDefinition;
import org.openmrs.module.reporting.cohort.definition.EncounterCohortDefinition;
import org.openmrs.module.reporting.cohort.definition.GenderCohortDefinition;
import org.openmrs.module.reporting.cohort.definition.SqlCohortDefinition;
import org.openmrs.module.reporting.common.DurationUnit;
import org.openmrs.module.reporting.dataset.definition.CohortIndicatorDataSetDefinition;
import org.openmrs.module.reporting.evaluation.parameter.Mapped;
import org.openmrs.module.reporting.evaluation.parameter.Parameter;
import org.openmrs.module.reporting.evaluation.parameter.ParameterizableUtil;
import org.openmrs.module.reporting.indicator.CohortIndicator;
import org.openmrs.module.reporting.query.encounter.definition.EncounterQuery;
import org.openmrs.module.reporting.query.encounter.definition.SqlEncounterQuery;
import org.openmrs.module.reporting.report.ReportDesign;
import org.openmrs.module.reporting.report.definition.ReportDefinition;
import org.openmrs.module.rwandareports.dataset.EncounterIndicatorDataSetDefinition;
import org.openmrs.module.rwandareports.dataset.LocationHierachyIndicatorDataSetDefinition;
import org.openmrs.module.rwandareports.indicator.EncounterIndicator;
import org.openmrs.module.rwandareports.util.Cohorts;
import org.openmrs.module.rwandareports.util.Indicators;
import org.openmrs.module.rwandareports.widget.AllLocation;
import org.openmrs.module.rwandareports.widget.LocationHierarchy;

public class SetupHMISIndicatorMonthlyReport implements SetupReport {
	
	protected final Log log = LogFactory.getLog(getClass());
	
	// properties
	
	private List<Form> OPDForms;
	
	private Form OPDForm;
	
	private Concept caseStatus;
	
	private Concept oldCase;
	
	private Concept newCase;
	
	private int noneInsuranceID;
	
	private String hundrepercentInsuredInsuranceIDs;
	
	private String indigentsInsuranceIDs;
	
	private int ICDConceptClassId;
	
	private List<String> onOrAfterOnOrBefore = new ArrayList<String>();
	
	Properties properties = new Properties();
	
	/**
	 * @return
	 */
	@Override
	public String getReportName() {
		return null;
	}
	
	public void setup() throws Exception {
		
		setUpProperties();
		
		//Monthly report set-up
		
		properties.setProperty("hierarchyFields", "countyDistrict:District");
		
		EncounterCohortDefinition patientWithOPDForm = Cohorts.createEncounterBasedOnForms("patientWithOPDForm",
		    onOrAfterOnOrBefore, OPDForms);
		
		// II. Outpatient Consultations/ Consultations Externes
		
		ReportDefinition monthlyRdII = createReportDefinition(
		    "District Hospital Monthly HMIS Report - II. Outpatient Consultations", properties);
		
		monthlyRdII.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdII.addDataSetDefinition(createEncounterCohortMonthlyLocationDataSetII(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdII);
		
		ReportDesign monthlyDesignII = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdII,
		    "District_Hospital_Monthly_HMIS_Report_II.xls", "District Hospital Monthly HMIS Report_II (Excel)", null);
		Properties monthlyPropsII = new Properties();
		monthlyPropsII.put("repeatingSections", "sheet:1,dataset:Encounter Monthly Data Set Two");
		monthlyPropsII.put("sortWeight", "5000");
		monthlyDesignII.setProperties(monthlyPropsII);
		Helper.saveReportDesign(monthlyDesignII);
		
		// III. Mental Health/ Sant√© mentale
		
		ReportDefinition monthlyRdIII = createReportDefinition("District Hospital Monthly HMIS Report - III. Mental Health",
		    properties);
		
		monthlyRdIII.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdIII.addDataSetDefinition(createCohortMonthlyLocationDataSetIII(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdIII);
		
		ReportDesign monthlyDesignIII = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdIII,
		    "District_Hospital_Monthly_HMIS_Report_III.xls", "District Hospital Monthly HMIS Report_III (Excel)", null);
		Properties monthlyPropsIII = new Properties();
		monthlyPropsIII.put("repeatingSections", "sheet:1,dataset:Monthly Cohort Data Set Three");
		monthlyPropsIII.put("sortWeight", "5000");
		monthlyDesignIII.setProperties(monthlyPropsIII);
		Helper.saveReportDesign(monthlyDesignIII);
		
		//IV. Chronic Diseases
		ReportDefinition monthlyRdIV = createReportDefinition(
		    "District Hospital Monthly HMIS Report - IV. Chronic Diseases", properties);
		
		monthlyRdIV.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdIV.addDataSetDefinition(createCohortMonthlyLocationDataSetIV(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdIV);
		
		ReportDesign monthlyDesignIV = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdIV,
		    "District_Hospital_Monthly_HMIS_Report_IV.xls", "District Hospital Monthly HMIS Report_IV (Excel)", null);
		Properties monthlyPropsIV = new Properties();
		monthlyPropsIV.put("repeatingSections", "sheet:1,dataset:Monthly Cohort Data Set Four");
		monthlyPropsIV.put("sortWeight", "5000");
		monthlyDesignIV.setProperties(monthlyPropsIV);
		Helper.saveReportDesign(monthlyDesignIV);
		
		// V. Other Cardiovascular and Kidney diseases
		
		ReportDefinition monthlyRdV = createReportDefinition(
		    "District Hospital Monthly HMIS Report - V. Other Cardiovascular and Kidney diseases", properties);
		
		monthlyRdV.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdV.addDataSetDefinition(createCohortMonthlyLocationDataSetV(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdV);
		
		ReportDesign monthlyDesignV = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdV,
		    "District_Hospital_Monthly_HMIS_Report_V.xls", "District Hospital Monthly HMIS Report_V (Excel)", null);
		Properties monthlyPropsV = new Properties();
		monthlyPropsV.put("repeatingSections", "sheet:1,dataset:Monthly Cohort Data Set Five");
		monthlyPropsV.put("sortWeight", "5000");
		monthlyDesignV.setProperties(monthlyPropsV);
		Helper.saveReportDesign(monthlyDesignV);
		
		// VI. Injuries
		
		ReportDefinition monthlyRdVI = createReportDefinition("District Hospital Monthly HMIS Report - VI. Injuries",
		    properties);
		
		monthlyRdVI.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdVI.addDataSetDefinition(createCohortMonthlyLocationDataSetVI(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdVI);
		
		ReportDesign monthlyDesignVI = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdVI,
		    "District_Hospital_Monthly_HMIS_Report_VI.xls", "District Hospital Monthly HMIS Report_VI (Excel)", null);
		Properties monthlyPropsVI = new Properties();
		monthlyPropsVI.put("repeatingSections", "sheet:1,dataset:Monthly Cohort Data Set Six");
		monthlyPropsVI.put("sortWeight", "5000");
		monthlyDesignVI.setProperties(monthlyPropsVI);
		Helper.saveReportDesign(monthlyDesignVI);
		
		// VII. Palliative care
		
		ReportDefinition monthlyRdVII = createReportDefinition(
		    "District Hospital Monthly HMIS Report - VII. Palliative care", properties);
		
		monthlyRdVII.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdVII.addDataSetDefinition(createCohortMonthlyLocationDataSetVII(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdVII);
		
		ReportDesign monthlyDesignVII = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdVII,
		    "District_Hospital_Monthly_HMIS_Report_VII.xls", "District Hospital Monthly HMIS Report_VII (Excel)", null);
		Properties monthlyPropsVII = new Properties();
		monthlyPropsVII.put("repeatingSections", "sheet:1,dataset:Monthly Cohort Data Set Seven");
		monthlyPropsVII.put("sortWeight", "5000");
		monthlyDesignVII.setProperties(monthlyPropsVII);
		Helper.saveReportDesign(monthlyDesignVII);
		
		// VIII. Community Checkup
		
		ReportDefinition monthlyRdVIII = createReportDefinition(
		    "District Hospital Monthly HMIS Report - VIII. Community Checkup", properties);
		
		monthlyRdVIII.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdVIII.addDataSetDefinition(createCohortMonthlyLocationDataSetVIII(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdVIII);
		
		ReportDesign monthlyDesignVIII = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdVIII,
		    "District_Hospital_Monthly_HMIS_Report_VIII.xls", "District Hospital Monthly HMIS Report_VIII (Excel)", null);
		Properties monthlyPropsVIII = new Properties();
		monthlyPropsVIII.put("repeatingSections", "sheet:1,dataset:Monthly Cohort Data Set Eight");
		monthlyPropsVIII.put("sortWeight", "5000");
		monthlyDesignVIII.setProperties(monthlyPropsVIII);
		Helper.saveReportDesign(monthlyDesignVIII);
		
		// IX.  Cancer screening
		
		ReportDefinition monthlyRdIX = createReportDefinition(
		    "District Hospital Monthly HMIS Report - IX. Cancer screening", properties);
		
		monthlyRdIX.setBaseCohortDefinition(patientWithOPDForm,
		    ParameterizableUtil.createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}"));
		
		monthlyRdIX.addDataSetDefinition(createCohortMonthlyLocationDataSetIX(),
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate},location=${location}"));
		
		Helper.saveReportDefinition(monthlyRdIX);
		
		ReportDesign monthlyDesignIX = Helper.createRowPerPatientXlsOverviewReportDesign(monthlyRdIX,
		    "District_Hospital_Monthly_HMIS_Report_IX.xls", "District Hospital Monthly HMIS Report_IX (Excel)", null);
		Properties monthlyPropsIX = new Properties();
		monthlyPropsIX.put("repeatingSections", "sheet:1,dataset:Monthly Cohort Data Set Nine");
		monthlyPropsIX.put("sortWeight", "5000");
		monthlyDesignIX.setProperties(monthlyPropsIX);
		Helper.saveReportDesign(monthlyDesignIX);
		
	}
	
	public void delete() {
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - II. Outpatient Consultations");
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - III. Mental Health");
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - IV. Chronic Diseases");
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - V. Other Cardiovascular and Kidney diseases");
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - VI. Injuries");
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - VII. Palliative care");
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - VIII. Community Checkup");
		Helper.purgeReportDefinition("District Hospital Monthly HMIS Report - IX. Cancer screening");
	}
	
	public ReportDefinition createReportDefinition(String name, Properties properties) {
		
		ReportDefinition reportDefinition = new ReportDefinition();
		reportDefinition.addParameter(new Parameter("startDate", "Start Date", Date.class));
		reportDefinition.addParameter(new Parameter("endDate", "End Date", Date.class));
		reportDefinition.addParameter(new Parameter("location", "Location", AllLocation.class, properties));
		reportDefinition.setName(name);
		return reportDefinition;
	}
	
	//Create Monthly Encounter and Cohort Data set
	
	public LocationHierachyIndicatorDataSetDefinition createEncounterCohortMonthlyLocationDataSetII() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createEncounterMonthlyBaseDataSetII());
		ldsd.addBaseDefinition(createCohortMonthlyBaseDataSetII());
		ldsd.setName("Encounter Monthly Data Set Two");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	// create Monthly cohort Data set
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetII() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createCohortMonthlyIndicatorsII(dsd);
		return dsd;
	}
	
	private EncounterIndicatorDataSetDefinition createEncounterMonthlyBaseDataSetII() {
		
		EncounterIndicatorDataSetDefinition eidsd = new EncounterIndicatorDataSetDefinition();
		eidsd.setName("eidsd");
		eidsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		eidsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createEncounterMonthlyIndicatorsII(eidsd);
		return eidsd;
	}
	
	// III. Mental Health/ Sant√© mentale
	
	public LocationHierachyIndicatorDataSetDefinition createCohortMonthlyLocationDataSetIII() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createCohortMonthlyBaseDataSetIII());
		ldsd.setName("Monthly Cohort Data Set Three");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetIII() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createCohortMonthlyIndicatorsIII(dsd);
		return dsd;
	}
	
	// III. Mental Health/ Sant√© mentale
	
	public LocationHierachyIndicatorDataSetDefinition createCohortMonthlyLocationDataSetIV() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createCohortMonthlyBaseDataSetIV());
		ldsd.setName("Monthly Cohort Data Set Four");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetIV() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createCohortMonthlyIndicatorsIV(dsd);
		return dsd;
	}
	
	// V. Other Cardiovascular and Kidney diseases
	
	public LocationHierachyIndicatorDataSetDefinition createCohortMonthlyLocationDataSetV() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createCohortMonthlyBaseDataSetV());
		ldsd.setName("Monthly Cohort Data Set Five");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetV() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createCohortMonthlyIndicatorsV(dsd);
		return dsd;
	}
	
	// VI. Injuries
	
	public LocationHierachyIndicatorDataSetDefinition createCohortMonthlyLocationDataSetVI() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createCohortMonthlyBaseDataSetVI());
		ldsd.setName("Monthly Cohort Data Set Six");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetVI() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createCohortMonthlyIndicatorsVI(dsd);
		return dsd;
	}
	
	// VII. Palliative care
	
	public LocationHierachyIndicatorDataSetDefinition createCohortMonthlyLocationDataSetVII() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createCohortMonthlyBaseDataSetVII());
		ldsd.setName("Monthly Cohort Data Set Seven");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetVII() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		
		createCohortMonthlyIndicatorsVII(dsd);
		return dsd;
	}
	
	// VIII. Community Checkup
	
	public LocationHierachyIndicatorDataSetDefinition createCohortMonthlyLocationDataSetVIII() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createCohortMonthlyBaseDataSetVIII());
		ldsd.setName("Monthly Cohort Data Set Eight");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetVIII() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createCohortMonthlyIndicatorsVIII(dsd);
		return dsd;
	}
	
	// IX.  Cancer screening
	
	public LocationHierachyIndicatorDataSetDefinition createCohortMonthlyLocationDataSetIX() {
		
		LocationHierachyIndicatorDataSetDefinition ldsd = new LocationHierachyIndicatorDataSetDefinition(
		        createCohortMonthlyBaseDataSetIX());
		ldsd.setName("Monthly Cohort Data Set Nine");
		ldsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		ldsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		ldsd.addParameter(new Parameter("location", "District", LocationHierarchy.class));
		return ldsd;
	}
	
	private CohortIndicatorDataSetDefinition createCohortMonthlyBaseDataSetIX() {
		CohortIndicatorDataSetDefinition dsd = new CohortIndicatorDataSetDefinition();
		dsd.setName("Monthly Cohort Data Set");
		dsd.addParameter(new Parameter("startDate", "Start Date", Date.class));
		dsd.addParameter(new Parameter("endDate", "End Date", Date.class));
		createCohortMonthlyIndicatorsIX(dsd);
		return dsd;
	}
	
	// II. Outpatient Consultations/ Consultations Externes: EncounterIndicatorDataSetDefinition
	
	private void createEncounterMonthlyIndicatorsII(EncounterIndicatorDataSetDefinition dsd) {
		
		// A) Outpatient Morbidity summary table/ Tableau synth√©tique Consultations externes
		
		//Outpatient visits/Consultations Externes
		
		//New Case
		
		// Male Under 5 years
		
		SqlEncounterQuery outpatientVisitsNewCaseMaleUnder5Years = new SqlEncounterQuery();
		outpatientVisitsNewCaseMaleUnder5Years.setName("outpatientVisitsNewCaseMaleUnder5Years");
		outpatientVisitsNewCaseMaleUnder5Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='M' and DATEDIFF(:endDate , p.birthdate) < 1825 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " group by e.encounter_datetime");
		// adultHivVisits.setQuery("select e.encounter_id from encounter e, person p where e.encounter_type in ("+pediHIVEncounterType.getEncounterTypeId()+","+adultHIVEncounterType.getEncounterTypeId()+") and e.encounter_datetime >= :startDate and e.encounter_datetime <= :endDate and p.person_id = e.patient_id and DATEDIFF(:endDate , p.birthdate) >=5475 and e.voided=0 and p.voided=0");
		outpatientVisitsNewCaseMaleUnder5Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsNewCaseMaleUnder5Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsNewCaseMaleUnder5YearsIndicator = new EncounterIndicator();
		outpatientVisitsNewCaseMaleUnder5YearsIndicator.setName("outpatientVisitsNewCaseMaleUnder5YearsIndicator");
		outpatientVisitsNewCaseMaleUnder5YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsNewCaseMaleUnder5Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsNewCaseMaleUnder5YearsIndicator);
		
		// Female Under 5 years
		
		SqlEncounterQuery outpatientVisitsNewCaseFemaleUnder5Years = new SqlEncounterQuery();
		outpatientVisitsNewCaseFemaleUnder5Years.setName("outpatientVisitsNewCaseFemaleUnder5Years");
		outpatientVisitsNewCaseFemaleUnder5Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='F' and DATEDIFF(:endDate , p.birthdate) < 1825 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsNewCaseFemaleUnder5Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsNewCaseFemaleUnder5Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsNewCaseFemaleUnder5YearsIndicator = new EncounterIndicator();
		outpatientVisitsNewCaseFemaleUnder5YearsIndicator.setName("outpatientVisitsNewCaseFemaleUnder5YearsIndicator");
		outpatientVisitsNewCaseFemaleUnder5YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsNewCaseFemaleUnder5Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsNewCaseFemaleUnder5YearsIndicator);
		
		// Male >=5 - 19 y
		
		SqlEncounterQuery outpatientVisitsNewCaseMaleBetween5And19Years = new SqlEncounterQuery();
		outpatientVisitsNewCaseMaleBetween5And19Years.setName("outpatientVisitsNewCaseMaleBetween5And19Years");
		outpatientVisitsNewCaseMaleBetween5And19Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='M' and DATEDIFF(:endDate , p.birthdate) >= 1825 and DATEDIFF(:endDate , p.birthdate) < 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " group by e.encounter_datetime");
		// adultHivVisits.setQuery("select e.encounter_id from encounter e, person p where e.encounter_type in ("+pediHIVEncounterType.getEncounterTypeId()+","+adultHIVEncounterType.getEncounterTypeId()+") and e.encounter_datetime >= :startDate and e.encounter_datetime <= :endDate and p.person_id = e.patient_id and DATEDIFF(:endDate , p.birthdate) >=5475 and e.voided=0 and p.voided=0");
		outpatientVisitsNewCaseMaleBetween5And19Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsNewCaseMaleBetween5And19Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsNewCaseMaleBetween5And19YearsIndicator = new EncounterIndicator();
		outpatientVisitsNewCaseMaleBetween5And19YearsIndicator
		        .setName("outpatientVisitsNewCaseMaleBetween5And19YearsIndicator");
		outpatientVisitsNewCaseMaleBetween5And19YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsNewCaseMaleUnder5Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsNewCaseMaleBetween5And19YearsIndicator);
		
		// Female >=5 - 19 y
		
		SqlEncounterQuery outpatientVisitsNewCaseFemaleBetween5And19Years = new SqlEncounterQuery();
		outpatientVisitsNewCaseFemaleBetween5And19Years.setName("outpatientVisitsNewCaseFemaleBetween5And19Years");
		outpatientVisitsNewCaseFemaleBetween5And19Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='F' and DATEDIFF(:endDate , p.birthdate) >= 1825 and DATEDIFF(:endDate , p.birthdate) < 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsNewCaseFemaleBetween5And19Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsNewCaseFemaleBetween5And19Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsNewCaseFemaleBetween5And19YearsIndicator = new EncounterIndicator();
		outpatientVisitsNewCaseFemaleBetween5And19YearsIndicator
		        .setName("outpatientVisitsNewCaseFemaleBetween5And19YearsIndicator");
		outpatientVisitsNewCaseFemaleBetween5And19YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsNewCaseFemaleBetween5And19Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsNewCaseFemaleBetween5And19YearsIndicator);
		
		// Male >=20 y
		
		SqlEncounterQuery outpatientVisitsNewCaseMaleEqualAndAbove20Years = new SqlEncounterQuery();
		outpatientVisitsNewCaseMaleEqualAndAbove20Years.setName("outpatientVisitsNewCaseMaleEqualAndAbove20Years");
		outpatientVisitsNewCaseMaleEqualAndAbove20Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='M' and DATEDIFF(:endDate , p.birthdate) >= 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsNewCaseMaleEqualAndAbove20Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsNewCaseMaleEqualAndAbove20Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsNewCaseMaleEqualAndAbove20YearsIndicator = new EncounterIndicator();
		outpatientVisitsNewCaseMaleEqualAndAbove20YearsIndicator
		        .setName("outpatientVisitsNewCaseMaleEqualAndAbove20YearsIndicator");
		outpatientVisitsNewCaseMaleEqualAndAbove20YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsNewCaseMaleEqualAndAbove20Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsNewCaseMaleEqualAndAbove20YearsIndicator);
		
		// Female >=20 y
		
		SqlEncounterQuery outpatientVisitsNewCaseFemaleEqualAndAbove20Years = new SqlEncounterQuery();
		outpatientVisitsNewCaseFemaleEqualAndAbove20Years.setName("outpatientVisitsNewCaseFemaleEqualAndAbove20Years");
		outpatientVisitsNewCaseFemaleEqualAndAbove20Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='F' and DATEDIFF(:endDate , p.birthdate) >= 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsNewCaseFemaleEqualAndAbove20Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsNewCaseFemaleEqualAndAbove20Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsNewCaseFemaleEqualAndAbove20YearsIndicator = new EncounterIndicator();
		outpatientVisitsNewCaseFemaleEqualAndAbove20YearsIndicator
		        .setName("outpatientVisitsNewCaseFemaleEqualAndAbove20YearsIndicator");
		outpatientVisitsNewCaseFemaleEqualAndAbove20YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsNewCaseFemaleEqualAndAbove20Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsNewCaseFemaleEqualAndAbove20YearsIndicator);
		
		//===========================================
		//Old Case									//
		//===========================================
		
		// Male Under 5 years
		
		SqlEncounterQuery outpatientVisitsoldCaseMaleUnder5Years = new SqlEncounterQuery();
		outpatientVisitsoldCaseMaleUnder5Years.setName("outpatientVisitsoldCaseMaleUnder5Years");
		outpatientVisitsoldCaseMaleUnder5Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='M' and DATEDIFF(:endDate , p.birthdate) < 1825 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + oldCase.getConceptId()
		                + " group by e.encounter_datetime");
		// adultHivVisits.setQuery("select e.encounter_id from encounter e, person p where e.encounter_type in ("+pediHIVEncounterType.getEncounterTypeId()+","+adultHIVEncounterType.getEncounterTypeId()+") and e.encounter_datetime >= :startDate and e.encounter_datetime <= :endDate and p.person_id = e.patient_id and DATEDIFF(:endDate , p.birthdate) >=5475 and e.voided=0 and p.voided=0");
		outpatientVisitsoldCaseMaleUnder5Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsoldCaseMaleUnder5Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsoldCaseMaleUnder5YearsIndicator = new EncounterIndicator();
		outpatientVisitsoldCaseMaleUnder5YearsIndicator.setName("outpatientVisitsoldCaseMaleUnder5YearsIndicator");
		outpatientVisitsoldCaseMaleUnder5YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsoldCaseMaleUnder5Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsoldCaseMaleUnder5YearsIndicator);
		
		// Female Under 5 years
		
		SqlEncounterQuery outpatientVisitsoldCaseFemaleUnder5Years = new SqlEncounterQuery();
		outpatientVisitsoldCaseFemaleUnder5Years.setName("outpatientVisitsoldCaseFemaleUnder5Years");
		outpatientVisitsoldCaseFemaleUnder5Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='F' and DATEDIFF(:endDate , p.birthdate) < 1825 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + oldCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsoldCaseFemaleUnder5Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsoldCaseFemaleUnder5Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsoldCaseFemaleUnder5YearsIndicator = new EncounterIndicator();
		outpatientVisitsoldCaseFemaleUnder5YearsIndicator.setName("outpatientVisitsoldCaseFemaleUnder5YearsIndicator");
		outpatientVisitsoldCaseFemaleUnder5YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsoldCaseFemaleUnder5Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsoldCaseFemaleUnder5YearsIndicator);
		
		// Male >=5 - 19 y
		
		SqlEncounterQuery outpatientVisitsoldCaseMaleBetween5And19Years = new SqlEncounterQuery();
		outpatientVisitsoldCaseMaleBetween5And19Years.setName("outpatientVisitsoldCaseMaleBetween5And19Years");
		outpatientVisitsoldCaseMaleBetween5And19Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='M' and DATEDIFF(:endDate , p.birthdate) >= 1825 and DATEDIFF(:endDate , p.birthdate) < 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + oldCase.getConceptId()
		                + " group by e.encounter_datetime");
		// adultHivVisits.setQuery("select e.encounter_id from encounter e, person p where e.encounter_type in ("+pediHIVEncounterType.getEncounterTypeId()+","+adultHIVEncounterType.getEncounterTypeId()+") and e.encounter_datetime >= :startDate and e.encounter_datetime <= :endDate and p.person_id = e.patient_id and DATEDIFF(:endDate , p.birthdate) >=5475 and e.voided=0 and p.voided=0");
		outpatientVisitsoldCaseMaleBetween5And19Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsoldCaseMaleBetween5And19Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsoldCaseMaleBetween5And19YearsIndicator = new EncounterIndicator();
		outpatientVisitsoldCaseMaleBetween5And19YearsIndicator
		        .setName("outpatientVisitsoldCaseMaleBetween5And19YearsIndicator");
		outpatientVisitsoldCaseMaleBetween5And19YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsoldCaseMaleUnder5Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsoldCaseMaleBetween5And19YearsIndicator);
		
		// Female >=5 - 19 y
		
		SqlEncounterQuery outpatientVisitsoldCaseFemaleBetween5And19Years = new SqlEncounterQuery();
		outpatientVisitsoldCaseFemaleBetween5And19Years.setName("outpatientVisitsoldCaseFemaleBetween5And19Years");
		outpatientVisitsoldCaseFemaleBetween5And19Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='F' and DATEDIFF(:endDate , p.birthdate) >= 1825 and DATEDIFF(:endDate , p.birthdate) < 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + oldCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsoldCaseFemaleBetween5And19Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsoldCaseFemaleBetween5And19Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsoldCaseFemaleBetween5And19YearsIndicator = new EncounterIndicator();
		outpatientVisitsoldCaseFemaleBetween5And19YearsIndicator
		        .setName("outpatientVisitsoldCaseFemaleBetween5And19YearsIndicator");
		outpatientVisitsoldCaseFemaleBetween5And19YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsoldCaseFemaleBetween5And19Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsoldCaseFemaleBetween5And19YearsIndicator);
		
		// Male >=20 y
		
		SqlEncounterQuery outpatientVisitsoldCaseMaleEqualAndAbove20Years = new SqlEncounterQuery();
		outpatientVisitsoldCaseMaleEqualAndAbove20Years.setName("outpatientVisitsoldCaseMaleEqualAndAbove20Years");
		outpatientVisitsoldCaseMaleEqualAndAbove20Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='M' and DATEDIFF(:endDate , p.birthdate) >= 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + oldCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsoldCaseMaleEqualAndAbove20Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsoldCaseMaleEqualAndAbove20Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsoldCaseMaleEqualAndAbove20YearsIndicator = new EncounterIndicator();
		outpatientVisitsoldCaseMaleEqualAndAbove20YearsIndicator
		        .setName("outpatientVisitsoldCaseMaleEqualAndAbove20YearsIndicator");
		outpatientVisitsoldCaseMaleEqualAndAbove20YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsoldCaseMaleEqualAndAbove20Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsoldCaseMaleEqualAndAbove20YearsIndicator);
		
		// Female >=20 y
		
		SqlEncounterQuery outpatientVisitsoldCaseFemaleEqualAndAbove20Years = new SqlEncounterQuery();
		outpatientVisitsoldCaseFemaleEqualAndAbove20Years.setName("outpatientVisitsoldCaseFemaleEqualAndAbove20Years");
		outpatientVisitsoldCaseFemaleEqualAndAbove20Years
		        .setQuery("select e.encounter_id from encounter e, obs o, person p where e.encounter_id=o.encounter_id and o.person_id=p.person_id and p.gender='F' and DATEDIFF(:endDate , p.birthdate) >= 7300 and e.encounter_datetime>= :startDate and e.encounter_datetime<= :endDate and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + oldCase.getConceptId()
		                + " group by e.encounter_datetime");
		outpatientVisitsoldCaseFemaleEqualAndAbove20Years.addParameter(new Parameter("startDate", "startDate", Date.class));
		outpatientVisitsoldCaseFemaleEqualAndAbove20Years.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		EncounterIndicator outpatientVisitsoldCaseFemaleEqualAndAbove20YearsIndicator = new EncounterIndicator();
		outpatientVisitsoldCaseFemaleEqualAndAbove20YearsIndicator
		        .setName("outpatientVisitsoldCaseFemaleEqualAndAbove20YearsIndicator");
		outpatientVisitsoldCaseFemaleEqualAndAbove20YearsIndicator.setEncounterQuery(new Mapped<EncounterQuery>(
		        outpatientVisitsoldCaseFemaleEqualAndAbove20Years, ParameterizableUtil
		                .createParameterMappings("endDate=${endDate},startDate=${startDate}")));
		
		dsd.addColumn(outpatientVisitsoldCaseFemaleEqualAndAbove20YearsIndicator);
		
	}
	
	// II. Outpatient Consultations/ Consultations Externes : CohortIndicatorDataSetDefinition
	private void createCohortMonthlyIndicatorsII(CohortIndicatorDataSetDefinition dsd) {
		
		//B) Health insurance status of new cases/ Assurance maladies pour nouveaux cas
		
		SqlCohortDefinition newcasePatientsWithInsurance = new SqlCohortDefinition(
		        "select o.person_id from obs o, moh_bill_insurance_policy ip where o.person_id=ip.owner and DATEDIFF(ip.expiration_date , o.obs_datetime) >= 0 and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate and o.voided=0  and ip.insurance_id!="
		                + noneInsuranceID + " group by o.person_id");
		newcasePatientsWithInsurance.setName("newcasePatientsWithInsurance");
		newcasePatientsWithInsurance.addParameter(new Parameter("startDate", "startDate", Date.class));
		newcasePatientsWithInsurance.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		CohortIndicator newcasePatientsWithInsuranceIndicator = Indicators.newCountIndicator(
		    "newcasePatientsWithInsuranceInicator", newcasePatientsWithInsurance,
		    ParameterizableUtil.createParameterMappings("endDate=${endDate},startDate=${startDate}"));
		
		dsd.addColumn(
		    "II.B.1",
		    "Insured  (Mutuelle or other insurance members)/Assur√©s  (Mutuelle ou autres assurances)",
		    new Mapped(newcasePatientsWithInsuranceIndicator, ParameterizableUtil
		            .createParameterMappings("endDate=${endDate},startDate=${startDate}")), "");
		
		String insurance_card_no = "CONCAT('%', ip.insurance_card_no ,'%')";
		
		//SqlCohortDefinition nonPayingNewcasesPatient=new SqlCohortDefinition("select o.person_id from obs o, moh_bill_insurance_policy ip where o.person_id=ip.owner and DATEDIFF(ip.expiration_date , o.obs_datetime) >= 0 and o.concept_id="+caseStatus.getConceptId()+" and o.value_coded="+newCase+" and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate and o.voided=0 and gb.bill_identifier like "+insurance_card_no+" and gb.global_amount=0 and gb.closed=1 and gb.created_date>= :startDate and gb.closing_date<= :endDate and gb.voided=0 group by o.person_id");
		SqlCohortDefinition nonPayingNewcasesPatient = new SqlCohortDefinition(
		        "select o.person_id from obs o, moh_bill_insurance_policy ip,moh_bill_global_bill gb where o.person_id=ip.owner and DATEDIFF(ip.expiration_date , o.obs_datetime) >= 0 and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " and o.obs_datetime>=:startDate and o.obs_datetime<=:endDate and o.voided=0 and gb.bill_identifier like "
		                + insurance_card_no
		                + " and gb.global_amount=0 and gb.closed=1 and gb.created_date>=:startDate and gb.closing_date<=:endDate and gb.voided=0 group by o.person_id");
		nonPayingNewcasesPatient.setName("nonPayingNewcasesPatient");
		nonPayingNewcasesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		nonPayingNewcasesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		CohortIndicator nonPayingNewcasesPatientIndicator = Indicators.newCountIndicator(
		    "nonPayingNewcasesPatientIndicator", nonPayingNewcasesPatient,
		    ParameterizableUtil.createParameterMappings("endDate=${endDate},startDate=${startDate}"));
		
		dsd.addColumn(
		    "II.B.2",
		    "Non-Paying New cases/ Nouveaux cas non-payant",
		    new Mapped(nonPayingNewcasesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("endDate=${endDate},startDate=${startDate}")), "");
		
		SqlCohortDefinition indigentPatientsnonPayingNewcasesPatient = new SqlCohortDefinition(
		        "select o.person_id from obs o, moh_bill_insurance_policy ip,moh_bill_global_bill gb where o.person_id=ip.owner and DATEDIFF(ip.expiration_date , o.obs_datetime) >= 0 and o.concept_id="
		                + caseStatus.getConceptId()
		                + " and o.value_coded="
		                + newCase.getConceptId()
		                + " and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate and o.voided=0  and ip.insurance_id in ("
		                + indigentsInsuranceIDs
		                + ") and gb.bill_identifier like "
		                + insurance_card_no
		                + " and gb.global_amount=0 and gb.closed=1 and gb.created_date>= :startDate and gb.closing_date<= :endDate and gb.voided=0 group by o.person_id");
		indigentPatientsnonPayingNewcasesPatient.setName("indigentPatientsnonPayingNewcasesPatient");
		indigentPatientsnonPayingNewcasesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		indigentPatientsnonPayingNewcasesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		CohortIndicator indigentPatientsnonPayingNewcasesPatientIndicator = Indicators.newCountIndicator(
		    "indigentPatientsnonPayingNewcasesPatientIndicator", indigentPatientsnonPayingNewcasesPatient,
		    ParameterizableUtil.createParameterMappings("endDate=${endDate},startDate=${startDate}"));
		
		dsd.addColumn(
		    "II.B.3",
		    "Number of Indigent new cases/ Nombre d‚Äôindigents parmi les non payants",
		    new Mapped(indigentPatientsnonPayingNewcasesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("endDate=${endDate},startDate=${startDate}")), "");
		
		// E) New cases of priority health problems in General OPD/Nouveaux cas de maladies (Causes majeures de Consultation)
		
		AgeCohortDefinition patientBelowFiveYear = patientWithAgeBelow(5);
		
		GenderCohortDefinition males = new GenderCohortDefinition();
		males.setName("male Patients");
		males.setMaleIncluded(true);
		
		SqlCohortDefinition foodPoisoningPatient = patientWithICDCodeObsByStartDateAndEndDate("A05", caseStatus, newCase);
		
		//new SqlCohortDefinition("select o.person_id from obs o where o.value_coded in (select distinct concept_id from concept_name where name like '%A05%') and o.value_coded in (select distinct concept_id from concept where class_id="+ICDConceptClassId+") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate");
		
		//SqlCohortDefinition foodPoisoningPatient=new SqlCohortDefinition("select o.person_id from obs o where o.value_coded in (10201) and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate");
		//SqlCohortDefinition foodPoisoningPatient=new SqlCohortDefinition("select o.person_id from obs o,concept c where c.class_id=19 and o.value_coded=c.concept_id and o.voided=0 and o.obs_datetime>='2019-01-01' and o.obs_datetime<='2019-04-05'");
		/*foodPoisoningPatient.setName("foodPoisoningPatient");
		foodPoisoningPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		foodPoisoningPatient.addParameter(new Parameter("endDate", "endDate", Date.class));*/
		
		CompositionCohortDefinition maleBelow5FoodPoisoningPatient = new CompositionCohortDefinition();
		maleBelow5FoodPoisoningPatient.setName("maleBelow5FoodPoisoningPatient");
		maleBelow5FoodPoisoningPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5FoodPoisoningPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5FoodPoisoningPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5FoodPoisoningPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(foodPoisoningPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5FoodPoisoningPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5FoodPoisoningPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5FoodPoisoningPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5FoodPoisoningPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5FoodPoisoningPatientIndicator", maleBelow5FoodPoisoningPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.4.M.5",
		    "Food poisoning/ Intoxication alimentaire Male Under 5 years",
		    new Mapped(maleBelow5FoodPoisoningPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5FoodPoisoningPatient = new CompositionCohortDefinition();
		femaleBelow5FoodPoisoningPatient.setName("FemaleBelow5FoodPoisoningPatient");
		femaleBelow5FoodPoisoningPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5FoodPoisoningPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5FoodPoisoningPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5FoodPoisoningPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(foodPoisoningPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5FoodPoisoningPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5FoodPoisoningPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5FoodPoisoningPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5FoodPoisoningPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5FoodPoisoningPatientIndicator", femaleBelow5FoodPoisoningPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.4.F.5",
		    "Food poisoning/ Intoxication alimentaire Female Under 5 years",
		    new Mapped(femaleBelow5FoodPoisoningPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		AgeCohortDefinition patientBetweenFiveAndNineteenYears = patientWithAgeBetween(5, 19);
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsFoodPoisoningMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients.setName("betweenFiveAndNineteenYearsFoodPoisoningMalePatients");
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(foodPoisoningPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsFoodPoisoningMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsFoodPoisoningMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsFoodPoisoningMalePatientsIndicator",
		    betweenFiveAndNineteenYearsFoodPoisoningMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.4.M.5_19",
		    "Food poisoning/ Intoxication alimentaire Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsFoodPoisoningMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsFoodPoisoningFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients
		        .setName("betweenFiveAndNineteenYearsFoodPoisoningFemalePatients");
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(foodPoisoningPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsFoodPoisoningFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsFoodPoisoningFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsFoodPoisoningFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsFoodPoisoningFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.4.F.5_19",
		    "Food poisoning/ Intoxication alimentaire Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsFoodPoisoningFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		AgeCohortDefinition patientAbove20Years = patientWithAgeAbove(20);
		
		CompositionCohortDefinition above20YearsFoodPoisoningMalePatients = new CompositionCohortDefinition();
		above20YearsFoodPoisoningMalePatients.setName("above20YearsFoodPoisoningMalePatients");
		above20YearsFoodPoisoningMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsFoodPoisoningMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsFoodPoisoningMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsFoodPoisoningMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(foodPoisoningPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsFoodPoisoningMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsFoodPoisoningMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsFoodPoisoningMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsFoodPoisoningMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsFoodPoisoningMalePatientsIndicator", above20YearsFoodPoisoningMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.4.M.20",
		    "Food poisoning/ Intoxication alimentaire Male above 20 years",
		    new Mapped(above20YearsFoodPoisoningMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsFoodPoisoningFemalePatients = new CompositionCohortDefinition();
		above20YearsFoodPoisoningFemalePatients.setName("above20YearsFoodPoisoningFemalePatients");
		above20YearsFoodPoisoningFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsFoodPoisoningFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsFoodPoisoningFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsFoodPoisoningFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(foodPoisoningPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsFoodPoisoningFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsFoodPoisoningFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsFoodPoisoningFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsFoodPoisoningFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsFoodPoisoningFemalePatientsIndicator", above20YearsFoodPoisoningFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.4.F.20",
		    "Food poisoning/ Intoxication alimentaire Female above 20 years",
		    new Mapped(above20YearsFoodPoisoningFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//===================================================================================
		
		SqlCohortDefinition earInfectionsPatient = patientWithICDCodeObsByStartDateAndEndDate("H65", caseStatus, newCase);
		
		/*		new SqlCohortDefinition("select o.person_id from obs o where o.value_coded in (select distinct concept_id from concept_name where name like '%H65%') and o.value_coded in (select distinct concept_id from concept where class_id="+ICDConceptClassId+") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate");

		//SqlCohortDefinition earInfectionsPatient=new SqlCohortDefinition("select o.person_id from obs o where o.value_coded in (10201) and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate");
		//SqlCohortDefinition earInfectionsPatient=new SqlCohortDefinition("select o.person_id from obs o,concept c where c.class_id=19 and o.value_coded=c.concept_id and o.voided=0 and o.obs_datetime>='2019-01-01' and o.obs_datetime<='2019-04-05'");
		earInfectionsPatient.setName("earInfectionsPatient");
		earInfectionsPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		earInfectionsPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		*/
		
		CompositionCohortDefinition maleBelow5earInfectionsPatient = new CompositionCohortDefinition();
		maleBelow5earInfectionsPatient.setName("maleBelow5earInfectionsPatient");
		maleBelow5earInfectionsPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5earInfectionsPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5earInfectionsPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5earInfectionsPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(earInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5earInfectionsPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5earInfectionsPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5earInfectionsPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5earInfectionsPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5earInfectionsPatientIndicator", maleBelow5earInfectionsPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.5.M.5",
		    "Ear infections/ Infections de l‚Äôoreille Male Under 5 years",
		    new Mapped(maleBelow5earInfectionsPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5earInfectionsPatient = new CompositionCohortDefinition();
		femaleBelow5earInfectionsPatient.setName("FemaleBelow5earInfectionsPatient");
		femaleBelow5earInfectionsPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5earInfectionsPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5earInfectionsPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5earInfectionsPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(earInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5earInfectionsPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5earInfectionsPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5earInfectionsPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5earInfectionsPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5earInfectionsPatientIndicator", femaleBelow5earInfectionsPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.5.F.5",
		    "Ear infections/ Infections de l‚Äôoreille Female Under 5 years",
		    new Mapped(femaleBelow5earInfectionsPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsearInfectionsMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsearInfectionsMalePatients.setName("betweenFiveAndNineteenYearsearInfectionsMalePatients");
		betweenFiveAndNineteenYearsearInfectionsMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsearInfectionsMalePatients
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsearInfectionsMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsearInfectionsMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(earInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsearInfectionsMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsearInfectionsMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsearInfectionsMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsearInfectionsMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsearInfectionsMalePatientsIndicator",
		    betweenFiveAndNineteenYearsearInfectionsMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.5.M.5_19",
		    "Ear infections/ Infections de l‚Äôoreille Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsearInfectionsMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsearInfectionsFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsearInfectionsFemalePatients
		        .setName("betweenFiveAndNineteenYearsearInfectionsFemalePatients");
		betweenFiveAndNineteenYearsearInfectionsFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsearInfectionsFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsearInfectionsFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsearInfectionsFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(earInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsearInfectionsFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsearInfectionsFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsearInfectionsFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsearInfectionsFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsearInfectionsFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsearInfectionsFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.5.F.5_19",
		    "Ear infections/ Infections de l‚Äôoreille Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsearInfectionsFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsearInfectionsMalePatients = new CompositionCohortDefinition();
		above20YearsearInfectionsMalePatients.setName("above20YearsearInfectionsMalePatients");
		above20YearsearInfectionsMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsearInfectionsMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsearInfectionsMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsearInfectionsMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(earInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsearInfectionsMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsearInfectionsMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsearInfectionsMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsearInfectionsMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsearInfectionsMalePatientsIndicator", above20YearsearInfectionsMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.5.M.20",
		    "Ear infections/ Infections de l‚Äôoreille Male above 20 years",
		    new Mapped(above20YearsearInfectionsMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsearInfectionsFemalePatients = new CompositionCohortDefinition();
		above20YearsearInfectionsFemalePatients.setName("above20YearsearInfectionsFemalePatients");
		above20YearsearInfectionsFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsearInfectionsFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsearInfectionsFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsearInfectionsFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(earInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsearInfectionsFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsearInfectionsFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsearInfectionsFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsearInfectionsFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsearInfectionsFemalePatientsIndicator", above20YearsearInfectionsFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.5.F.20",
		    "Ear infections/ Infections de l‚Äôoreille Female above 20 years",
		    new Mapped(above20YearsearInfectionsFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//=========================================================================================================
		
		SqlCohortDefinition schistosomiasisPatient = patientWithICDCodeObsByStartDateAndEndDate("B65", caseStatus, newCase);
		
		/*		new SqlCohortDefinition("select o.person_id from obs o where o.value_coded in (select distinct concept_id from concept_name where name like '%B65%') and o.value_coded in (select distinct concept_id from concept where class_id="+ICDConceptClassId+") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate");

		//SqlCohortDefinition schistosomiasisPatient=new SqlCohortDefinition("select o.person_id from obs o where o.value_coded in (10201) and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate");
		//SqlCohortDefinition schistosomiasisPatient=new SqlCohortDefinition("select o.person_id from obs o,concept c where c.class_id=19 and o.value_coded=c.concept_id and o.voided=0 and o.obs_datetime>='2019-01-01' and o.obs_datetime<='2019-04-05'");
		schistosomiasisPatient.setName("schistosomiasisPatient");
		schistosomiasisPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		schistosomiasisPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		*/
		
		CompositionCohortDefinition maleBelow5schistosomiasisPatient = new CompositionCohortDefinition();
		maleBelow5schistosomiasisPatient.setName("maleBelow5schistosomiasisPatient");
		maleBelow5schistosomiasisPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5schistosomiasisPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5schistosomiasisPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5schistosomiasisPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(schistosomiasisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5schistosomiasisPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5schistosomiasisPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5schistosomiasisPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5schistosomiasisPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5schistosomiasisPatientIndicator", maleBelow5schistosomiasisPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.6.M.5",
		    "Schistosomiasis/ Schistosomiasis Male Under 5 years",
		    new Mapped(maleBelow5schistosomiasisPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5schistosomiasisPatient = new CompositionCohortDefinition();
		femaleBelow5schistosomiasisPatient.setName("FemaleBelow5schistosomiasisPatient");
		femaleBelow5schistosomiasisPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5schistosomiasisPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5schistosomiasisPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5schistosomiasisPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(schistosomiasisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5schistosomiasisPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5schistosomiasisPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5schistosomiasisPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5schistosomiasisPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5schistosomiasisPatientIndicator", femaleBelow5schistosomiasisPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.6.F.5",
		    "Schistosomiasis/ Schistosomiasis Female Under 5 years",
		    new Mapped(femaleBelow5schistosomiasisPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsschistosomiasisMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsschistosomiasisMalePatients
		        .setName("betweenFiveAndNineteenYearsschistosomiasisMalePatients");
		betweenFiveAndNineteenYearsschistosomiasisMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsschistosomiasisMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsschistosomiasisMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsschistosomiasisMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(schistosomiasisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsschistosomiasisMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsschistosomiasisMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsschistosomiasisMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsschistosomiasisMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsschistosomiasisMalePatientsIndicator",
		    betweenFiveAndNineteenYearsschistosomiasisMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.6.M.5_19",
		    "Schistosomiasis/ Schistosomiasis Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsschistosomiasisMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsschistosomiasisFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients
		        .setName("betweenFiveAndNineteenYearsschistosomiasisFemalePatients");
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(schistosomiasisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsschistosomiasisFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsschistosomiasisFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsschistosomiasisFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsschistosomiasisFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.6.F.5_19",
		    "Schistosomiasis/ Schistosomiasis Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsschistosomiasisFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsschistosomiasisMalePatients = new CompositionCohortDefinition();
		above20YearsschistosomiasisMalePatients.setName("above20YearsschistosomiasisMalePatients");
		above20YearsschistosomiasisMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsschistosomiasisMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsschistosomiasisMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsschistosomiasisMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(schistosomiasisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsschistosomiasisMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsschistosomiasisMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsschistosomiasisMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsschistosomiasisMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsschistosomiasisMalePatientsIndicator", above20YearsschistosomiasisMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.6.M.20",
		    "Schistosomiasis/ Schistosomiasis Male above 20 years",
		    new Mapped(above20YearsschistosomiasisMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsschistosomiasisFemalePatients = new CompositionCohortDefinition();
		above20YearsschistosomiasisFemalePatients.setName("above20YearsschistosomiasisFemalePatients");
		above20YearsschistosomiasisFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsschistosomiasisFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsschistosomiasisFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsschistosomiasisFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(schistosomiasisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsschistosomiasisFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsschistosomiasisFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsschistosomiasisFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsschistosomiasisFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsschistosomiasisFemalePatientsIndicator", above20YearsschistosomiasisFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.6.F.20",
		    "Schistosomiasis/ Schistosomiasis Female above 20 years",
		    new Mapped(above20YearsschistosomiasisFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//==============================================================================
		
		// D.7. Ascaris lumbricoides/ Ascaris lumbricoides
		
		SqlCohortDefinition ascarisLumbricoidesPatient = patientWithICDCodeObsByStartDateAndEndDate("B77", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5ascarisLumbricoidesPatient = new CompositionCohortDefinition();
		maleBelow5ascarisLumbricoidesPatient.setName("maleBelow5ascarisLumbricoidesPatient");
		maleBelow5ascarisLumbricoidesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5ascarisLumbricoidesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5ascarisLumbricoidesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5ascarisLumbricoidesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ascarisLumbricoidesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5ascarisLumbricoidesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5ascarisLumbricoidesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5ascarisLumbricoidesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5ascarisLumbricoidesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5ascarisLumbricoidesPatientIndicator", maleBelow5ascarisLumbricoidesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.7.M.5",
		    "Ascaris lumbricoides/ Ascaris lumbricoides Male Under 5 years",
		    new Mapped(maleBelow5ascarisLumbricoidesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5ascarisLumbricoidesPatient = new CompositionCohortDefinition();
		femaleBelow5ascarisLumbricoidesPatient.setName("FemaleBelow5ascarisLumbricoidesPatient");
		femaleBelow5ascarisLumbricoidesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5ascarisLumbricoidesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5ascarisLumbricoidesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5ascarisLumbricoidesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ascarisLumbricoidesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5ascarisLumbricoidesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5ascarisLumbricoidesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5ascarisLumbricoidesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5ascarisLumbricoidesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5ascarisLumbricoidesPatientIndicator", femaleBelow5ascarisLumbricoidesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.7.F.5",
		    "Ascaris lumbricoides/ Ascaris lumbricoides Female Under 5 years",
		    new Mapped(femaleBelow5ascarisLumbricoidesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients
		        .setName("betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients");
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ascarisLumbricoidesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsascarisLumbricoidesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsascarisLumbricoidesMalePatientsIndicator",
		    betweenFiveAndNineteenYearsascarisLumbricoidesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.7.M.5_19",
		    "Ascaris lumbricoides/ Ascaris lumbricoides Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsascarisLumbricoidesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients
		        .setName("betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients");
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ascarisLumbricoidesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.7.F.5_19",
		    "Ascaris lumbricoides/ Ascaris lumbricoides Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsascarisLumbricoidesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsascarisLumbricoidesMalePatients = new CompositionCohortDefinition();
		above20YearsascarisLumbricoidesMalePatients.setName("above20YearsascarisLumbricoidesMalePatients");
		above20YearsascarisLumbricoidesMalePatients
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsascarisLumbricoidesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsascarisLumbricoidesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsascarisLumbricoidesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ascarisLumbricoidesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsascarisLumbricoidesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsascarisLumbricoidesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsascarisLumbricoidesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsascarisLumbricoidesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsascarisLumbricoidesMalePatientsIndicator", above20YearsascarisLumbricoidesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.7.M.20",
		    "Ascaris lumbricoides/ Ascaris lumbricoides Male above 20 years",
		    new Mapped(above20YearsascarisLumbricoidesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsascarisLumbricoidesFemalePatients = new CompositionCohortDefinition();
		above20YearsascarisLumbricoidesFemalePatients.setName("above20YearsascarisLumbricoidesFemalePatients");
		above20YearsascarisLumbricoidesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsascarisLumbricoidesFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsascarisLumbricoidesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsascarisLumbricoidesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ascarisLumbricoidesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsascarisLumbricoidesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsascarisLumbricoidesFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsascarisLumbricoidesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsascarisLumbricoidesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsascarisLumbricoidesFemalePatientsIndicator", above20YearsascarisLumbricoidesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.7.F.20",
		    "Ascaris lumbricoides/ Ascaris lumbricoides Female above 20 years",
		    new Mapped(above20YearsascarisLumbricoidesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//  D.8. Trichuris trichiura/Trichocephale
		
		SqlCohortDefinition trichiuraTrichocephalePatient = patientWithICDCodeObsByStartDateAndEndDate("B79", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5trichiuraTrichocephalePatient = new CompositionCohortDefinition();
		maleBelow5trichiuraTrichocephalePatient.setName("maleBelow5trichiuraTrichocephalePatient");
		maleBelow5trichiuraTrichocephalePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5trichiuraTrichocephalePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5trichiuraTrichocephalePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5trichiuraTrichocephalePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(trichiuraTrichocephalePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5trichiuraTrichocephalePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5trichiuraTrichocephalePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5trichiuraTrichocephalePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5trichiuraTrichocephalePatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5trichiuraTrichocephalePatientIndicator", maleBelow5trichiuraTrichocephalePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.8.M.5",
		    "Trichuris trichiura/Trichocephale Male Under 5 years",
		    new Mapped(maleBelow5trichiuraTrichocephalePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5trichiuraTrichocephalePatient = new CompositionCohortDefinition();
		femaleBelow5trichiuraTrichocephalePatient.setName("FemaleBelow5trichiuraTrichocephalePatient");
		femaleBelow5trichiuraTrichocephalePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5trichiuraTrichocephalePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5trichiuraTrichocephalePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5trichiuraTrichocephalePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(trichiuraTrichocephalePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5trichiuraTrichocephalePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5trichiuraTrichocephalePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5trichiuraTrichocephalePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5trichiuraTrichocephalePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5trichiuraTrichocephalePatientIndicator", femaleBelow5trichiuraTrichocephalePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.8.F.5",
		    "Trichuris trichiura/Trichocephale Female Under 5 years",
		    new Mapped(femaleBelow5trichiuraTrichocephalePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients
		        .setName("betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients");
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(trichiuraTrichocephalePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatientsIndicator",
		            betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.8.M.5_19",
		    "Trichuris trichiura/Trichocephale Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearstrichiuraTrichocephaleMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients
		        .setName("betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients");
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(trichiuraTrichocephalePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatientsIndicator",
		            betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.8.F.5_19",
		    "Trichuris trichiura/Trichocephale Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearstrichiuraTrichocephaleFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearstrichiuraTrichocephaleMalePatients = new CompositionCohortDefinition();
		above20YearstrichiuraTrichocephaleMalePatients.setName("above20YearstrichiuraTrichocephaleMalePatients");
		above20YearstrichiuraTrichocephaleMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearstrichiuraTrichocephaleMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearstrichiuraTrichocephaleMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearstrichiuraTrichocephaleMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(trichiuraTrichocephalePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearstrichiuraTrichocephaleMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearstrichiuraTrichocephaleMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearstrichiuraTrichocephaleMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearstrichiuraTrichocephaleMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearstrichiuraTrichocephaleMalePatientsIndicator", above20YearstrichiuraTrichocephaleMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.8.M.20",
		    "Trichuris trichiura/Trichocephale Male above 20 years",
		    new Mapped(above20YearstrichiuraTrichocephaleMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearstrichiuraTrichocephaleFemalePatients = new CompositionCohortDefinition();
		above20YearstrichiuraTrichocephaleFemalePatients.setName("above20YearstrichiuraTrichocephaleFemalePatients");
		above20YearstrichiuraTrichocephaleFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearstrichiuraTrichocephaleFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearstrichiuraTrichocephaleFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearstrichiuraTrichocephaleFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(trichiuraTrichocephalePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearstrichiuraTrichocephaleFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearstrichiuraTrichocephaleFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearstrichiuraTrichocephaleFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearstrichiuraTrichocephaleFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearstrichiuraTrichocephaleFemalePatientsIndicator", above20YearstrichiuraTrichocephaleFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.8.F.20",
		    "Trichuris trichiura/Trichocephale Female above 20 years",
		    new Mapped(above20YearstrichiuraTrichocephaleFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// D.9. Hookworm/ Ankylostome
		
		SqlCohortDefinition hookwormAnkylostomePatient = patientWithICDCodeObsByStartDateAndEndDate("B76", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5hookwormAnkylostomePatient = new CompositionCohortDefinition();
		maleBelow5hookwormAnkylostomePatient.setName("maleBelow5hookwormAnkylostomePatient");
		maleBelow5hookwormAnkylostomePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5hookwormAnkylostomePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5hookwormAnkylostomePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5hookwormAnkylostomePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(hookwormAnkylostomePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5hookwormAnkylostomePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5hookwormAnkylostomePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5hookwormAnkylostomePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5hookwormAnkylostomePatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5hookwormAnkylostomePatientIndicator", maleBelow5hookwormAnkylostomePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.9.M.5",
		    "Hookworm/ Ankylostome Male Under 5 years",
		    new Mapped(maleBelow5hookwormAnkylostomePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5hookwormAnkylostomePatient = new CompositionCohortDefinition();
		femaleBelow5hookwormAnkylostomePatient.setName("FemaleBelow5hookwormAnkylostomePatient");
		femaleBelow5hookwormAnkylostomePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5hookwormAnkylostomePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5hookwormAnkylostomePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5hookwormAnkylostomePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(hookwormAnkylostomePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5hookwormAnkylostomePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5hookwormAnkylostomePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5hookwormAnkylostomePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5hookwormAnkylostomePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5hookwormAnkylostomePatientIndicator", femaleBelow5hookwormAnkylostomePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.9.F.5",
		    "Hookworm/ Ankylostome Female Under 5 years",
		    new Mapped(femaleBelow5hookwormAnkylostomePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients
		        .setName("betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients");
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(hookwormAnkylostomePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearshookwormAnkylostomeMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearshookwormAnkylostomeMalePatientsIndicator",
		    betweenFiveAndNineteenYearshookwormAnkylostomeMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.9.M.5_19",
		    "Hookworm/ Ankylostome Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearshookwormAnkylostomeMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients
		        .setName("betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients");
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(hookwormAnkylostomePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatientsIndicator",
		            betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.9.F.5_19",
		    "Hookworm/ Ankylostome Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearshookwormAnkylostomeFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearshookwormAnkylostomeMalePatients = new CompositionCohortDefinition();
		above20YearshookwormAnkylostomeMalePatients.setName("above20YearshookwormAnkylostomeMalePatients");
		above20YearshookwormAnkylostomeMalePatients
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearshookwormAnkylostomeMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearshookwormAnkylostomeMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearshookwormAnkylostomeMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(hookwormAnkylostomePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearshookwormAnkylostomeMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearshookwormAnkylostomeMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearshookwormAnkylostomeMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearshookwormAnkylostomeMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearshookwormAnkylostomeMalePatientsIndicator", above20YearshookwormAnkylostomeMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.9.M.20",
		    "Hookworm/ Ankylostome Male above 20 years",
		    new Mapped(above20YearshookwormAnkylostomeMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearshookwormAnkylostomeFemalePatients = new CompositionCohortDefinition();
		above20YearshookwormAnkylostomeFemalePatients.setName("above20YearshookwormAnkylostomeFemalePatients");
		above20YearshookwormAnkylostomeFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearshookwormAnkylostomeFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearshookwormAnkylostomeFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearshookwormAnkylostomeFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(hookwormAnkylostomePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearshookwormAnkylostomeFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearshookwormAnkylostomeFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearshookwormAnkylostomeFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearshookwormAnkylostomeFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearshookwormAnkylostomeFemalePatientsIndicator", above20YearshookwormAnkylostomeFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.9.F.20",
		    "Hookworm/ Ankylostome Female above 20 years",
		    new Mapped(above20YearshookwormAnkylostomeFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// D.10. Entamoeba/Amibia
		
		SqlCohortDefinition entamoebaAmibiaPatient = patientWithICDCodeObsByStartDateAndEndDate("A06", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5entamoebaAmibiaPatient = new CompositionCohortDefinition();
		maleBelow5entamoebaAmibiaPatient.setName("maleBelow5entamoebaAmibiaPatient");
		maleBelow5entamoebaAmibiaPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5entamoebaAmibiaPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5entamoebaAmibiaPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5entamoebaAmibiaPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(entamoebaAmibiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5entamoebaAmibiaPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5entamoebaAmibiaPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5entamoebaAmibiaPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5entamoebaAmibiaPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5entamoebaAmibiaPatientIndicator", maleBelow5entamoebaAmibiaPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.10.M.5",
		    "Entamoeba/Amibia Male Under 5 years",
		    new Mapped(maleBelow5entamoebaAmibiaPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5entamoebaAmibiaPatient = new CompositionCohortDefinition();
		femaleBelow5entamoebaAmibiaPatient.setName("FemaleBelow5entamoebaAmibiaPatient");
		femaleBelow5entamoebaAmibiaPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5entamoebaAmibiaPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5entamoebaAmibiaPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5entamoebaAmibiaPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(entamoebaAmibiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5entamoebaAmibiaPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5entamoebaAmibiaPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5entamoebaAmibiaPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5entamoebaAmibiaPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5entamoebaAmibiaPatientIndicator", femaleBelow5entamoebaAmibiaPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.10.F.5",
		    "Entamoeba/Amibia Female Under 5 years",
		    new Mapped(femaleBelow5entamoebaAmibiaPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients
		        .setName("betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients");
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(entamoebaAmibiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsentamoebaAmibiaMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsentamoebaAmibiaMalePatientsIndicator",
		    betweenFiveAndNineteenYearsentamoebaAmibiaMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.10.M.5_19",
		    "Entamoeba/Amibia Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsentamoebaAmibiaMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients
		        .setName("betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients");
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(entamoebaAmibiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.10.F.5_19",
		    "Entamoeba/Amibia Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsentamoebaAmibiaFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsentamoebaAmibiaMalePatients = new CompositionCohortDefinition();
		above20YearsentamoebaAmibiaMalePatients.setName("above20YearsentamoebaAmibiaMalePatients");
		above20YearsentamoebaAmibiaMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsentamoebaAmibiaMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsentamoebaAmibiaMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsentamoebaAmibiaMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(entamoebaAmibiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsentamoebaAmibiaMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsentamoebaAmibiaMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsentamoebaAmibiaMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsentamoebaAmibiaMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsentamoebaAmibiaMalePatientsIndicator", above20YearsentamoebaAmibiaMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.10.M.20",
		    "Entamoeba/Amibia Male above 20 years",
		    new Mapped(above20YearsentamoebaAmibiaMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsentamoebaAmibiaFemalePatients = new CompositionCohortDefinition();
		above20YearsentamoebaAmibiaFemalePatients.setName("above20YearsentamoebaAmibiaFemalePatients");
		above20YearsentamoebaAmibiaFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsentamoebaAmibiaFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsentamoebaAmibiaFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsentamoebaAmibiaFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(entamoebaAmibiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsentamoebaAmibiaFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsentamoebaAmibiaFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsentamoebaAmibiaFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsentamoebaAmibiaFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsentamoebaAmibiaFemalePatientsIndicator", above20YearsentamoebaAmibiaFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.10.F.20",
		    "Entamoeba/Amibia Female above 20 years",
		    new Mapped(above20YearsentamoebaAmibiaFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// D. 11. Giardia
		
		SqlCohortDefinition giardiaPatient = patientWithICDCodeObsByStartDateAndEndDate("A07", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5giardiaPatient = new CompositionCohortDefinition();
		maleBelow5giardiaPatient.setName("maleBelow5giardiaPatient");
		maleBelow5giardiaPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5giardiaPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5giardiaPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5giardiaPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(giardiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5giardiaPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5giardiaPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5giardiaPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5giardiaPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5giardiaPatientIndicator", maleBelow5giardiaPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.D.11.M.5", "Giardia Male Under 5 years", new Mapped(maleBelow5giardiaPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5giardiaPatient = new CompositionCohortDefinition();
		femaleBelow5giardiaPatient.setName("FemaleBelow5giardiaPatient");
		femaleBelow5giardiaPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5giardiaPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5giardiaPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5giardiaPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(giardiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5giardiaPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5giardiaPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5giardiaPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5giardiaPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5giardiaPatientIndicator", femaleBelow5giardiaPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.D.11.F.5", "Giardia Female Under 5 years", new Mapped(femaleBelow5giardiaPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsgiardiaMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsgiardiaMalePatients.setName("betweenFiveAndNineteenYearsgiardiaMalePatients");
		betweenFiveAndNineteenYearsgiardiaMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsgiardiaMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsgiardiaMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsgiardiaMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(giardiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsgiardiaMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsgiardiaMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsgiardiaMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsgiardiaMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsgiardiaMalePatientsIndicator", betweenFiveAndNineteenYearsgiardiaMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.11.M.5_19",
		    "Giardia Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsgiardiaMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsgiardiaFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsgiardiaFemalePatients.setName("betweenFiveAndNineteenYearsgiardiaFemalePatients");
		betweenFiveAndNineteenYearsgiardiaFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsgiardiaFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsgiardiaFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsgiardiaFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(giardiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsgiardiaFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsgiardiaFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsgiardiaFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsgiardiaFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsgiardiaFemalePatientsIndicator", betweenFiveAndNineteenYearsgiardiaFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.11.F.5_19",
		    "Giardia Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsgiardiaFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsgiardiaMalePatients = new CompositionCohortDefinition();
		above20YearsgiardiaMalePatients.setName("above20YearsgiardiaMalePatients");
		above20YearsgiardiaMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsgiardiaMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsgiardiaMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsgiardiaMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(giardiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsgiardiaMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsgiardiaMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsgiardiaMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsgiardiaMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsgiardiaMalePatientsIndicator", above20YearsgiardiaMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.D.11.M.20", "Giardia Male above 20 years", new Mapped(above20YearsgiardiaMalePatientsIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsgiardiaFemalePatients = new CompositionCohortDefinition();
		above20YearsgiardiaFemalePatients.setName("above20YearsgiardiaFemalePatients");
		above20YearsgiardiaFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsgiardiaFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsgiardiaFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsgiardiaFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(giardiaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsgiardiaFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsgiardiaFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsgiardiaFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsgiardiaFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsgiardiaFemalePatientsIndicator", above20YearsgiardiaFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.D.11.F.20",
		    "Giardia Female above 20 years",
		    new Mapped(above20YearsgiardiaFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.12. Taenia
		
		SqlCohortDefinition taeniaPatient = patientWithICDCodeObsByStartDateAndEndDate("B68", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5taeniaPatient = new CompositionCohortDefinition();
		maleBelow5taeniaPatient.setName("maleBelow5taeniaPatient");
		maleBelow5taeniaPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5taeniaPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5taeniaPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5taeniaPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(taeniaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5taeniaPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5taeniaPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5taeniaPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5taeniaPatientIndicator = Indicators.newCohortIndicator("maleBelow5taeniaPatientIndicator",
		    maleBelow5taeniaPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.12.M.5", "Taenia Male Under 5 years", new Mapped(maleBelow5taeniaPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5taeniaPatient = new CompositionCohortDefinition();
		femaleBelow5taeniaPatient.setName("FemaleBelow5taeniaPatient");
		femaleBelow5taeniaPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5taeniaPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5taeniaPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5taeniaPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(taeniaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5taeniaPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5taeniaPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5taeniaPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5taeniaPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5taeniaPatientIndicator", femaleBelow5taeniaPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.12.F.5", "Taenia Female Under 5 years", new Mapped(femaleBelow5taeniaPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearstaeniaMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearstaeniaMalePatients.setName("betweenFiveAndNineteenYearstaeniaMalePatients");
		betweenFiveAndNineteenYearstaeniaMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearstaeniaMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearstaeniaMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearstaeniaMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(taeniaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearstaeniaMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearstaeniaMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearstaeniaMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearstaeniaMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearstaeniaMalePatientsIndicator", betweenFiveAndNineteenYearstaeniaMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.12.M.5_19",
		    "Taenia Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearstaeniaMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearstaeniaFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearstaeniaFemalePatients.setName("betweenFiveAndNineteenYearstaeniaFemalePatients");
		betweenFiveAndNineteenYearstaeniaFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearstaeniaFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearstaeniaFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearstaeniaFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(taeniaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearstaeniaFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearstaeniaFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearstaeniaFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearstaeniaFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearstaeniaFemalePatientsIndicator", betweenFiveAndNineteenYearstaeniaFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.12.F.5_19",
		    "Taenia Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearstaeniaFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearstaeniaMalePatients = new CompositionCohortDefinition();
		above20YearstaeniaMalePatients.setName("above20YearstaeniaMalePatients");
		above20YearstaeniaMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearstaeniaMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearstaeniaMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearstaeniaMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(taeniaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearstaeniaMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearstaeniaMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearstaeniaMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearstaeniaMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearstaeniaMalePatientsIndicator", above20YearstaeniaMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.12.M.20", "Taenia Male above 20 years", new Mapped(above20YearstaeniaMalePatientsIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearstaeniaFemalePatients = new CompositionCohortDefinition();
		above20YearstaeniaFemalePatients.setName("above20YearstaeniaFemalePatients");
		above20YearstaeniaFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearstaeniaFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearstaeniaFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearstaeniaFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(taeniaPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearstaeniaFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearstaeniaFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearstaeniaFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearstaeniaFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearstaeniaFemalePatientsIndicator", above20YearstaeniaFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.12.F.20", "Taenia Female above 20 years", new Mapped(above20YearstaeniaFemalePatientsIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.13. Malaria simple (not pregnant)/Paludisme simple (pas enceinte)
		
		SqlCohortDefinition malariaSimplePatient = patientWithICDCodeObsByStartDateAndEndDate("B538", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5malariaSimplePatient = new CompositionCohortDefinition();
		maleBelow5malariaSimplePatient.setName("maleBelow5malariaSimplePatient");
		maleBelow5malariaSimplePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5malariaSimplePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5malariaSimplePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5malariaSimplePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(malariaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5malariaSimplePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5malariaSimplePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5malariaSimplePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5malariaSimplePatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5malariaSimplePatientIndicator", maleBelow5malariaSimplePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.13.M.5",
		    "Malaria simple (not pregnant)/Paludisme simple (pas enceinte)Male Under 5 years",
		    new Mapped(maleBelow5malariaSimplePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5malariaSimplePatient = new CompositionCohortDefinition();
		femaleBelow5malariaSimplePatient.setName("FemaleBelow5malariaSimplePatient");
		femaleBelow5malariaSimplePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5malariaSimplePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5malariaSimplePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5malariaSimplePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(malariaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5malariaSimplePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5malariaSimplePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5malariaSimplePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5malariaSimplePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5malariaSimplePatientIndicator", femaleBelow5malariaSimplePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.13.F.5",
		    "Malaria simple (not pregnant)/Paludisme simple (pas enceinte)Female Under 5 years",
		    new Mapped(femaleBelow5malariaSimplePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsmalariasimpleMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsmalariasimpleMalePatients.setName("betweenFiveAndNineteenYearsmalariasimpleMalePatients");
		betweenFiveAndNineteenYearsmalariasimpleMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsmalariasimpleMalePatients
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsmalariasimpleMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsmalariasimpleMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(malariaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsmalariasimpleMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsmalariasimpleMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsmalariasimpleMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsmalariasimpleMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsmalariasimpleMalePatientsIndicator",
		    betweenFiveAndNineteenYearsmalariasimpleMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.13.M.5_19",
		    "Malaria simple (not pregnant)/Paludisme simple (pas enceinte)Male Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsmalariasimpleMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsmalariasimpleFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients
		        .setName("betweenFiveAndNineteenYearsmalariasimpleFemalePatients");
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(malariaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsmalariasimpleFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsmalariasimpleFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsmalariasimpleFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsmalariasimpleFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.13.F.5_19",
		    "Malaria simple (not pregnant)/Paludisme simple (pas enceinte)Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsmalariasimpleFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsmalariasimpleMalePatients = new CompositionCohortDefinition();
		above20YearsmalariasimpleMalePatients.setName("above20YearsmalariasimpleMalePatients");
		above20YearsmalariasimpleMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsmalariasimpleMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsmalariasimpleMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsmalariasimpleMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(malariaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsmalariasimpleMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsmalariasimpleMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsmalariasimpleMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsmalariasimpleMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsmalariasimpleMalePatientsIndicator", above20YearsmalariasimpleMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.13.M.20",
		    "Malaria simple (not pregnant)/Paludisme simple (pas enceinte)Male above 20 years",
		    new Mapped(above20YearsmalariasimpleMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsmalariasimpleFemalePatients = new CompositionCohortDefinition();
		above20YearsmalariasimpleFemalePatients.setName("above20YearsmalariasimpleFemalePatients");
		above20YearsmalariasimpleFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsmalariasimpleFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsmalariasimpleFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsmalariasimpleFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(malariaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsmalariasimpleFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsmalariasimpleFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsmalariasimpleFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsmalariasimpleFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsmalariasimpleFemalePatientsIndicator", above20YearsmalariasimpleFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.13.F.20",
		    "Malaria simple (not pregnant)/Paludisme simple (pas enceinte)Female above 20 years",
		    new Mapped(above20YearsmalariasimpleFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.15. Herpes simplex infections
		
		SqlCohortDefinition herpesSimplexInfectionsPatient = patientWithICDCodeObsByStartDateAndEndDate("B009", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5herpesSimplexInfectionsPatient = new CompositionCohortDefinition();
		maleBelow5herpesSimplexInfectionsPatient.setName("maleBelow5herpesSimplexInfectionsPatient");
		maleBelow5herpesSimplexInfectionsPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5herpesSimplexInfectionsPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5herpesSimplexInfectionsPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5herpesSimplexInfectionsPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(herpesSimplexInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5herpesSimplexInfectionsPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5herpesSimplexInfectionsPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5herpesSimplexInfectionsPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5herpesSimplexInfectionsPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5herpesSimplexInfectionsPatientIndicator", maleBelow5herpesSimplexInfectionsPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.15.M.5",
		    "Herpes simplex infectionsMale Under 5 years",
		    new Mapped(maleBelow5herpesSimplexInfectionsPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5herpesSimplexInfectionsPatient = new CompositionCohortDefinition();
		femaleBelow5herpesSimplexInfectionsPatient.setName("FemaleBelow5herpesSimplexInfectionsPatient");
		femaleBelow5herpesSimplexInfectionsPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5herpesSimplexInfectionsPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5herpesSimplexInfectionsPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5herpesSimplexInfectionsPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(herpesSimplexInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5herpesSimplexInfectionsPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5herpesSimplexInfectionsPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5herpesSimplexInfectionsPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5herpesSimplexInfectionsPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5herpesSimplexInfectionsPatientIndicator", femaleBelow5herpesSimplexInfectionsPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.15.F.5",
		    "Herpes simplex infectionsFemale Under 5 years",
		    new Mapped(femaleBelow5herpesSimplexInfectionsPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients
		        .setName("betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients");
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(herpesSimplexInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatientsIndicator",
		            betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.15.M.5_19",
		    "Herpes simplex infectionsMale Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsherpesSimplexInfectionsMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients
		        .setName("betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients");
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(herpesSimplexInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.15.F.5_19",
		    "Herpes simplex infectionsFemale Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsherpesSimplexInfectionsFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsherpesSimplexInfectionsMalePatients = new CompositionCohortDefinition();
		above20YearsherpesSimplexInfectionsMalePatients.setName("above20YearsherpesSimplexInfectionsMalePatients");
		above20YearsherpesSimplexInfectionsMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsherpesSimplexInfectionsMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsherpesSimplexInfectionsMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsherpesSimplexInfectionsMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(herpesSimplexInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsherpesSimplexInfectionsMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsherpesSimplexInfectionsMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsherpesSimplexInfectionsMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsherpesSimplexInfectionsMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsherpesSimplexInfectionsMalePatientsIndicator", above20YearsherpesSimplexInfectionsMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.15.M.20",
		    "Herpes simplex infectionsMale above 20 years",
		    new Mapped(above20YearsherpesSimplexInfectionsMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsherpesSimplexInfectionsFemalePatients = new CompositionCohortDefinition();
		above20YearsherpesSimplexInfectionsFemalePatients.setName("above20YearsherpesSimplexInfectionsFemalePatients");
		above20YearsherpesSimplexInfectionsFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsherpesSimplexInfectionsFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsherpesSimplexInfectionsFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsherpesSimplexInfectionsFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(herpesSimplexInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsherpesSimplexInfectionsFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsherpesSimplexInfectionsFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsherpesSimplexInfectionsFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsherpesSimplexInfectionsFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsherpesSimplexInfectionsFemalePatientsIndicator", above20YearsherpesSimplexInfectionsFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.15.F.20",
		    "Herpes simplex infectionsFemale above 20 years",
		    new Mapped(above20YearsherpesSimplexInfectionsFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.16. Meningitis suspected/M√©ningite Suspect
		
		SqlCohortDefinition meningitisSuspectedPatient = patientWithICDCodeObsByStartDateAndEndDate("G039", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5meningitisSuspectedPatient = new CompositionCohortDefinition();
		maleBelow5meningitisSuspectedPatient.setName("maleBelow5meningitisSuspectedPatient");
		maleBelow5meningitisSuspectedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5meningitisSuspectedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5meningitisSuspectedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5meningitisSuspectedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(meningitisSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5meningitisSuspectedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5meningitisSuspectedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5meningitisSuspectedPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5meningitisSuspectedPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5meningitisSuspectedPatientIndicator", maleBelow5meningitisSuspectedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.16.M.5",
		    "Meningitis suspected/M√©ningite SuspectMale Under 5 years",
		    new Mapped(maleBelow5meningitisSuspectedPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5meningitisSuspectedPatient = new CompositionCohortDefinition();
		femaleBelow5meningitisSuspectedPatient.setName("FemaleBelow5meningitisSuspectedPatient");
		femaleBelow5meningitisSuspectedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5meningitisSuspectedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5meningitisSuspectedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5meningitisSuspectedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(meningitisSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5meningitisSuspectedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5meningitisSuspectedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5meningitisSuspectedPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5meningitisSuspectedPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5meningitisSuspectedPatientIndicator", femaleBelow5meningitisSuspectedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.16.F.5",
		    "Meningitis suspected/M√©ningite SuspectFemale Under 5 years",
		    new Mapped(femaleBelow5meningitisSuspectedPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients
		        .setName("betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients");
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(meningitisSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsmeningitisSuspectedMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsmeningitisSuspectedMalePatientsIndicator",
		    betweenFiveAndNineteenYearsmeningitisSuspectedMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.16.M.5_19",
		    "Meningitis suspected/M√©ningite SuspectMale Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsmeningitisSuspectedMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients
		        .setName("betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients");
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(meningitisSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.16.F.5_19",
		    "Meningitis suspected/M√©ningite SuspectFemale Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsmeningitisSuspectedFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsmeningitisSuspectedMalePatients = new CompositionCohortDefinition();
		above20YearsmeningitisSuspectedMalePatients.setName("above20YearsmeningitisSuspectedMalePatients");
		above20YearsmeningitisSuspectedMalePatients
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsmeningitisSuspectedMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsmeningitisSuspectedMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsmeningitisSuspectedMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(meningitisSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsmeningitisSuspectedMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsmeningitisSuspectedMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsmeningitisSuspectedMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsmeningitisSuspectedMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsmeningitisSuspectedMalePatientsIndicator", above20YearsmeningitisSuspectedMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.16.M.20",
		    "Meningitis suspected/M√©ningite SuspectMale above 20 years",
		    new Mapped(above20YearsmeningitisSuspectedMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsmeningitisSuspectedFemalePatients = new CompositionCohortDefinition();
		above20YearsmeningitisSuspectedFemalePatients.setName("above20YearsmeningitisSuspectedFemalePatients");
		above20YearsmeningitisSuspectedFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsmeningitisSuspectedFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsmeningitisSuspectedFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsmeningitisSuspectedFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(meningitisSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsmeningitisSuspectedFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsmeningitisSuspectedFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsmeningitisSuspectedFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsmeningitisSuspectedFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsmeningitisSuspectedFemalePatientsIndicator", above20YearsmeningitisSuspectedFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.16.F.20",
		    "Meningitis suspected/M√©ningite SuspectFemale above 20 years",
		    new Mapped(above20YearsmeningitisSuspectedFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.17. Pneumonia simple
		
		SqlCohortDefinition pneumoniaSimplePatient = patientWithICDCodeObsByStartDateAndEndDate("J189", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5pneumoniaSimplePatient = new CompositionCohortDefinition();
		maleBelow5pneumoniaSimplePatient.setName("maleBelow5pneumoniaSimplePatient");
		maleBelow5pneumoniaSimplePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5pneumoniaSimplePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5pneumoniaSimplePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5pneumoniaSimplePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(pneumoniaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5pneumoniaSimplePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5pneumoniaSimplePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5pneumoniaSimplePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5pneumoniaSimplePatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5pneumoniaSimplePatientIndicator", maleBelow5pneumoniaSimplePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.17.M.5",
		    "Pneumonia simpleMale Under 5 years",
		    new Mapped(maleBelow5pneumoniaSimplePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5pneumoniaSimplePatient = new CompositionCohortDefinition();
		femaleBelow5pneumoniaSimplePatient.setName("FemaleBelow5pneumoniaSimplePatient");
		femaleBelow5pneumoniaSimplePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5pneumoniaSimplePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5pneumoniaSimplePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5pneumoniaSimplePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(pneumoniaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5pneumoniaSimplePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5pneumoniaSimplePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5pneumoniaSimplePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5pneumoniaSimplePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5pneumoniaSimplePatientIndicator", femaleBelow5pneumoniaSimplePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.17.F.5",
		    "Pneumonia simple Female Under 5 years",
		    new Mapped(femaleBelow5pneumoniaSimplePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearspneumoniaSimpleMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients
		        .setName("betweenFiveAndNineteenYearspneumoniaSimpleMalePatients");
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(pneumoniaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearspneumoniaSimpleMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearspneumoniaSimpleMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearspneumoniaSimpleMalePatientsIndicator",
		    betweenFiveAndNineteenYearspneumoniaSimpleMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.17.M.5_19",
		    "Pneumonia simpleMale Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearspneumoniaSimpleMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients
		        .setName("betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients");
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(pneumoniaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearspneumoniaSimpleFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearspneumoniaSimpleFemalePatientsIndicator",
		    betweenFiveAndNineteenYearspneumoniaSimpleFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.17.F.5_19",
		    "Pneumonia simple Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearspneumoniaSimpleFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearspneumoniaSimpleMalePatients = new CompositionCohortDefinition();
		above20YearspneumoniaSimpleMalePatients.setName("above20YearspneumoniaSimpleMalePatients");
		above20YearspneumoniaSimpleMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearspneumoniaSimpleMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearspneumoniaSimpleMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearspneumoniaSimpleMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(pneumoniaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearspneumoniaSimpleMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearspneumoniaSimpleMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearspneumoniaSimpleMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearspneumoniaSimpleMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearspneumoniaSimpleMalePatientsIndicator", above20YearspneumoniaSimpleMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.17.M.20",
		    "Pneumonia simpleMale above 20 years",
		    new Mapped(above20YearspneumoniaSimpleMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearspneumoniaSimpleFemalePatients = new CompositionCohortDefinition();
		above20YearspneumoniaSimpleFemalePatients.setName("above20YearspneumoniaSimpleFemalePatients");
		above20YearspneumoniaSimpleFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearspneumoniaSimpleFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearspneumoniaSimpleFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearspneumoniaSimpleFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(pneumoniaSimplePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearspneumoniaSimpleFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearspneumoniaSimpleFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearspneumoniaSimpleFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearspneumoniaSimpleFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearspneumoniaSimpleFemalePatientsIndicator", above20YearspneumoniaSimpleFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.17.F.20",
		    "Pneumonia simple Female above 20 years",
		    new Mapped(above20YearspneumoniaSimpleFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.18. Pneumonia severe
		
		// E.19. Influenza/Syndrome Gripal
		
		// E.20 Respiratory infections acute (ARI) other/Infection aigues des voies respiratoires autres
		
		SqlCohortDefinition RespiratoryInfectionsAcutePatient = patientWithICDCodesObsByStartDateAndEndDate("J22,J069",
		    caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5RespiratoryInfectionsAcutePatient = new CompositionCohortDefinition();
		maleBelow5RespiratoryInfectionsAcutePatient.setName("maleBelow5RespiratoryInfectionsAcutePatient");
		maleBelow5RespiratoryInfectionsAcutePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5RespiratoryInfectionsAcutePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5RespiratoryInfectionsAcutePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5RespiratoryInfectionsAcutePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RespiratoryInfectionsAcutePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5RespiratoryInfectionsAcutePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5RespiratoryInfectionsAcutePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5RespiratoryInfectionsAcutePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5RespiratoryInfectionsAcutePatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5RespiratoryInfectionsAcutePatientIndicator", maleBelow5RespiratoryInfectionsAcutePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.20.M.5",
		    "Respiratory infections acute Under 5 years",
		    new Mapped(maleBelow5RespiratoryInfectionsAcutePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5RespiratoryInfectionsAcutePatient = new CompositionCohortDefinition();
		femaleBelow5RespiratoryInfectionsAcutePatient
		        .setName("FemaleBelow5RespiratoryInfectionsAcutepatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5RespiratoryInfectionsAcutePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBelow5RespiratoryInfectionsAcutePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5RespiratoryInfectionsAcutePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5RespiratoryInfectionsAcutePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RespiratoryInfectionsAcutePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5RespiratoryInfectionsAcutePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5RespiratoryInfectionsAcutePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5RespiratoryInfectionsAcutePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5RespiratoryInfectionsAcutePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RespiratoryInfectionsAcutePatientIndicator", femaleBelow5RespiratoryInfectionsAcutePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.20.F.5",
		    "Respiratory infections acute Female Under 5 years",
		    new Mapped(femaleBelow5RespiratoryInfectionsAcutePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients
		        .setName("betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients");
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RespiratoryInfectionsAcutePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatientsIndicator",
		            betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.20.M.5_19",
		    "Respiratory infections acute Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients
		        .setName("betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients");
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RespiratoryInfectionsAcutePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.20.F.5_19",
		    "Respiratory infections acute Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsRespiratoryInfectionsAcuteFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsRespiratoryInfectionsAcuteMalePatients = new CompositionCohortDefinition();
		above20YearsRespiratoryInfectionsAcuteMalePatients.setName("above20YearsRespiratoryInfectionsAcuteMalePatients");
		above20YearsRespiratoryInfectionsAcuteMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsRespiratoryInfectionsAcuteMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsRespiratoryInfectionsAcuteMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsRespiratoryInfectionsAcuteMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RespiratoryInfectionsAcutePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsRespiratoryInfectionsAcuteMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsRespiratoryInfectionsAcuteMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsRespiratoryInfectionsAcuteMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsRespiratoryInfectionsAcuteMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsRespiratoryInfectionsAcuteMalePatientsIndicator",
		    above20YearsRespiratoryInfectionsAcuteMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.20.M.20",
		    "Respiratory infections acute above 20 years",
		    new Mapped(above20YearsRespiratoryInfectionsAcuteMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsRespiratoryInfectionsAcuteFemalePatients = new CompositionCohortDefinition();
		above20YearsRespiratoryInfectionsAcuteFemalePatients.setName("above20YearsRespiratoryInfectionsAcuteFemalePatients");
		above20YearsRespiratoryInfectionsAcuteFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsRespiratoryInfectionsAcuteFemalePatients
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsRespiratoryInfectionsAcuteFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsRespiratoryInfectionsAcuteFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RespiratoryInfectionsAcutePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsRespiratoryInfectionsAcuteFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsRespiratoryInfectionsAcuteFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsRespiratoryInfectionsAcuteFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsRespiratoryInfectionsAcuteFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsRespiratoryInfectionsAcuteFemalePatientsIndicator",
		    above20YearsRespiratoryInfectionsAcuteFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.20.F.20",
		    "Respiratory infections acute Female above 20 years",
		    new Mapped(above20YearsRespiratoryInfectionsAcuteFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.21 Gastritis and duodenitis/ Gastrite et Duod√©nite
		
		SqlCohortDefinition GastritisAndDuodenitisPatient = patientWithICDCodeObsByStartDateAndEndDate("K299", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5GastritisAndDuodenitisPatient = new CompositionCohortDefinition();
		maleBelow5GastritisAndDuodenitisPatient.setName("maleBelow5GastritisAndDuodenitisPatient");
		maleBelow5GastritisAndDuodenitisPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5GastritisAndDuodenitisPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5GastritisAndDuodenitisPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5GastritisAndDuodenitisPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(GastritisAndDuodenitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5GastritisAndDuodenitisPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5GastritisAndDuodenitisPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5GastritisAndDuodenitisPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5GastritisAndDuodenitisPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5GastritisAndDuodenitisPatientIndicator", maleBelow5GastritisAndDuodenitisPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.21.M.5",
		    "Gastritis and duodenitis Under 5 years",
		    new Mapped(maleBelow5GastritisAndDuodenitisPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5GastritisAndDuodenitisPatient = new CompositionCohortDefinition();
		femaleBelow5GastritisAndDuodenitisPatient
		        .setName("FemaleBelow5GastritisAndDuodenitispatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5GastritisAndDuodenitisPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5GastritisAndDuodenitisPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5GastritisAndDuodenitisPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5GastritisAndDuodenitisPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(GastritisAndDuodenitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5GastritisAndDuodenitisPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5GastritisAndDuodenitisPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5GastritisAndDuodenitisPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5GastritisAndDuodenitisPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5GastritisAndDuodenitisPatientIndicator", femaleBelow5GastritisAndDuodenitisPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.21.F.5",
		    "Gastritis and duodenitis Female Under 5 years",
		    new Mapped(femaleBelow5GastritisAndDuodenitisPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients
		        .setName("betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients");
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(GastritisAndDuodenitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatientsIndicator",
		            betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.21.M.5_19",
		    "Gastritis and duodenitis Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsGastritisAndDuodenitisMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients
		        .setName("betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients");
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(GastritisAndDuodenitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.21.F.5_19",
		    "Gastritis and duodenitis Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsGastritisAndDuodenitisFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsGastritisAndDuodenitisMalePatients = new CompositionCohortDefinition();
		above20YearsGastritisAndDuodenitisMalePatients.setName("above20YearsGastritisAndDuodenitisMalePatients");
		above20YearsGastritisAndDuodenitisMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsGastritisAndDuodenitisMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsGastritisAndDuodenitisMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsGastritisAndDuodenitisMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(GastritisAndDuodenitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsGastritisAndDuodenitisMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsGastritisAndDuodenitisMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsGastritisAndDuodenitisMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsGastritisAndDuodenitisMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsGastritisAndDuodenitisMalePatientsIndicator", above20YearsGastritisAndDuodenitisMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.21.M.20",
		    "Gastritis and duodenitis above 20 years",
		    new Mapped(above20YearsGastritisAndDuodenitisMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsGastritisAndDuodenitisFemalePatients = new CompositionCohortDefinition();
		above20YearsGastritisAndDuodenitisFemalePatients.setName("above20YearsGastritisAndDuodenitisFemalePatients");
		above20YearsGastritisAndDuodenitisFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsGastritisAndDuodenitisFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsGastritisAndDuodenitisFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsGastritisAndDuodenitisFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(GastritisAndDuodenitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsGastritisAndDuodenitisFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsGastritisAndDuodenitisFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsGastritisAndDuodenitisFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsGastritisAndDuodenitisFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsGastritisAndDuodenitisFemalePatientsIndicator", above20YearsGastritisAndDuodenitisFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.21.F.20",
		    "Gastritis and duodenitis Female above 20 years",
		    new Mapped(above20YearsGastritisAndDuodenitisFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.22 Abscesses/ Abc√®s
		
		SqlCohortDefinition AbscessesPatient = patientWithICDCodeObsByStartDateAndEndDate("L029", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5AbscessesPatient = new CompositionCohortDefinition();
		maleBelow5AbscessesPatient.setName("maleBelow5AbscessesPatient");
		maleBelow5AbscessesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5AbscessesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5AbscessesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5AbscessesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AbscessesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5AbscessesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5AbscessesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5AbscessesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5AbscessesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5AbscessesPatientIndicator", maleBelow5AbscessesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.22.M.5", "Abscesses Under 5 years", new Mapped(maleBelow5AbscessesPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5AbscessesPatient = new CompositionCohortDefinition();
		femaleBelow5AbscessesPatient.setName("FemaleBelow5AbscessespatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5AbscessesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5AbscessesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5AbscessesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5AbscessesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AbscessesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5AbscessesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5AbscessesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5AbscessesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5AbscessesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AbscessesPatientIndicator", femaleBelow5AbscessesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.22.F.5",
		    "Abscesses simple Female Under 5 years",
		    new Mapped(femaleBelow5AbscessesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsAbscessesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsAbscessesMalePatients.setName("betweenFiveAndNineteenYearsAbscessesMalePatients");
		betweenFiveAndNineteenYearsAbscessesMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsAbscessesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsAbscessesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsAbscessesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AbscessesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsAbscessesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsAbscessesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsAbscessesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsAbscessesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsAbscessesMalePatientsIndicator", betweenFiveAndNineteenYearsAbscessesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.22.M.5_19",
		    "Abscesses Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsAbscessesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsAbscessesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsAbscessesFemalePatients.setName("betweenFiveAndNineteenYearsAbscessesFemalePatients");
		betweenFiveAndNineteenYearsAbscessesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsAbscessesFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsAbscessesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsAbscessesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AbscessesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsAbscessesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsAbscessesFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsAbscessesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsAbscessesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsAbscessesFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsAbscessesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.22.F.5_19",
		    "Abscesses simple Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsAbscessesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsAbscessesMalePatients = new CompositionCohortDefinition();
		above20YearsAbscessesMalePatients.setName("above20YearsAbscessesMalePatients");
		above20YearsAbscessesMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsAbscessesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsAbscessesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsAbscessesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AbscessesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsAbscessesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsAbscessesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsAbscessesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsAbscessesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsAbscessesMalePatientsIndicator", above20YearsAbscessesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.22.M.20", "Abscesses above 20 years", new Mapped(above20YearsAbscessesMalePatientsIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsAbscessesFemalePatients = new CompositionCohortDefinition();
		above20YearsAbscessesFemalePatients.setName("above20YearsAbscessesFemalePatients");
		above20YearsAbscessesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsAbscessesFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsAbscessesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsAbscessesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AbscessesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsAbscessesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsAbscessesFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsAbscessesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsAbscessesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsAbscessesFemalePatientsIndicator", above20YearsAbscessesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.22.F.20",
		    "Abscesses simple Female above 20 years",
		    new Mapped(above20YearsAbscessesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.23 Ulcers of skin/ Ulc√®res de la peau
		
		SqlCohortDefinition UlcersOfSkinPatient = patientWithICDCodeObsByStartDateAndEndDate("L89", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5UlcersOfSkinPatient = new CompositionCohortDefinition();
		maleBelow5UlcersOfSkinPatient.setName("maleBelow5UlcersOfSkinPatient");
		maleBelow5UlcersOfSkinPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5UlcersOfSkinPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5UlcersOfSkinPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5UlcersOfSkinPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UlcersOfSkinPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5UlcersOfSkinPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5UlcersOfSkinPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5UlcersOfSkinPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5UlcersOfSkinPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5UlcersOfSkinPatientIndicator", maleBelow5UlcersOfSkinPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.23.M.5", "Ulcers of skin Under 5 years", new Mapped(maleBelow5UlcersOfSkinPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5UlcersOfSkinPatient = new CompositionCohortDefinition();
		femaleBelow5UlcersOfSkinPatient
		        .setName("FemaleBelow5UlcersOfSkinpatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5UlcersOfSkinPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5UlcersOfSkinPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5UlcersOfSkinPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5UlcersOfSkinPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UlcersOfSkinPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5UlcersOfSkinPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5UlcersOfSkinPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5UlcersOfSkinPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5UlcersOfSkinPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5UlcersOfSkinPatientIndicator", femaleBelow5UlcersOfSkinPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.23.F.5",
		    "Ulcers of skin Female Under 5 years",
		    new Mapped(femaleBelow5UlcersOfSkinPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsUlcersOfSkinMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients.setName("betweenFiveAndNineteenYearsUlcersOfSkinMalePatients");
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UlcersOfSkinPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsUlcersOfSkinMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsUlcersOfSkinMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsUlcersOfSkinMalePatientsIndicator",
		    betweenFiveAndNineteenYearsUlcersOfSkinMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.23.M.5_19",
		    "Ulcers of skin Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsUlcersOfSkinMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients
		        .setName("betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients");
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UlcersOfSkinPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsUlcersOfSkinFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsUlcersOfSkinFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsUlcersOfSkinFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.23.F.5_19",
		    "Ulcers of skin Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsUlcersOfSkinFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsUlcersOfSkinMalePatients = new CompositionCohortDefinition();
		above20YearsUlcersOfSkinMalePatients.setName("above20YearsUlcersOfSkinMalePatients");
		above20YearsUlcersOfSkinMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsUlcersOfSkinMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsUlcersOfSkinMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsUlcersOfSkinMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UlcersOfSkinPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsUlcersOfSkinMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsUlcersOfSkinMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsUlcersOfSkinMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsUlcersOfSkinMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsUlcersOfSkinMalePatientsIndicator", above20YearsUlcersOfSkinMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.23.M.20",
		    "Ulcers of skin above 20 years",
		    new Mapped(above20YearsUlcersOfSkinMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsUlcersOfSkinFemalePatients = new CompositionCohortDefinition();
		above20YearsUlcersOfSkinFemalePatients.setName("above20YearsUlcersOfSkinFemalePatients");
		above20YearsUlcersOfSkinFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsUlcersOfSkinFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsUlcersOfSkinFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsUlcersOfSkinFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UlcersOfSkinPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsUlcersOfSkinFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsUlcersOfSkinFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsUlcersOfSkinFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsUlcersOfSkinFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsUlcersOfSkinFemalePatientsIndicator", above20YearsUlcersOfSkinFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.23.F.20",
		    "Ulcers of skin Female above 20 years",
		    new Mapped(above20YearsUlcersOfSkinFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.24 Skin Infection Scabies/ Infection Cutan√©e Gale
		
		SqlCohortDefinition SkinInfectionScabiesPatient = patientWithICDCodeObsByStartDateAndEndDate("B86", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5SkinInfectionScabiesPatient = new CompositionCohortDefinition();
		maleBelow5SkinInfectionScabiesPatient.setName("maleBelow5SkinInfectionScabiesPatient");
		maleBelow5SkinInfectionScabiesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5SkinInfectionScabiesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5SkinInfectionScabiesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5SkinInfectionScabiesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionScabiesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5SkinInfectionScabiesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5SkinInfectionScabiesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5SkinInfectionScabiesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5SkinInfectionScabiesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5SkinInfectionScabiesPatientIndicator", maleBelow5SkinInfectionScabiesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.24.M.5",
		    "Skin Infection Scabies Under 5 years",
		    new Mapped(maleBelow5SkinInfectionScabiesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5SkinInfectionScabiesPatient = new CompositionCohortDefinition();
		femaleBelow5SkinInfectionScabiesPatient
		        .setName("FemaleBelow5SkinInfectionScabiespatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5SkinInfectionScabiesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5SkinInfectionScabiesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5SkinInfectionScabiesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5SkinInfectionScabiesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionScabiesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5SkinInfectionScabiesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5SkinInfectionScabiesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5SkinInfectionScabiesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5SkinInfectionScabiesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5SkinInfectionScabiesPatientIndicator", femaleBelow5SkinInfectionScabiesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.24.F.5",
		    "Skin Infection Scabies Female Under 5 years",
		    new Mapped(femaleBelow5SkinInfectionScabiesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients
		        .setName("betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients");
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionScabiesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatientsIndicator",
		            betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.24.M.5_19",
		    "Skin Infection Scabies Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsSkinInfectionScabiesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients
		        .setName("betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients");
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionScabiesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.24.F.5_19",
		    "Skin Infection Scabies Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsSkinInfectionScabiesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsSkinInfectionScabiesMalePatients = new CompositionCohortDefinition();
		above20YearsSkinInfectionScabiesMalePatients.setName("above20YearsSkinInfectionScabiesMalePatients");
		above20YearsSkinInfectionScabiesMalePatients
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsSkinInfectionScabiesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsSkinInfectionScabiesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsSkinInfectionScabiesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionScabiesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsSkinInfectionScabiesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsSkinInfectionScabiesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsSkinInfectionScabiesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsSkinInfectionScabiesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsSkinInfectionScabiesMalePatientsIndicator", above20YearsSkinInfectionScabiesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.24.M.20",
		    "Skin Infection Scabies above 20 years",
		    new Mapped(above20YearsSkinInfectionScabiesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsSkinInfectionScabiesFemalePatients = new CompositionCohortDefinition();
		above20YearsSkinInfectionScabiesFemalePatients.setName("above20YearsSkinInfectionScabiesFemalePatients");
		above20YearsSkinInfectionScabiesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsSkinInfectionScabiesFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsSkinInfectionScabiesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsSkinInfectionScabiesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionScabiesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsSkinInfectionScabiesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsSkinInfectionScabiesFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsSkinInfectionScabiesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsSkinInfectionScabiesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsSkinInfectionScabiesFemalePatientsIndicator", above20YearsSkinInfectionScabiesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.24.F.20",
		    "Skin Infection Scabies Female above 20 years",
		    new Mapped(above20YearsSkinInfectionScabiesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.25 Skin Infection Fungal (mycoses) superficial/Infection de la Peau Mycoses Superficielles
		
		SqlCohortDefinition SkinInfectionFungalSuperficialPatient = patientWithICDCodeObsByStartDateAndEndDate("B369",
		    caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5SkinInfectionFungalSuperficialPatient = new CompositionCohortDefinition();
		maleBelow5SkinInfectionFungalSuperficialPatient.setName("maleBelow5SkinInfectionFungalSuperficialPatient");
		maleBelow5SkinInfectionFungalSuperficialPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBelow5SkinInfectionFungalSuperficialPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5SkinInfectionFungalSuperficialPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5SkinInfectionFungalSuperficialPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionFungalSuperficialPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5SkinInfectionFungalSuperficialPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5SkinInfectionFungalSuperficialPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5SkinInfectionFungalSuperficialPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5SkinInfectionFungalSuperficialPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5SkinInfectionFungalSuperficialPatientIndicator", maleBelow5SkinInfectionFungalSuperficialPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.25.M.5",
		    "Skin Infection Fungal superficial Under 5 years",
		    new Mapped(maleBelow5SkinInfectionFungalSuperficialPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5SkinInfectionFungalSuperficialPatient = new CompositionCohortDefinition();
		femaleBelow5SkinInfectionFungalSuperficialPatient
		        .setName("FemaleBelow5SkinInfectionFungalSuperficialpatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5SkinInfectionFungalSuperficialPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBelow5SkinInfectionFungalSuperficialPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5SkinInfectionFungalSuperficialPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5SkinInfectionFungalSuperficialPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionFungalSuperficialPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5SkinInfectionFungalSuperficialPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5SkinInfectionFungalSuperficialPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5SkinInfectionFungalSuperficialPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5SkinInfectionFungalSuperficialPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5SkinInfectionFungalSuperficialPatientIndicator", femaleBelow5SkinInfectionFungalSuperficialPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.25.F.5",
		    "Skin Infection Fungal superficial Female Under 5 years",
		    new Mapped(femaleBelow5SkinInfectionFungalSuperficialPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients
		        .setName("betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients");
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionFungalSuperficialPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatientsIndicator",
		            betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.25.M.5_19",
		    "Skin Infection Fungal superficial Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients
		        .setName("betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients");
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionFungalSuperficialPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.25.F.5_19",
		    "Skin Infection Fungal superficial Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsSkinInfectionFungalSuperficialFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsSkinInfectionFungalSuperficialMalePatients = new CompositionCohortDefinition();
		above20YearsSkinInfectionFungalSuperficialMalePatients
		        .setName("above20YearsSkinInfectionFungalSuperficialMalePatients");
		above20YearsSkinInfectionFungalSuperficialMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsSkinInfectionFungalSuperficialMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		above20YearsSkinInfectionFungalSuperficialMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsSkinInfectionFungalSuperficialMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionFungalSuperficialPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsSkinInfectionFungalSuperficialMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsSkinInfectionFungalSuperficialMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsSkinInfectionFungalSuperficialMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsSkinInfectionFungalSuperficialMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsSkinInfectionFungalSuperficialMalePatientsIndicator",
		    above20YearsSkinInfectionFungalSuperficialMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.25.M.20",
		    "Skin Infection Fungal superficial above 20 years",
		    new Mapped(above20YearsSkinInfectionFungalSuperficialMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsSkinInfectionFungalSuperficialFemalePatients = new CompositionCohortDefinition();
		above20YearsSkinInfectionFungalSuperficialFemalePatients
		        .setName("above20YearsSkinInfectionFungalSuperficialFemalePatients");
		above20YearsSkinInfectionFungalSuperficialFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		above20YearsSkinInfectionFungalSuperficialFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		above20YearsSkinInfectionFungalSuperficialFemalePatients
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsSkinInfectionFungalSuperficialFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(SkinInfectionFungalSuperficialPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsSkinInfectionFungalSuperficialFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsSkinInfectionFungalSuperficialFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsSkinInfectionFungalSuperficialFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsSkinInfectionFungalSuperficialFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsSkinInfectionFungalSuperficialFemalePatientsIndicator",
		    above20YearsSkinInfectionFungalSuperficialFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.25.F.20",
		    "Skin Infection Fungal superficial Female above 20 years",
		    new Mapped(above20YearsSkinInfectionFungalSuperficialFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.26 Skin Infections Other/ Infections Cutan√©es autres
		
		// E.27 Urinary Tract Infections/ Infections des voies urinaires
		
		SqlCohortDefinition UrinaryTractInfectionsPatient = patientWithICDCodeObsByStartDateAndEndDate("N390", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5UrinaryTractInfectionsPatient = new CompositionCohortDefinition();
		maleBelow5UrinaryTractInfectionsPatient.setName("maleBelow5UrinaryTractInfectionsPatient");
		maleBelow5UrinaryTractInfectionsPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5UrinaryTractInfectionsPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5UrinaryTractInfectionsPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5UrinaryTractInfectionsPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UrinaryTractInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5UrinaryTractInfectionsPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5UrinaryTractInfectionsPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5UrinaryTractInfectionsPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5UrinaryTractInfectionsPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5UrinaryTractInfectionsPatientIndicator", maleBelow5UrinaryTractInfectionsPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.27.M.5",
		    "Urinary Tract Infections Under 5 years",
		    new Mapped(maleBelow5UrinaryTractInfectionsPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5UrinaryTractInfectionsPatient = new CompositionCohortDefinition();
		femaleBelow5UrinaryTractInfectionsPatient
		        .setName("FemaleBelow5UrinaryTractInfectionspatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5UrinaryTractInfectionsPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5UrinaryTractInfectionsPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5UrinaryTractInfectionsPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5UrinaryTractInfectionsPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UrinaryTractInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5UrinaryTractInfectionsPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5UrinaryTractInfectionsPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5UrinaryTractInfectionsPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5UrinaryTractInfectionsPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5UrinaryTractInfectionsPatientIndicator", femaleBelow5UrinaryTractInfectionsPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.27.F.5",
		    "Urinary Tract Infections Female Under 5 years",
		    new Mapped(femaleBelow5UrinaryTractInfectionsPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients
		        .setName("betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients");
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UrinaryTractInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatientsIndicator",
		            betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.27.M.5_19",
		    "Urinary Tract Infections Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsUrinaryTractInfectionsMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients
		        .setName("betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients");
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UrinaryTractInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.27.F.5_19",
		    "Urinary Tract Infections Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsUrinaryTractInfectionsFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsUrinaryTractInfectionsMalePatients = new CompositionCohortDefinition();
		above20YearsUrinaryTractInfectionsMalePatients.setName("above20YearsUrinaryTractInfectionsMalePatients");
		above20YearsUrinaryTractInfectionsMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsUrinaryTractInfectionsMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsUrinaryTractInfectionsMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsUrinaryTractInfectionsMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UrinaryTractInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsUrinaryTractInfectionsMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsUrinaryTractInfectionsMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsUrinaryTractInfectionsMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsUrinaryTractInfectionsMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsUrinaryTractInfectionsMalePatientsIndicator", above20YearsUrinaryTractInfectionsMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.27.M.20",
		    "Urinary Tract Infections above 20 years",
		    new Mapped(above20YearsUrinaryTractInfectionsMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsUrinaryTractInfectionsFemalePatients = new CompositionCohortDefinition();
		above20YearsUrinaryTractInfectionsFemalePatients.setName("above20YearsUrinaryTractInfectionsFemalePatients");
		above20YearsUrinaryTractInfectionsFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsUrinaryTractInfectionsFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsUrinaryTractInfectionsFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsUrinaryTractInfectionsFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(UrinaryTractInfectionsPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsUrinaryTractInfectionsFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsUrinaryTractInfectionsFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsUrinaryTractInfectionsFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsUrinaryTractInfectionsFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsUrinaryTractInfectionsFemalePatientsIndicator", above20YearsUrinaryTractInfectionsFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.27.F.20",
		    "Urinary Tract Infections Female above 20 years",
		    new Mapped(above20YearsUrinaryTractInfectionsFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.28 Anemia (confirmed)/ An√©mie (confirm√©e)
		
		SqlCohortDefinition AnemiaConfirmedPatient = patientWithICDCodeObsByStartDateAndEndDate("D649", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5AnemiaConfirmedPatient = new CompositionCohortDefinition();
		maleBelow5AnemiaConfirmedPatient.setName("maleBelow5AnemiaConfirmedPatient");
		maleBelow5AnemiaConfirmedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5AnemiaConfirmedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5AnemiaConfirmedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5AnemiaConfirmedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AnemiaConfirmedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5AnemiaConfirmedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5AnemiaConfirmedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5AnemiaConfirmedPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5AnemiaConfirmedPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5AnemiaConfirmedPatientIndicator", maleBelow5AnemiaConfirmedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.28.M.5", "Anemia Confirmed Under 5 years", new Mapped(maleBelow5AnemiaConfirmedPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5AnemiaConfirmedPatient = new CompositionCohortDefinition();
		femaleBelow5AnemiaConfirmedPatient
		        .setName("FemaleBelow5AnemiaConfirmedpatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5AnemiaConfirmedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5AnemiaConfirmedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5AnemiaConfirmedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5AnemiaConfirmedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AnemiaConfirmedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5AnemiaConfirmedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5AnemiaConfirmedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5AnemiaConfirmedPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5AnemiaConfirmedPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AnemiaConfirmedPatientIndicator", femaleBelow5AnemiaConfirmedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.28.F.5",
		    "Anemia Confirmed Female Under 5 years",
		    new Mapped(femaleBelow5AnemiaConfirmedPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients
		        .setName("betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients");
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AnemiaConfirmedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsAnemiaConfirmedMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsAnemiaConfirmedMalePatientsIndicator",
		    betweenFiveAndNineteenYearsAnemiaConfirmedMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.28.M.5_19",
		    "Anemia Confirmed Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsAnemiaConfirmedMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients
		        .setName("betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients");
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AnemiaConfirmedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.28.F.5_19",
		    "Anemia Confirmed Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsAnemiaConfirmedFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsAnemiaConfirmedMalePatients = new CompositionCohortDefinition();
		above20YearsAnemiaConfirmedMalePatients.setName("above20YearsAnemiaConfirmedMalePatients");
		above20YearsAnemiaConfirmedMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsAnemiaConfirmedMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsAnemiaConfirmedMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsAnemiaConfirmedMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AnemiaConfirmedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsAnemiaConfirmedMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsAnemiaConfirmedMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsAnemiaConfirmedMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsAnemiaConfirmedMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsAnemiaConfirmedMalePatientsIndicator", above20YearsAnemiaConfirmedMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.28.M.20",
		    "Anemia Confirmed above 20 years",
		    new Mapped(above20YearsAnemiaConfirmedMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsAnemiaConfirmedFemalePatients = new CompositionCohortDefinition();
		above20YearsAnemiaConfirmedFemalePatients.setName("above20YearsAnemiaConfirmedFemalePatients");
		above20YearsAnemiaConfirmedFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsAnemiaConfirmedFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsAnemiaConfirmedFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsAnemiaConfirmedFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AnemiaConfirmedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsAnemiaConfirmedFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsAnemiaConfirmedFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsAnemiaConfirmedFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsAnemiaConfirmedFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsAnemiaConfirmedFemalePatientsIndicator", above20YearsAnemiaConfirmedFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.28.F.20",
		    "Anemia Confirmed Female above 20 years",
		    new Mapped(above20YearsAnemiaConfirmedFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.29 Measles suspected/ Rougeole suspect
		
		SqlCohortDefinition MeaslesSuspectedPatient = patientWithICDCodeObsByStartDateAndEndDate("B05", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5MeaslesSuspectedPatient = new CompositionCohortDefinition();
		maleBelow5MeaslesSuspectedPatient.setName("maleBelow5MeaslesSuspectedPatient");
		maleBelow5MeaslesSuspectedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5MeaslesSuspectedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5MeaslesSuspectedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5MeaslesSuspectedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(MeaslesSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5MeaslesSuspectedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5MeaslesSuspectedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5MeaslesSuspectedPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5MeaslesSuspectedPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5MeaslesSuspectedPatientIndicator", maleBelow5MeaslesSuspectedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.29.M.5",
		    "Measles suspected Under 5 years",
		    new Mapped(maleBelow5MeaslesSuspectedPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5MeaslesSuspectedPatient = new CompositionCohortDefinition();
		femaleBelow5MeaslesSuspectedPatient
		        .setName("FemaleBelow5MeaslesSuspectedpatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5MeaslesSuspectedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5MeaslesSuspectedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5MeaslesSuspectedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5MeaslesSuspectedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(MeaslesSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5MeaslesSuspectedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5MeaslesSuspectedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5MeaslesSuspectedPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5MeaslesSuspectedPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5MeaslesSuspectedPatientIndicator", femaleBelow5MeaslesSuspectedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.29.F.5",
		    "Measles suspected Female Under 5 years",
		    new Mapped(femaleBelow5MeaslesSuspectedPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients
		        .setName("betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients");
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(MeaslesSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsMeaslesSuspectedMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsMeaslesSuspectedMalePatientsIndicator",
		    betweenFiveAndNineteenYearsMeaslesSuspectedMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.29.M.5_19",
		    "Measles suspected Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsMeaslesSuspectedMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients
		        .setName("betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients");
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(MeaslesSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.29.F.5_19",
		    "Measles suspected Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsMeaslesSuspectedFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsMeaslesSuspectedMalePatients = new CompositionCohortDefinition();
		above20YearsMeaslesSuspectedMalePatients.setName("above20YearsMeaslesSuspectedMalePatients");
		above20YearsMeaslesSuspectedMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsMeaslesSuspectedMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsMeaslesSuspectedMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsMeaslesSuspectedMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(MeaslesSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsMeaslesSuspectedMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsMeaslesSuspectedMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsMeaslesSuspectedMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsMeaslesSuspectedMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsMeaslesSuspectedMalePatientsIndicator", above20YearsMeaslesSuspectedMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.29.M.20",
		    "Measles suspected above 20 years",
		    new Mapped(above20YearsMeaslesSuspectedMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsMeaslesSuspectedFemalePatients = new CompositionCohortDefinition();
		above20YearsMeaslesSuspectedFemalePatients.setName("above20YearsMeaslesSuspectedFemalePatients");
		above20YearsMeaslesSuspectedFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsMeaslesSuspectedFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsMeaslesSuspectedFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsMeaslesSuspectedFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(MeaslesSuspectedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsMeaslesSuspectedFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsMeaslesSuspectedFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsMeaslesSuspectedFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsMeaslesSuspectedFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsMeaslesSuspectedFemalePatientsIndicator", above20YearsMeaslesSuspectedFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.29.F.20",
		    "Measles suspected Female above 20 years",
		    new Mapped(above20YearsMeaslesSuspectedFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.30 Measles confirmed cases/ Rougeole confirm√©e
		
		// E.31 Rubella confirmed cases/ Rub√©ole confirm√©e
		
		SqlCohortDefinition RubellaConfirmedCasesPatient = patientWithICDCodeObsByStartDateAndEndDate("B06", caseStatus,
		    newCase);
		
		CompositionCohortDefinition maleBelow5RubellaConfirmedCasesPatient = new CompositionCohortDefinition();
		maleBelow5RubellaConfirmedCasesPatient.setName("maleBelow5RubellaConfirmedCasesPatient");
		maleBelow5RubellaConfirmedCasesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5RubellaConfirmedCasesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5RubellaConfirmedCasesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5RubellaConfirmedCasesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RubellaConfirmedCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5RubellaConfirmedCasesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5RubellaConfirmedCasesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5RubellaConfirmedCasesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5RubellaConfirmedCasesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5RubellaConfirmedCasesPatientIndicator", maleBelow5RubellaConfirmedCasesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.31.M.5",
		    "Rubella confirmed cases Under 5 years",
		    new Mapped(maleBelow5RubellaConfirmedCasesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5RubellaConfirmedCasesPatient = new CompositionCohortDefinition();
		femaleBelow5RubellaConfirmedCasesPatient
		        .setName("FemaleBelow5RubellaConfirmedCasespatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5RubellaConfirmedCasesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5RubellaConfirmedCasesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5RubellaConfirmedCasesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5RubellaConfirmedCasesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RubellaConfirmedCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5RubellaConfirmedCasesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5RubellaConfirmedCasesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5RubellaConfirmedCasesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5RubellaConfirmedCasesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RubellaConfirmedCasesPatientIndicator", femaleBelow5RubellaConfirmedCasesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.31.F.5",
		    "Rubella confirmed cases Female Under 5 years",
		    new Mapped(femaleBelow5RubellaConfirmedCasesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients
		        .setName("betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients");
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RubellaConfirmedCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatientsIndicator",
		            betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.31.M.5_19",
		    "Rubella confirmed cases Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsRubellaConfirmedCasesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients
		        .setName("betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients");
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RubellaConfirmedCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.31.F.5_19",
		    "Rubella confirmed cases Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsRubellaConfirmedCasesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsRubellaConfirmedCasesMalePatients = new CompositionCohortDefinition();
		above20YearsRubellaConfirmedCasesMalePatients.setName("above20YearsRubellaConfirmedCasesMalePatients");
		above20YearsRubellaConfirmedCasesMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsRubellaConfirmedCasesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsRubellaConfirmedCasesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsRubellaConfirmedCasesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RubellaConfirmedCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsRubellaConfirmedCasesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsRubellaConfirmedCasesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsRubellaConfirmedCasesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsRubellaConfirmedCasesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsRubellaConfirmedCasesMalePatientsIndicator", above20YearsRubellaConfirmedCasesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.31.M.20",
		    "Rubella confirmed cases above 20 years",
		    new Mapped(above20YearsRubellaConfirmedCasesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsRubellaConfirmedCasesFemalePatients = new CompositionCohortDefinition();
		above20YearsRubellaConfirmedCasesFemalePatients.setName("above20YearsRubellaConfirmedCasesFemalePatients");
		above20YearsRubellaConfirmedCasesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsRubellaConfirmedCasesFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsRubellaConfirmedCasesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsRubellaConfirmedCasesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(RubellaConfirmedCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsRubellaConfirmedCasesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsRubellaConfirmedCasesFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsRubellaConfirmedCasesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsRubellaConfirmedCasesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsRubellaConfirmedCasesFemalePatientsIndicator", above20YearsRubellaConfirmedCasesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.31.F.20",
		    "Rubella confirmed cases Female above 20 years",
		    new Mapped(above20YearsRubellaConfirmedCasesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.32 Acute Flaccid Paralysis cases/ Paralysie flasque aigue (polio suspect)
		
		SqlCohortDefinition AcuteFlaccidParalysisCasesPatient = patientWithICDCodeObsByStartDateAndEndDate("A80",
		    caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5AcuteFlaccidParalysisCasesPatient = new CompositionCohortDefinition();
		maleBelow5AcuteFlaccidParalysisCasesPatient.setName("maleBelow5AcuteFlaccidParalysisCasesPatient");
		maleBelow5AcuteFlaccidParalysisCasesPatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5AcuteFlaccidParalysisCasesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5AcuteFlaccidParalysisCasesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5AcuteFlaccidParalysisCasesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AcuteFlaccidParalysisCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5AcuteFlaccidParalysisCasesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5AcuteFlaccidParalysisCasesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5AcuteFlaccidParalysisCasesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5AcuteFlaccidParalysisCasesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5AcuteFlaccidParalysisCasesPatientIndicator", maleBelow5AcuteFlaccidParalysisCasesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.32.M.5",
		    "Acute Flaccid Paralysis cases Under 5 years",
		    new Mapped(maleBelow5AcuteFlaccidParalysisCasesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5AcuteFlaccidParalysisCasesPatient = new CompositionCohortDefinition();
		femaleBelow5AcuteFlaccidParalysisCasesPatient
		        .setName("FemaleBelow5AcuteFlaccidParalysisCasespatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5AcuteFlaccidParalysisCasesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBelow5AcuteFlaccidParalysisCasesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5AcuteFlaccidParalysisCasesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5AcuteFlaccidParalysisCasesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AcuteFlaccidParalysisCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5AcuteFlaccidParalysisCasesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5AcuteFlaccidParalysisCasesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5AcuteFlaccidParalysisCasesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5AcuteFlaccidParalysisCasesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AcuteFlaccidParalysisCasesPatientIndicator", femaleBelow5AcuteFlaccidParalysisCasesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.32.F.5",
		    "Acute Flaccid Paralysis cases Female Under 5 years",
		    new Mapped(femaleBelow5AcuteFlaccidParalysisCasesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients
		        .setName("betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients");
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AcuteFlaccidParalysisCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatientsIndicator",
		            betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.32.M.5_19",
		    "Acute Flaccid Paralysis cases Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients
		        .setName("betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients");
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AcuteFlaccidParalysisCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.32.F.5_19",
		    "Acute Flaccid Paralysis cases Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsAcuteFlaccidParalysisCasesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsAcuteFlaccidParalysisCasesMalePatients = new CompositionCohortDefinition();
		above20YearsAcuteFlaccidParalysisCasesMalePatients.setName("above20YearsAcuteFlaccidParalysisCasesMalePatients");
		above20YearsAcuteFlaccidParalysisCasesMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsAcuteFlaccidParalysisCasesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsAcuteFlaccidParalysisCasesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsAcuteFlaccidParalysisCasesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AcuteFlaccidParalysisCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsAcuteFlaccidParalysisCasesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsAcuteFlaccidParalysisCasesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsAcuteFlaccidParalysisCasesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsAcuteFlaccidParalysisCasesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsAcuteFlaccidParalysisCasesMalePatientsIndicator",
		    above20YearsAcuteFlaccidParalysisCasesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.32.M.20",
		    "Acute Flaccid Paralysis cases above 20 years",
		    new Mapped(above20YearsAcuteFlaccidParalysisCasesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsAcuteFlaccidParalysisCasesFemalePatients = new CompositionCohortDefinition();
		above20YearsAcuteFlaccidParalysisCasesFemalePatients.setName("above20YearsAcuteFlaccidParalysisCasesFemalePatients");
		above20YearsAcuteFlaccidParalysisCasesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		above20YearsAcuteFlaccidParalysisCasesFemalePatients
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsAcuteFlaccidParalysisCasesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsAcuteFlaccidParalysisCasesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(AcuteFlaccidParalysisCasesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsAcuteFlaccidParalysisCasesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsAcuteFlaccidParalysisCasesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsAcuteFlaccidParalysisCasesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsAcuteFlaccidParalysisCasesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsAcuteFlaccidParalysisCasesFemalePatientsIndicator",
		    above20YearsAcuteFlaccidParalysisCasesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.32.F.20",
		    "Acute Flaccid Paralysis cases Female above 20 years",
		    new Mapped(above20YearsAcuteFlaccidParalysisCasesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.33 Tetanus/Tetanos
		
		SqlCohortDefinition TetanusPatient = patientWithICDCodesObsByStartDateAndEndDate("A35,A34", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5TetanusPatient = new CompositionCohortDefinition();
		maleBelow5TetanusPatient.setName("maleBelow5TetanusPatient");
		maleBelow5TetanusPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5TetanusPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5TetanusPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5TetanusPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(TetanusPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5TetanusPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5TetanusPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5TetanusPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5TetanusPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5TetanusPatientIndicator", maleBelow5TetanusPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.33.M.5", "Tetanus Under 5 years", new Mapped(maleBelow5TetanusPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5TetanusPatient = new CompositionCohortDefinition();
		femaleBelow5TetanusPatient.setName("FemaleBelow5TetanuspatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5TetanusPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5TetanusPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5TetanusPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5TetanusPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(TetanusPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5TetanusPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5TetanusPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5TetanusPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5TetanusPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5TetanusPatientIndicator", femaleBelow5TetanusPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.33.F.5", "Tetanus Female Under 5 years", new Mapped(femaleBelow5TetanusPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsTetanusMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsTetanusMalePatients.setName("betweenFiveAndNineteenYearsTetanusMalePatients");
		betweenFiveAndNineteenYearsTetanusMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsTetanusMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsTetanusMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsTetanusMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(TetanusPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsTetanusMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsTetanusMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsTetanusMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsTetanusMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsTetanusMalePatientsIndicator", betweenFiveAndNineteenYearsTetanusMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.33.M.5_19",
		    "Tetanus Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsTetanusMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsTetanusFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsTetanusFemalePatients.setName("betweenFiveAndNineteenYearsTetanusFemalePatients");
		betweenFiveAndNineteenYearsTetanusFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsTetanusFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsTetanusFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsTetanusFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(TetanusPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsTetanusFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsTetanusFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsTetanusFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsTetanusFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsTetanusFemalePatientsIndicator", betweenFiveAndNineteenYearsTetanusFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.33.F.5_19",
		    "Tetanus Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsTetanusFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsTetanusMalePatients = new CompositionCohortDefinition();
		above20YearsTetanusMalePatients.setName("above20YearsTetanusMalePatients");
		above20YearsTetanusMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsTetanusMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsTetanusMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsTetanusMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(TetanusPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsTetanusMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsTetanusMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsTetanusMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsTetanusMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsTetanusMalePatientsIndicator", above20YearsTetanusMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.33.M.20", "Tetanus above 20 years", new Mapped(above20YearsTetanusMalePatientsIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsTetanusFemalePatients = new CompositionCohortDefinition();
		above20YearsTetanusFemalePatients.setName("above20YearsTetanusFemalePatients");
		above20YearsTetanusFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsTetanusFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsTetanusFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsTetanusFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(TetanusPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsTetanusFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsTetanusFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsTetanusFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsTetanusFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsTetanusFemalePatientsIndicator", above20YearsTetanusFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.33.F.20",
		    "Tetanus Female above 20 years",
		    new Mapped(above20YearsTetanusFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// E.34 Viral hepatitis (A, B, Chronic & others)
		
		SqlCohortDefinition ViralHepatitisPatient = patientWithICDCodesObsByStartDateAndEndDate("B15,B16,B17,B18,B19",
		    caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5ViralHepatitisPatient = new CompositionCohortDefinition();
		maleBelow5ViralHepatitisPatient.setName("maleBelow5ViralHepatitisPatient");
		maleBelow5ViralHepatitisPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5ViralHepatitisPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5ViralHepatitisPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5ViralHepatitisPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ViralHepatitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5ViralHepatitisPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5ViralHepatitisPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5ViralHepatitisPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5ViralHepatitisPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5ViralHepatitisPatientIndicator", maleBelow5ViralHepatitisPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.E.34.M.5", "Viral hepatitis Under 5 years", new Mapped(maleBelow5ViralHepatitisPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5ViralHepatitisPatient = new CompositionCohortDefinition();
		femaleBelow5ViralHepatitisPatient
		        .setName("FemaleBelow5ViralHepatitispatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5ViralHepatitisPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5ViralHepatitisPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5ViralHepatitisPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5ViralHepatitisPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ViralHepatitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5ViralHepatitisPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5ViralHepatitisPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5ViralHepatitisPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5ViralHepatitisPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5ViralHepatitisPatientIndicator", femaleBelow5ViralHepatitisPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.34.F.5",
		    "Viral hepatitis Female Under 5 years",
		    new Mapped(femaleBelow5ViralHepatitisPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsViralHepatitisMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsViralHepatitisMalePatients
		        .setName("betweenFiveAndNineteenYearsViralHepatitisMalePatients");
		betweenFiveAndNineteenYearsViralHepatitisMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsViralHepatitisMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsViralHepatitisMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsViralHepatitisMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ViralHepatitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsViralHepatitisMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsViralHepatitisMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsViralHepatitisMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsViralHepatitisMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsViralHepatitisMalePatientsIndicator",
		    betweenFiveAndNineteenYearsViralHepatitisMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.34.M.5_19",
		    "Viral hepatitis Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsViralHepatitisMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsViralHepatitisFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients
		        .setName("betweenFiveAndNineteenYearsViralHepatitisFemalePatients");
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ViralHepatitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsViralHepatitisFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsViralHepatitisFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsViralHepatitisFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsViralHepatitisFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.34.F.5_19",
		    "Viral hepatitis Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsViralHepatitisFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsViralHepatitisMalePatients = new CompositionCohortDefinition();
		above20YearsViralHepatitisMalePatients.setName("above20YearsViralHepatitisMalePatients");
		above20YearsViralHepatitisMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsViralHepatitisMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsViralHepatitisMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsViralHepatitisMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ViralHepatitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsViralHepatitisMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsViralHepatitisMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsViralHepatitisMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsViralHepatitisMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsViralHepatitisMalePatientsIndicator", above20YearsViralHepatitisMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.34.M.20",
		    "Viral hepatitis above 20 years",
		    new Mapped(above20YearsViralHepatitisMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsViralHepatitisFemalePatients = new CompositionCohortDefinition();
		above20YearsViralHepatitisFemalePatients.setName("above20YearsViralHepatitisFemalePatients");
		above20YearsViralHepatitisFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsViralHepatitisFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsViralHepatitisFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsViralHepatitisFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(ViralHepatitisPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsViralHepatitisFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsViralHepatitisFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsViralHepatitisFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsViralHepatitisFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsViralHepatitisFemalePatientsIndicator", above20YearsViralHepatitisFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.E.34.F.20",
		    "Viral hepatitis Female above 20 years",
		    new Mapped(above20YearsViralHepatitisFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// F) New cases of HIV/AIDS/STI/and Non-Communicable diseases/Nouveaux cas du VIH/SIDA/IST/ et Maladies non-transmissibles
		
		//Fractures/ Fractures
		
		SqlCohortDefinition FracturesPatient = patientWithICDCodeObsByStartDateAndEndDate("T142", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5FracturesPatient = new CompositionCohortDefinition();
		maleBelow5FracturesPatient.setName("maleBelow5FracturesPatient");
		maleBelow5FracturesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBelow5FracturesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5FracturesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5FracturesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(FracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5FracturesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5FracturesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5FracturesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5FracturesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5FracturesPatientIndicator", maleBelow5FracturesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.G.1.M.5", "Fractures Under 5 years", new Mapped(maleBelow5FracturesPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5FracturesPatient = new CompositionCohortDefinition();
		femaleBelow5FracturesPatient.setName("FemaleBelow5FracturespatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5FracturesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBelow5FracturesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5FracturesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5FracturesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(FracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5FracturesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5FracturesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBelow5FracturesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5FracturesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5FracturesPatientIndicator", femaleBelow5FracturesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.G.1.F.5", "Fractures Female Under 5 years", new Mapped(femaleBelow5FracturesPatientIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsFracturesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsFracturesMalePatients.setName("betweenFiveAndNineteenYearsFracturesMalePatients");
		betweenFiveAndNineteenYearsFracturesMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsFracturesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsFracturesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsFracturesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(FracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsFracturesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsFracturesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsFracturesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsFracturesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsFracturesMalePatientsIndicator", betweenFiveAndNineteenYearsFracturesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.1.M.5_19",
		    "Fractures Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsFracturesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsFracturesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsFracturesFemalePatients.setName("betweenFiveAndNineteenYearsFracturesFemalePatients");
		betweenFiveAndNineteenYearsFracturesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		betweenFiveAndNineteenYearsFracturesFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsFracturesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsFracturesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(FracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsFracturesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsFracturesFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsFracturesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsFracturesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "betweenFiveAndNineteenYearsFracturesFemalePatientsIndicator",
		    betweenFiveAndNineteenYearsFracturesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.1.F.5_19",
		    "Fractures Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsFracturesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsFracturesMalePatients = new CompositionCohortDefinition();
		above20YearsFracturesMalePatients.setName("above20YearsFracturesMalePatients");
		above20YearsFracturesMalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsFracturesMalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsFracturesMalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsFracturesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(FracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsFracturesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsFracturesMalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsFracturesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsFracturesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsFracturesMalePatientsIndicator", above20YearsFracturesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.G.1.M.20", "Fractures above 20 years", new Mapped(above20YearsFracturesMalePatientsIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsFracturesFemalePatients = new CompositionCohortDefinition();
		above20YearsFracturesFemalePatients.setName("above20YearsFracturesFemalePatients");
		above20YearsFracturesFemalePatients.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		above20YearsFracturesFemalePatients.addParameter(new Parameter("startDate", "startDate", Date.class));
		above20YearsFracturesFemalePatients.addParameter(new Parameter("endDate", "endDate", Date.class));
		above20YearsFracturesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(FracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsFracturesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsFracturesFemalePatients.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		above20YearsFracturesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsFracturesFemalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsFracturesFemalePatientsIndicator", above20YearsFracturesFemalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.1.F.20",
		    "Fractures Female above 20 years",
		    new Mapped(above20YearsFracturesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//Physical traumas, other than fractures/Traumatismes Physiques, Autres que les Fractures
		
		SqlCohortDefinition PhysicalTraumasOtherThanFracturesPatient = patientWithICDCodeObsByStartDateAndEndDate("T79",
		    caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5PhysicalTraumasOtherThanFracturesPatient = new CompositionCohortDefinition();
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.setName("maleBelow5PhysicalTraumasOtherThanFracturesPatient");
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(PhysicalTraumasOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBelow5PhysicalTraumasOtherThanFracturesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5PhysicalTraumasOtherThanFracturesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5PhysicalTraumasOtherThanFracturesPatientIndicator",
		    maleBelow5PhysicalTraumasOtherThanFracturesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.2.M.5",
		    "Physical traumas, other than fractures Under 5 years",
		    new Mapped(maleBelow5PhysicalTraumasOtherThanFracturesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5PhysicalTraumasOtherThanFracturesPatient = new CompositionCohortDefinition();
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient
		        .setName("FemaleBelow5PhysicalTraumasOtherThanFracturespatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(PhysicalTraumasOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBelow5PhysicalTraumasOtherThanFracturesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5PhysicalTraumasOtherThanFracturesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5PhysicalTraumasOtherThanFracturesPatientIndicator",
		    femaleBelow5PhysicalTraumasOtherThanFracturesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.2.F.5",
		    "Physical traumas, other than fractures Female Under 5 years",
		    new Mapped(femaleBelow5PhysicalTraumasOtherThanFracturesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients
		        .setName("betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients");
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(PhysicalTraumasOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatientsIndicator",
		            betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.G.2.M.5_19", "Physical traumas, other than fractures Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesMalePatientsIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients
		        .setName("betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients");
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(PhysicalTraumasOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatientsIndicator = Indicators
		        .newCohortIndicator("betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.G.2.F.5_19", "Physical traumas, other than fractures Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsPhysicalTraumasOtherThanFracturesFemalePatientsIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsPhysicalTraumasOtherThanFracturesMalePatients = new CompositionCohortDefinition();
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients
		        .setName("above20YearsPhysicalTraumasOtherThanFracturesMalePatients");
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(PhysicalTraumasOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsPhysicalTraumasOtherThanFracturesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsPhysicalTraumasOtherThanFracturesMalePatientsIndicator = Indicators.newCohortIndicator(
		    "above20YearsPhysicalTraumasOtherThanFracturesMalePatientsIndicator",
		    above20YearsPhysicalTraumasOtherThanFracturesMalePatients,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.2.M.20",
		    "Physical traumas, other than fractures above 20 years",
		    new Mapped(above20YearsPhysicalTraumasOtherThanFracturesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsPhysicalTraumasOtherThanFracturesFemalePatients = new CompositionCohortDefinition();
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients
		        .setName("above20YearsPhysicalTraumasOtherThanFracturesFemalePatients");
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(PhysicalTraumasOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsPhysicalTraumasOtherThanFracturesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsPhysicalTraumasOtherThanFracturesFemalePatientsIndicator = Indicators
		        .newCohortIndicator("above20YearsPhysicalTraumasOtherThanFracturesFemalePatientsIndicator",
		            above20YearsPhysicalTraumasOtherThanFracturesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.2.F.20",
		    "Physical traumas, other than fractures Female above 20 years",
		    new Mapped(above20YearsPhysicalTraumasOtherThanFracturesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//Bone and Joint disorder, other than fractures/Maladies des os et des articulations, autres que les traumatismes
		
		SqlCohortDefinition BoneAndJointDisorderOtherThanFracturesPatient = patientWithICDCodeObsByStartDateAndEndDate(
		    "M259", caseStatus, newCase);
		
		CompositionCohortDefinition maleBelow5BoneAndJointDisorderOtherThanFracturesPatient = new CompositionCohortDefinition();
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient
		        .setName("maleBelow5BoneAndJointDisorderOtherThanFracturesPatient");
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(BoneAndJointDisorderOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBelow5BoneAndJointDisorderOtherThanFracturesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBelow5BoneAndJointDisorderOtherThanFracturesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBelow5BoneAndJointDisorderOtherThanFracturesPatientIndicator",
		    maleBelow5BoneAndJointDisorderOtherThanFracturesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.3.M.5",
		    "Bone and Joint disorder, other than fractures Under 5 years",
		    new Mapped(maleBelow5BoneAndJointDisorderOtherThanFracturesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient = new CompositionCohortDefinition();
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient
		        .setName("FemaleBelow5BoneAndJointDisorderOtherThanFracturespatientWithICDCodesObsByStartDateAndEndDatePatient");
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(BoneAndJointDisorderOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBelowFiveYear, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBelow5BoneAndJointDisorderOtherThanFracturesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5BoneAndJointDisorderOtherThanFracturesPatientIndicator",
		    femaleBelow5BoneAndJointDisorderOtherThanFracturesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.3.F.5",
		    "Bone and Joint disorder, other than fractures Female Under 5 years",
		    new Mapped(femaleBelow5BoneAndJointDisorderOtherThanFracturesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients
		        .setName("betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients");
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(BoneAndJointDisorderOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatientsIndicator = Indicators
		        .newCohortIndicator(
		            "betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatientsIndicator",
		            betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.G.3.M.5_19", "Bone and Joint disorder, other than fractures Between 5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesMalePatientsIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients = new CompositionCohortDefinition();
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients
		        .setName("betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients");
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(BoneAndJointDisorderOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenFiveAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatientsIndicator = Indicators
		        .newCohortIndicator(
		            "betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatientsIndicator",
		            betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("II.G.3.F.5_19", "Bone and Joint disorder, other than fractures Female Between  5 and 19 years",
		    new Mapped(betweenFiveAndNineteenYearsBoneAndJointDisorderOtherThanFracturesFemalePatientsIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients = new CompositionCohortDefinition();
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients
		        .setName("above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients");
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(BoneAndJointDisorderOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients.setCompositionString("1 and 2 and 3");
		
		CohortIndicator above20YearsBoneAndJointDisorderOtherThanFracturesMalePatientsIndicator = Indicators
		        .newCohortIndicator("above20YearsBoneAndJointDisorderOtherThanFracturesMalePatientsIndicator",
		            above20YearsBoneAndJointDisorderOtherThanFracturesMalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.3.M.20",
		    "Bone and Joint disorder, other than fractures above 20 years",
		    new Mapped(above20YearsBoneAndJointDisorderOtherThanFracturesMalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients = new CompositionCohortDefinition();
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients
		        .setName("above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients");
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(BoneAndJointDisorderOtherThanFracturesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove20Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatientsIndicator = Indicators
		        .newCohortIndicator("above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatientsIndicator",
		            above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatients,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "II.G.3.F.20",
		    "Bone and Joint disorder, other than fractures Female above 20 years",
		    new Mapped(above20YearsBoneAndJointDisorderOtherThanFracturesFemalePatientsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// Gynecological problems/ Probl√®mes gyn√©cologiques
		// AIDS clinical/ SIDA clinique
		//Skin Infection opportunistic/ Dermatose g√©n√©ralis√©e
		//Herpes Zoster (Zona / shingles,)/ Herpes Zoster(Zona / shingles,)
		//Candidiasis oral/ Candidoses oral
		//Fever Chronic (> 1 month)/ Fi√®vre Chronique (> 1 mois)
		//Diarrhea Chronic opportunistic infections/Diarrh√©e Chronique due au Sida
		//Needle stick-injuries (or other health worker HIV exposure)/Blessures dues aux Aiguilles (et autres exposition professionnelle aux VIH)
		//Goitre/ Goitre
		//Vitamin A deficiency - Night blindness/C√©cit√© Nocturne ¬± carence en Vitamine A
		//Leprosy (MB + PB)/ L√®pre (confirm√©e)
		
	}
	
	// III. Mental Health/ Sant√© mentale
	
	private void createCohortMonthlyIndicatorsIII(CohortIndicatorDataSetDefinition dsd) {
		
		AgeCohortDefinition patientBetweenZeroAndNineteenYears = patientWithAgeBetween(0, 19);
		
		GenderCohortDefinition males = new GenderCohortDefinition();
		males.setName("male Patients");
		males.setMaleIncluded(true);
		
		AgeCohortDefinition patientBetween20And39Years = patientWithAgeBetween(20, 39);
		
		AgeCohortDefinition patientAbove40Years = patientWithAgeAbove(40);
		
		// III.B. 1 New case patient with Anxiety disorders/Les troubles anxieux
		
		SqlCohortDefinition newanxietyDisorders = patientWithICDCodesObsByStartDateAndEndDate("F40,F41,F42,F45,F46,F47,F48",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19anxietyDisorders = new CompositionCohortDefinition();
		maleBeteen0And19anxietyDisorders.setName("maleBeteen0And19anxietyDisorders");
		maleBeteen0And19anxietyDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19anxietyDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19anxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19anxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19anxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19anxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19anxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19anxietyDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19anxietyDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19anxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19anxietyDisordersIndicator", maleBeteen0And19anxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.N.M.019",
		    "New case Anxiety disorders/Les troubles anxieux Male",
		    new Mapped(maleBetween0And19anxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19anxietyDisorders = new CompositionCohortDefinition();
		femaleBeteen0And19anxietyDisorders.setName("femaleBelow5anxietyDisorders");
		femaleBeteen0And19anxietyDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19anxietyDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19anxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19anxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19anxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19anxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19anxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19anxietyDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19anxietyDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19anxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5anxietyDisordersIndicator", femaleBeteen0And19anxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.N.F.019",
		    "New case Anxiety disorders/Les troubles anxieux Female",
		    new Mapped(femaleBeteen0And19anxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithanxietyDisorders = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithanxietyDisorders.setName("malepatientsBetween20And39YearsWithanxietyDisorders");
		malepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithanxietyDisorders
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithanxietyDisorders
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithanxietyDisorders.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithanxietyDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithanxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithanxietyDisordersIndicator",
		    malepatientsBetween20And39YearsWithanxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.N.M.2039",
		    "New case Anxiety disorders/Les troubles anxieux Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithanxietyDisorders = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithanxietyDisorders
		        .setName("femalepatientsBetween20And39YearsWithanxietyDisorders");
		femalepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithanxietyDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithanxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithanxietyDisordersIndicator",
		    femalepatientsBetween20And39YearsWithanxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.N.F.2039",
		    "New case Anxiety disorders/Les troubles anxieux Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithanxietyDisorders = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithanxietyDisorders.setName("malepatientsAbove40YearsWithanxietyDisorders");
		malepatientsAbove40YearsWithanxietyDisorders
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithanxietyDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithanxietyDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithanxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithanxietyDisordersIndicator", malepatientsAbove40YearsWithanxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.N.M.40",
		    "New case Anxiety disorders/Les troubles anxieux Male above 40",
		    new Mapped(malepatientsAbove40YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithanxietyDisorders = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithanxietyDisorders.setName("femalepatientsAbove40YearsWithanxietyDisorders");
		femalepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithanxietyDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithanxietyDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithanxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithanxietyDisordersIndicator", femalepatientsAbove40YearsWithanxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.N.F.40",
		    "New case Anxiety disorders/Les troubles anxieux Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 1 Old case patient with Anxiety disorders/Les troubles anxieux
		
		SqlCohortDefinition OldanxietyDisorders = patientWithICDCodesObsByStartDateAndEndDate("F40,F41,F42,F45,F46,F47,F48",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19anxietyDisordersOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19anxietyDisordersOldCasePatient.setName("maleBeteen0And19anxietyDisordersOldCasePatient");
		maleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19anxietyDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19anxietyDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19anxietyDisordersOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19anxietyDisordersOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19anxietyDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19anxietyDisordersOldCasePatientIndicator", maleBeteen0And19anxietyDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.O.M.019",
		    "Old case Anxiety disorders/Les troubles anxieux Male",
		    new Mapped(maleBetween0And19anxietyDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19anxietyDisordersOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19anxietyDisordersOldCasePatient.setName("femaleBelow5anxietyDisordersOldCasePatient");
		femaleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19anxietyDisordersOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19anxietyDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19anxietyDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19anxietyDisordersOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19anxietyDisordersOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19anxietyDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5anxietyDisordersOldCasePatientIndicator", femaleBeteen0And19anxietyDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.O.F.019",
		    "Old case Anxiety disorders/Les troubles anxieux Female",
		    new Mapped(femaleBeteen0And19anxietyDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithanxietyDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders
		        .setName("maleOldCasepatientsBetween20And39YearsWithanxietyDisorders");
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithanxietyDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithanxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithanxietyDisordersIndicator",
		    maleOldCasepatientsBetween20And39YearsWithanxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.O.M.2039",
		    "Old case Anxiety disorders/Les troubles anxieux Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders
		        .setName("femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders");
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithanxietyDisordersIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithanxietyDisordersIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithanxietyDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.O.F.2039",
		    "Old case Anxiety disorders/Les troubles anxieux Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithanxietyDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.setName("maleOldCasepatientsAbove40YearsWithanxietyDisorders");
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithanxietyDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithanxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithanxietyDisordersIndicator",
		    maleOldCasepatientsAbove40YearsWithanxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.O.M.40",
		    "Old case Anxiety disorders/Les troubles anxieux Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithanxietyDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders
		        .setName("femaleOldCasepatientsAbove40YearsWithanxietyDisorders");
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldanxietyDisorders, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithanxietyDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithanxietyDisordersIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithanxietyDisordersIndicator",
		    femaleOldCasepatientsAbove40YearsWithanxietyDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.1.O.F.40",
		    "Old case Anxiety disorders/Les troubles anxieux Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithanxietyDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 2 New case patient with Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique
		
		SqlCohortDefinition newCasePatiens = Cohorts.getPatientsWithCodedObservationsBetweenStartDateAndEndDate(
		    "newCasePatiens", caseStatus, newCase);
		
		SqlCohortDefinition newpostTraumaticStressDisorderPatient = patientWithICDCodeObsByStartDateAndEndDate("F431",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19PostTraumaticStressDisorderPatient = new CompositionCohortDefinition();
		maleBeteen0And19PostTraumaticStressDisorderPatient.setName("maleBeteen0And19TraumaticStressDisorderPatient");
		maleBeteen0And19PostTraumaticStressDisorderPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19PostTraumaticStressDisorderPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19PostTraumaticStressDisorderPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19PostTraumaticStressDisorderPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19PostTraumaticStressDisorderPatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19PostTraumaticStressDisorderPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19PostTraumaticStressDisorderPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19PostTraumaticStressDisorderPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19PostTraumaticStressDisorderPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19PosttTraumaticStressDisorderPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19PosttTraumaticStressDisorderPatientIndicator",
		    maleBeteen0And19PostTraumaticStressDisorderPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.N.M.019",
		    "New case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Male",
		    new Mapped(maleBetween0And19PosttTraumaticStressDisorderPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19postTraumaticStressDisorderPatient = new CompositionCohortDefinition();
		femaleBeteen0And19postTraumaticStressDisorderPatient.setName("femaleBelow5postTraumaticStressDisorderPatient");
		femaleBeteen0And19postTraumaticStressDisorderPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19postTraumaticStressDisorderPatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19postTraumaticStressDisorderPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19postTraumaticStressDisorderPatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19postTraumaticStressDisorderPatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19postTraumaticStressDisorderPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19postTraumaticStressDisorderPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19postTraumaticStressDisorderPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19postTraumaticStressDisorderPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19PostTraumaticStressDisorderPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5postTraumaticStressDisorderPatientIndicator", femaleBeteen0And19postTraumaticStressDisorderPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.N.F.019",
		    "New case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Female",
		    new Mapped(femaleBeteen0And19PostTraumaticStressDisorderPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder
		        .setName("malepatientsBetween20And39YearsWithPostTraumaticStressDisorder");
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator",
		            malepatientsBetween20And39YearsWithPostTraumaticStressDisorder,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.N.M.2039",
		    "New case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder
		        .setName("femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder");
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator",
		            femalepatientsBetween20And39YearsWithPostTraumaticStressDisorder,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.N.F.2039",
		    "New case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithPostTraumaticStressDisorder
		        .setName("malepatientsAbove40YearsWithPostTraumaticStressDisorder");
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator",
		    malepatientsAbove40YearsWithPostTraumaticStressDisorder,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.N.M.40",
		    "New case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Male above 40",
		    new Mapped(malepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder
		        .setName("femalepatientsAbove40YearsWithPostTraumaticStressDisorder");
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator",
		    femalepatientsAbove40YearsWithPostTraumaticStressDisorder,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.N.F.40",
		    "New case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 2 Old case patient with Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique
		
		SqlCohortDefinition oldCasePatiens = Cohorts.getPatientsWithCodedObservationsBetweenStartDateAndEndDate(
		    "oldCasePatiens", caseStatus, oldCase);
		
		SqlCohortDefinition odlpostTraumaticStressDisorderPatient = patientWithICDCodeObsByStartDateAndEndDate("F431",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19PostTraumaticStressDisorderOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient
		        .setName("maleBeteen0And19TraumaticStressDisorderOldCasePatient");
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19PostTraumaticStressDisorderOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19PosttTraumaticStressDisorderOldCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19PosttTraumaticStressDisorderOldCasePatientIndicator",
		            maleBeteen0And19PostTraumaticStressDisorderOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.O.M.019",
		    "Old case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Male",
		    new Mapped(maleBetween0And19PosttTraumaticStressDisorderOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19postTraumaticStressDisorderOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient
		        .setName("femaleBelow5postTraumaticStressDisorderOldCasePatient");
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19postTraumaticStressDisorderOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19PostTraumaticStressDisorderOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5postTraumaticStressDisorderOldCasePatientIndicator",
		            femaleBeteen0And19postTraumaticStressDisorderOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.O.F.019",
		    "Old case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Female",
		    new Mapped(femaleBeteen0And19PostTraumaticStressDisorderOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder
		        .setName("maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder");
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator",
		            maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.O.M.2039",
		    "Old case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder
		        .setName("femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder");
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorder,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.O.F.2039",
		    "Old case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder
		        .setName("maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder");
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator",
		            maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.O.M.40",
		    "Old case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder
		        .setName("femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder");
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlpostTraumaticStressDisorderPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator",
		            femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorder,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.2.O.F.40",
		    "Old case Post-traumatic stress disorder/ Syndrome de Stress Post-Traumatique Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithPostTraumaticStressDisorderIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 3 New case patient with Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses
		
		SqlCohortDefinition newschizophreniaAndOtherPsychosesPatient = patientWithICDCodeObsByStartDateAndEndDate("F209",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19schizophreniaAndOtherPsychosesPatient = new CompositionCohortDefinition();
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient
		        .setName("maleBeteen0And19schizophreniaAndOtherPsychosesPatient");
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19schizophreniaAndOtherPsychosesPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19schizophreniaAndOtherPsychosesPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19schizophreniaAndOtherPsychosesPatientIndicator",
		    maleBeteen0And19schizophreniaAndOtherPsychosesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.N.M.019",
		    "New case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Male",
		    new Mapped(maleBetween0And19schizophreniaAndOtherPsychosesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19schizophreniaAndOtherPsychosesPatient = new CompositionCohortDefinition();
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.setName("femaleBelow5schizophreniaAndOtherPsychosesPatient");
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19schizophreniaAndOtherPsychosesPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19schizophreniaAndOtherPsychosesPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5schizophreniaAndOtherPsychosesPatientIndicator",
		    femaleBeteen0And19schizophreniaAndOtherPsychosesPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.N.F.019",
		    "New case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Female",
		    new Mapped(femaleBeteen0And19schizophreniaAndOtherPsychosesPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses
		        .setName("malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses");
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator",
		            malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.N.M.2039",
		    "New case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses
		        .setName("femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses");
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "4",
		    new Mapped<CohortDefinition>(newCasePatiens, ParameterizableUtil
		            .createParameterMappings("onOrAfter=${startDate},onOrBefore=${endDate}")));
		femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator",
		            femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.N.F.2039",
		    "New case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses
		        .setName("malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses");
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator",
		    malepatientsAbove40YearsWithschizophreniaAndOtherPsychoses,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.N.M.40",
		    "New case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Male above 40",
		    new Mapped(malepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses
		        .setName("femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses");
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators
		        .newCohortIndicator("femalepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator",
		            femalepatientsAbove40YearsWithschizophreniaAndOtherPsychoses,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.N.F.40",
		    "New case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 3 Old case patient with Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses
		SqlCohortDefinition oldschizophreniaAndOtherPsychosesPatient = patientWithICDCodeObsByStartDateAndEndDate("F209",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient
		        .setName("maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient");
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19schizophreniaAndOtherPsychosesOldCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19schizophreniaAndOtherPsychosesOldCasePatientIndicator",
		            maleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.O.M.019",
		    "Old case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Male",
		    new Mapped(maleBetween0And19schizophreniaAndOtherPsychosesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient
		        .setName("femaleBelow5schizophreniaAndOtherPsychosesOldCasePatient");
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5schizophreniaAndOtherPsychosesOldCasePatientIndicator",
		            femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.O.F.019",
		    "Old case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Female",
		    new Mapped(femaleBeteen0And19schizophreniaAndOtherPsychosesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses
		        .setName("maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses");
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator",
		            maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.3.O.M.2039",
		    "Old case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses
		        .setName("femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses");
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychoses,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.3.O.F.2039",
		    "Old case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithschizophreniaAndOtherPsychosesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses
		        .setName("maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses");
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator",
		            maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.O.M.40",
		    "Old case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses
		        .setName("femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses");
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldschizophreniaAndOtherPsychosesPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator",
		            femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychoses,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.3.O.F.40",
		    "Old case Schizophrenia and other psychoses / Schizophr√©nie et autres Psychoses Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithschizophreniaAndOtherPsychosesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 4 New case patient with Somatoform disorders/Troubles somatiques
		
		SqlCohortDefinition newsomatoformDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate("F459", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19somatoformDisordersPatient = new CompositionCohortDefinition();
		maleBeteen0And19somatoformDisordersPatient.setName("maleBeteen0And19somatoformDisordersPatient");
		maleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19somatoformDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19somatoformDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19somatoformDisordersPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19somatoformDisordersPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19somatoformDisordersPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19somatoformDisordersPatientIndicator", maleBeteen0And19somatoformDisordersPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.N.M.019",
		    "New case Somatoform disorders/Troubles somatiques Male",
		    new Mapped(maleBetween0And19somatoformDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19somatoformDisordersPatient = new CompositionCohortDefinition();
		femaleBeteen0And19somatoformDisordersPatient.setName("femaleBelow5somatoformDisordersPatient");
		femaleBeteen0And19somatoformDisordersPatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19somatoformDisordersPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19somatoformDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19somatoformDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19somatoformDisordersPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19somatoformDisordersPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19somatoformDisordersPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5somatoformDisordersPatientIndicator", femaleBeteen0And19somatoformDisordersPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.N.F.019",
		    "New case Somatoform disorders/Troubles somatiques Female",
		    new Mapped(femaleBeteen0And19somatoformDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithsomatoformDisorders
		        .setName("malepatientsBetween20And39YearsWithsomatoformDisorders");
		malepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithsomatoformDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithsomatoformDisordersIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithsomatoformDisordersIndicator",
		    malepatientsBetween20And39YearsWithsomatoformDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.N.M.2039",
		    "New case Somatoform disorders/Troubles somatiques Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithsomatoformDisorders
		        .setName("femalepatientsBetween20And39YearsWithsomatoformDisorders");
		femalepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithsomatoformDisorders
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithsomatoformDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithsomatoformDisordersIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithsomatoformDisordersIndicator",
		    femalepatientsBetween20And39YearsWithsomatoformDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.N.F.2039",
		    "New case Somatoform disorders/Troubles somatiques Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithsomatoformDisorders.setName("malepatientsAbove40YearsWithsomatoformDisorders");
		malepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithsomatoformDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithsomatoformDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithsomatoformDisordersIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithsomatoformDisordersIndicator", malepatientsAbove40YearsWithsomatoformDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.N.M.40",
		    "New case Somatoform disorders/Troubles somatiques Male above 40",
		    new Mapped(malepatientsAbove40YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithsomatoformDisorders.setName("femalepatientsAbove40YearsWithsomatoformDisorders");
		femalepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithsomatoformDisorders
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithsomatoformDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithsomatoformDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithsomatoformDisordersIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithsomatoformDisordersIndicator", femalepatientsAbove40YearsWithsomatoformDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.N.F.40",
		    "New case Somatoform disorders/Troubles somatiques Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 4 Old case patient with Somatoform disorders/Troubles somatiques
		
		SqlCohortDefinition oldsomatoformDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate("F459", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19somatoformDisordersOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19somatoformDisordersOldCasePatient.setName("maleBeteen0And19somatoformDisordersOldCasePatient");
		maleBeteen0And19somatoformDisordersOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19somatoformDisordersOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19somatoformDisordersOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19somatoformDisordersOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19somatoformDisordersOldCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19somatoformDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19somatoformDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19somatoformDisordersOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19somatoformDisordersOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19somatoformDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19somatoformDisordersOldCasePatientIndicator",
		    maleBeteen0And19somatoformDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.O.M.019",
		    "Old case Somatoform disorders/Troubles somatiques Male",
		    new Mapped(maleBetween0And19somatoformDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19somatoformDisordersOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19somatoformDisordersOldCasePatient.setName("femaleBelow5somatoformDisordersOldCasePatient");
		femaleBeteen0And19somatoformDisordersOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19somatoformDisordersOldCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19somatoformDisordersOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19somatoformDisordersOldCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19somatoformDisordersOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19somatoformDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19somatoformDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19somatoformDisordersOldCasePatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19somatoformDisordersOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19somatoformDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5somatoformDisordersOldCasePatientIndicator", femaleBeteen0And19somatoformDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.O.F.019",
		    "Old case Somatoform disorders/Troubles somatiques Female",
		    new Mapped(femaleBeteen0And19somatoformDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders
		        .setName("maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders");
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithsomatoformDisordersIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithsomatoformDisordersIndicator",
		            maleOldCasepatientsBetween20And39YearsWithsomatoformDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.O.M.2039",
		    "Old case Somatoform disorders/Troubles somatiques Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders
		        .setName("femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders");
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithsomatoformDisordersIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithsomatoformDisordersIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithsomatoformDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.O.F.2039",
		    "Old case Somatoform disorders/Troubles somatiques Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders
		        .setName("maleOldCasepatientsAbove40YearsWithsomatoformDisorders");
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithsomatoformDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithsomatoformDisordersIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithsomatoformDisordersIndicator",
		    maleOldCasepatientsAbove40YearsWithsomatoformDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.O.M.40",
		    "Old case Somatoform disorders/Troubles somatiques Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithsomatoformDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders
		        .setName("femaleOldCasepatientsAbove40YearsWithsomatoformDisorders");
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldsomatoformDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithsomatoformDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithsomatoformDisordersIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithsomatoformDisordersIndicator",
		    femaleOldCasepatientsAbove40YearsWithsomatoformDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.4.O.F.40",
		    "Old case Somatoform disorders/Troubles somatiques Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithsomatoformDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 5 New case patient with Behavioral and emotional disorders with on set usually occurring in childhood and adolescence
		
		SqlCohortDefinition newBehavioralDisordersOccurringInChildhoodAndAdolescencePatient = patientWithICDCodesObsByStartDateAndEndDate(
		    "F10,F11,F12,F13,F14,F15,F16,F17,F18,F19", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient = new CompositionCohortDefinition();
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient
		        .setName("maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient");
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatientIndicator = Indicators
		        .newCohortIndicator(
		            "maleBetween0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatientIndicator",
		            maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.5.N.M.019",
		    "New case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Male",
		    new Mapped(maleBetween0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient = new CompositionCohortDefinition();
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient
		        .setName("femaleBelow5BehavioralDisordersOccurringInChildhoodAndAdolescencePatient");
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5BehavioralDisordersOccurringInChildhoodAndAdolescencePatientIndicator",
		            femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.5.N.F.019",
		    "New case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Female",
		    new Mapped(femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescencePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.N.M.2039",
		    "New case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.N.F.2039",
		    "New case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.N.M.40",
		    "New case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Male above 40",
		    new Mapped(malepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.N.F.40",
		    "New case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 5 Old case patient with Behavioral and emotional disorders with on set usually occurring in childhood and adolescence
		
		SqlCohortDefinition oldBehavioralDisordersOccurringInChildhoodAndAdolescencePatient = patientWithICDCodesObsByStartDateAndEndDate(
		    "F10,F11,F12,F13,F14,F15,F16,F17,F18,F19", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient
		        .setName("maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient");
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatientIndicator = Indicators
		        .newCohortIndicator(
		            "maleBetween0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatientIndicator",
		            maleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.5.O.M.019",
		    "Old case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Male",
		    new Mapped(maleBetween0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient
		        .setName("femaleBelow5BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient");
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatientIndicator = Indicators
		        .newCohortIndicator(
		            "femaleBelow5BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatientIndicator",
		            femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.5.O.F.019",
		    "Old case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Female",
		    new Mapped(femaleBeteen0And19BehavioralDisordersOccurringInChildhoodAndAdolescenceOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.O.M.2039",
		    "Old case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Male between 20 and 39 years",
		    new Mapped(
		            maleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.O.F.2039",
		    "Old case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Female between 20 and 39 years",
		    new Mapped(
		            femaleOldCasepatientsBetween20And39YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.O.M.40",
		    "Old case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setName("femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence");
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(oldBehavioralDisordersOccurringInChildhoodAndAdolescencePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator",
		            femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescence,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.5.O.F.40",
		    "Old case Behavioral and emotional disorders with on set usually occurring in childhood and adolescence Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithBehavioralDisordersOccurringInChildhoodAndAdolescenceIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 6 New case patient with Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool
		
		SqlCohortDefinition newmentalAndBehavioralDisorderDueToUseOfAlcohol = patientWithICDCodesObsByStartDateAndEndDate(
		    "F80,F81,F82,F83,F84,F85,F86,F87,F88,F89", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol");
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19mentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19mentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.N.M.019",
		    "New case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Male",
		    new Mapped(maleBetween0And19mentalAndBehavioralDisorderDueToUseOfAlcoholIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("femaleBelow5mentalAndBehavioralDisorderDueToUseOfAlcohol");
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator("femaleBelow5mentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.N.F.019",
		    "New case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Female",
		    new Mapped(femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator(
		            "malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.N.M.2039",
		    "New case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator(
		            "femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.N.F.2039",
		    "New case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator("malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.N.M.40",
		    "New case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Male above 40",
		    new Mapped(malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator("femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.N.F.40",
		    "New case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 6 Old case patient with Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool
		
		SqlCohortDefinition OldmentalAndBehavioralDisorderDueToUseOfAlcohol = patientWithICDCodesObsByStartDateAndEndDate(
		    "F80,F81,F82,F83,F84,F85,F86,F87,F88,F89", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient
		        .setName("maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient");
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatientIndicator",
		            maleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.O.M.019",
		    "Old case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Male",
		    new Mapped(maleBetween0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient
		        .setName("femaleBelow5mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient");
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatientIndicator",
		            femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.O.F.019",
		    "Old case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Female",
		    new Mapped(femaleBeteen0And19mentalAndBehavioralDisorderDueToUseOfAlcoholOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.O.M.2039",
		    "Old case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.O.F.2039",
		    "Old case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.O.M.40",
		    "Old case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setName("femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol");
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToUseOfAlcohol, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator",
		            femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcohol,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.6.O.F.40",
		    "Old case Mental and behavioral disorder due to use of alcohol/Troubles mentaux et du comportement due √† l‚Äôusage de l‚Äôalcool Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToUseOfAlcoholIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 7 New case patient with Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues
		
		SqlCohortDefinition newmentalAndBehavioralDisorderDueToSubstanceAbuse = patientWithICDCodesObsByStartDateAndEndDate(
		    "F11,F12,F13,F14,F15,F16,F17,F18,F19", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse");
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19mentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19mentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.N.M.019",
		    "New case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Male",
		    new Mapped(maleBetween0And19mentalAndBehavioralDisorderDueToSubstanceAbuseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("femaleBelow5mentalAndBehavioralDisorderDueToSubstanceAbuse");
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator("femaleBelow5mentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.N.F.019",
		    "New case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Female",
		    new Mapped(femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator(
		            "malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.N.M.2039",
		    "New case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator(
		            "femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.N.F.2039",
		    "New case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator("malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.N.M.40",
		    "New case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Male above 40",
		    new Mapped(malepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator("femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.N.F.40",
		    "New case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 7 Old case patient with Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues
		
		SqlCohortDefinition OldmentalAndBehavioralDisorderDueToSubstanceAbuse = patientWithICDCodesObsByStartDateAndEndDate(
		    "F11,F12,F13,F14,F15,F16,F17,F18,F19", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient
		        .setName("maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient");
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatientIndicator = Indicators
		        .newCohortIndicator(
		            "maleBetween0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatientIndicator",
		            maleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.O.M.019",
		    "Old case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Male",
		    new Mapped(maleBetween0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient
		        .setName("femaleBelow5mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient");
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatientIndicator",
		            femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.O.F.019",
		    "Old case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Female",
		    new Mapped(femaleBeteen0And19mentalAndBehavioralDisorderDueToSubstanceAbuseOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.O.M.2039",
		    "Old case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.O.F.2039",
		    "Old case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.O.M.40",
		    "Old case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setName("femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse");
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldmentalAndBehavioralDisorderDueToSubstanceAbuse, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator",
		            femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuse,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.7.O.F.40",
		    "Old case Mental and behavioral disorder due to substance abuse/Troubles mentaux et du comportement due √† l‚Äôusage de drogues Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithmentalAndBehavioralDisorderDueToSubstanceAbuseIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 8 New case patient with Depression/ D√©pression
		
		SqlCohortDefinition newdepressionPatient = patientWithICDCodeObsByStartDateAndEndDate("F329", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19depressionPatient = new CompositionCohortDefinition();
		maleBeteen0And19depressionPatient.setName("maleBeteen0And19depressionPatient");
		maleBeteen0And19depressionPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19depressionPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19depressionPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19depressionPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19depressionPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19depressionPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newdepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19depressionPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19depressionPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19depressionPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19depressionPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19depressionPatientIndicator", maleBeteen0And19depressionPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.N.M.019",
		    "New case Depression/ D√©pression Male",
		    new Mapped(maleBetween0And19depressionPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19depressionPatient = new CompositionCohortDefinition();
		femaleBeteen0And19depressionPatient.setName("femaleBelow5depressionPatient");
		femaleBeteen0And19depressionPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19depressionPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19depressionPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19depressionPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19depressionPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19depressionPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newdepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19depressionPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19depressionPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19depressionPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19depressionPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5depressionPatientIndicator", femaleBeteen0And19depressionPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.N.F.019",
		    "New case Depression/ D√©pression Female",
		    new Mapped(femaleBeteen0And19depressionPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithdepression = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithdepression.setName("malepatientsBetween20And39YearsWithdepression");
		malepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newdepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithdepression.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithdepression.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithdepressionIndicator", malepatientsBetween20And39YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.N.M.2039",
		    "New case Depression/ D√©pression Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithdepression = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithdepression.setName("femalepatientsBetween20And39YearsWithdepression");
		femalepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newdepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithdepression.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithdepression.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithdepressionIndicator", femalepatientsBetween20And39YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.N.F.2039",
		    "New case Depression/ D√©pression Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithdepression = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithdepression.setName("malepatientsAbove40YearsWithdepression");
		malepatientsAbove40YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithdepression.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newdepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithdepression.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithdepression.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithdepressionIndicator", malepatientsAbove40YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.N.M.40",
		    "New case Depression/ D√©pression Male above 40",
		    new Mapped(malepatientsAbove40YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithdepression = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithdepression.setName("femalepatientsAbove40YearsWithdepression");
		femalepatientsAbove40YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithdepression.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newdepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithdepression.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithdepression.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithdepressionIndicator", femalepatientsAbove40YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.N.F.40",
		    "New case Depression/ D√©pression Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 8 Old case patient with Depression/ D√©pression
		
		SqlCohortDefinition odldepressionPatient = patientWithICDCodeObsByStartDateAndEndDate("F329", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19depressionOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19depressionOldCasePatient.setName("maleBeteen0And19depressionOldCasePatient");
		maleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19depressionOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odldepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19depressionOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19depressionOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19depressionOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19depressionOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19depressionOldCasePatientIndicator", maleBeteen0And19depressionOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.O.M.019",
		    "Old case Depression/ D√©pression Male",
		    new Mapped(maleBetween0And19depressionOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19depressionOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19depressionOldCasePatient.setName("femaleBelow5depressionOldCasePatient");
		femaleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19depressionOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19depressionOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odldepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19depressionOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19depressionOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19depressionOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19depressionOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5depressionOldCasePatientIndicator", femaleBeteen0And19depressionOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.O.F.019",
		    "Old case Depression/ D√©pression Female",
		    new Mapped(femaleBeteen0And19depressionOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithdepression = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithdepression.setName("maleOldCasepatientsBetween20And39YearsWithdepression");
		maleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithdepression
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithdepression
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odldepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithdepression.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithdepression.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithdepressionIndicator",
		    maleOldCasepatientsBetween20And39YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.O.M.2039",
		    "Old case Depression/ D√©pression Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithdepression = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithdepression
		        .setName("femaleOldCasepatientsBetween20And39YearsWithdepression");
		femaleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odldepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithdepression.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithdepression.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithdepressionIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.O.F.2039",
		    "Old case Depression/ D√©pression Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithdepression = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithdepression.setName("maleOldCasepatientsAbove40YearsWithdepression");
		maleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odldepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithdepression.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithdepression.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithdepressionIndicator", maleOldCasepatientsAbove40YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.O.M.40",
		    "Old case Depression/ D√©pression Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithdepression = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithdepression.setName("femaleOldCasepatientsAbove40YearsWithdepression");
		femaleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithdepression.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithdepression.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odldepressionPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithdepression.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithdepression.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithdepression.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithdepressionIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithdepressionIndicator", femaleOldCasepatientsAbove40YearsWithdepression,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.8.O.F.40",
		    "Old case Depression/ D√©pression Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithdepressionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 9 New case patient with Suicide attempted / Suicide tentative
		
		SqlCohortDefinition newsuicideAttemptedPatient = patientWithICDCodeObsByStartDateAndEndDate("X84", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19suicideAttemptedPatient = new CompositionCohortDefinition();
		maleBeteen0And19suicideAttemptedPatient.setName("maleBeteen0And19suicideAttemptedPatient");
		maleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19suicideAttemptedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19suicideAttemptedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19suicideAttemptedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19suicideAttemptedPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19suicideAttemptedPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19suicideAttemptedPatientIndicator", maleBeteen0And19suicideAttemptedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.N.M.019",
		    "New case Suicide attempted / Suicide tentative Male",
		    new Mapped(maleBetween0And19suicideAttemptedPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19suicideAttemptedPatient = new CompositionCohortDefinition();
		femaleBeteen0And19suicideAttemptedPatient.setName("femaleBelow5suicideAttemptedPatient");
		femaleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19suicideAttemptedPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19suicideAttemptedPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19suicideAttemptedPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19suicideAttemptedPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19suicideAttemptedPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19suicideAttemptedPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5suicideAttemptedPatientIndicator", femaleBeteen0And19suicideAttemptedPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.N.F.019",
		    "New case Suicide attempted / Suicide tentative Female",
		    new Mapped(femaleBeteen0And19suicideAttemptedPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithsuicideAttempted = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithsuicideAttempted.setName("malepatientsBetween20And39YearsWithsuicideAttempted");
		malepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithsuicideAttempted
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithsuicideAttempted
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithsuicideAttempted.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithsuicideAttempted.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithsuicideAttemptedIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithsuicideAttemptedIndicator",
		    malepatientsBetween20And39YearsWithsuicideAttempted,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.N.M.2039",
		    "New case Suicide attempted / Suicide tentative Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithsuicideAttempted = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithsuicideAttempted
		        .setName("femalepatientsBetween20And39YearsWithsuicideAttempted");
		femalepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithsuicideAttempted.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithsuicideAttemptedIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithsuicideAttemptedIndicator",
		    femalepatientsBetween20And39YearsWithsuicideAttempted,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.N.F.2039",
		    "New case Suicide attempted / Suicide tentative Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithsuicideAttempted = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithsuicideAttempted.setName("malepatientsAbove40YearsWithsuicideAttempted");
		malepatientsAbove40YearsWithsuicideAttempted
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithsuicideAttempted.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithsuicideAttempted.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithsuicideAttemptedIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithsuicideAttemptedIndicator", malepatientsAbove40YearsWithsuicideAttempted,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.N.M.40",
		    "New case Suicide attempted / Suicide tentative Male above 40",
		    new Mapped(malepatientsAbove40YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithsuicideAttempted = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithsuicideAttempted.setName("femalepatientsAbove40YearsWithsuicideAttempted");
		femalepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithsuicideAttempted.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithsuicideAttempted.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithsuicideAttemptedIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithsuicideAttemptedIndicator", femalepatientsAbove40YearsWithsuicideAttempted,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.N.F.40",
		    "New case Suicide attempted / Suicide tentative Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 9 Old case patient with Suicide attempted / Suicide tentative
		
		SqlCohortDefinition odlsuicideAttemptedPatient = patientWithICDCodeObsByStartDateAndEndDate("X84", caseStatus,
		    oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19suicideAttemptedOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19suicideAttemptedOldCasePatient.setName("maleBeteen0And19suicideAttemptedOldCasePatient");
		maleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19suicideAttemptedOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19suicideAttemptedOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19suicideAttemptedOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19suicideAttemptedOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19suicideAttemptedOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19suicideAttemptedOldCasePatientIndicator", maleBeteen0And19suicideAttemptedOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.O.M.019",
		    "Old case Suicide attempted / Suicide tentative Male",
		    new Mapped(maleBetween0And19suicideAttemptedOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19suicideAttemptedOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19suicideAttemptedOldCasePatient.setName("femaleBelow5suicideAttemptedOldCasePatient");
		femaleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19suicideAttemptedOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19suicideAttemptedOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19suicideAttemptedOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19suicideAttemptedOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19suicideAttemptedOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19suicideAttemptedOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5suicideAttemptedOldCasePatientIndicator", femaleBeteen0And19suicideAttemptedOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.O.F.019",
		    "Old case Suicide attempted / Suicide tentative Female",
		    new Mapped(femaleBeteen0And19suicideAttemptedOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithsuicideAttempted = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted
		        .setName("maleOldCasepatientsBetween20And39YearsWithsuicideAttempted");
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithsuicideAttempted.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithsuicideAttemptedIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithsuicideAttemptedIndicator",
		    maleOldCasepatientsBetween20And39YearsWithsuicideAttempted,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.O.M.2039",
		    "Old case Suicide attempted / Suicide tentative Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted
		        .setName("femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted");
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithsuicideAttemptedIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithsuicideAttemptedIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithsuicideAttempted,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.O.F.2039",
		    "Old case Suicide attempted / Suicide tentative Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithsuicideAttempted = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.setName("maleOldCasepatientsAbove40YearsWithsuicideAttempted");
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithsuicideAttempted.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithsuicideAttemptedIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithsuicideAttemptedIndicator",
		    maleOldCasepatientsAbove40YearsWithsuicideAttempted,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.O.M.40",
		    "Old case Suicide attempted / Suicide tentative Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithsuicideAttempted = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted
		        .setName("femaleOldCasepatientsAbove40YearsWithsuicideAttempted");
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlsuicideAttemptedPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithsuicideAttempted.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithsuicideAttemptedIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithsuicideAttemptedIndicator",
		    femaleOldCasepatientsAbove40YearsWithsuicideAttempted,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.9.O.F.40",
		    "Old case Suicide attempted / Suicide tentative Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithsuicideAttemptedIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 10 Suicide deaths
		
		// III.B. 11 New case patient with Manic episode/Episode maniaque
		
		SqlCohortDefinition newManicEpisodePatient = patientWithICDCodeObsByStartDateAndEndDate("F30", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19ManicEpisodePatient = new CompositionCohortDefinition();
		maleBeteen0And19ManicEpisodePatient.setName("maleBeteen0And19ManicEpisodePatient");
		maleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19ManicEpisodePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19ManicEpisodePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19ManicEpisodePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19ManicEpisodePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19ManicEpisodePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19ManicEpisodePatientIndicator", maleBeteen0And19ManicEpisodePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.N.M.019",
		    "New case Manic episode/Episode maniaque Male",
		    new Mapped(maleBetween0And19ManicEpisodePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19ManicEpisodePatient = new CompositionCohortDefinition();
		femaleBeteen0And19ManicEpisodePatient.setName("femaleBelow5ManicEpisodePatient");
		femaleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19ManicEpisodePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19ManicEpisodePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19ManicEpisodePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19ManicEpisodePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19ManicEpisodePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19ManicEpisodePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5ManicEpisodePatientIndicator", femaleBeteen0And19ManicEpisodePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.N.F.019",
		    "New case Manic episode/Episode maniaque Female",
		    new Mapped(femaleBeteen0And19ManicEpisodePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithManicEpisode = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithManicEpisode.setName("malepatientsBetween20And39YearsWithManicEpisode");
		malepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithManicEpisode.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithManicEpisode.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithManicEpisodeIndicator", malepatientsBetween20And39YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.N.M.2039",
		    "New case Manic episode/Episode maniaque Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithManicEpisode = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithManicEpisode.setName("femalepatientsBetween20And39YearsWithManicEpisode");
		femalepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithManicEpisode
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithManicEpisode.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithManicEpisode.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithManicEpisodeIndicator", femalepatientsBetween20And39YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.N.F.2039",
		    "New case Manic episode/Episode maniaque Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithManicEpisode = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithManicEpisode.setName("malepatientsAbove40YearsWithManicEpisode");
		malepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithManicEpisode.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithManicEpisode.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithManicEpisodeIndicator", malepatientsAbove40YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.N.M.40",
		    "New case Manic episode/Episode maniaque Male above 40",
		    new Mapped(malepatientsAbove40YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithManicEpisode = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithManicEpisode.setName("femalepatientsAbove40YearsWithManicEpisode");
		femalepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithManicEpisode.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithManicEpisode.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithManicEpisodeIndicator", femalepatientsAbove40YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.N.F.40",
		    "New case Manic episode/Episode maniaque Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 Old case patient with Manic episode/Episode maniaque
		
		SqlCohortDefinition odlManicEpisodePatient = patientWithICDCodeObsByStartDateAndEndDate("F30", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19ManicEpisodeOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19ManicEpisodeOldCasePatient.setName("maleBeteen0And19ManicEpisodeOldCasePatient");
		maleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19ManicEpisodeOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19ManicEpisodeOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19ManicEpisodeOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19ManicEpisodeOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19ManicEpisodeOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19ManicEpisodeOldCasePatientIndicator", maleBeteen0And19ManicEpisodeOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.O.M.019",
		    "Old case Manic episode/Episode maniaque Male",
		    new Mapped(maleBetween0And19ManicEpisodeOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19ManicEpisodeOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19ManicEpisodeOldCasePatient.setName("femaleBelow5ManicEpisodeOldCasePatient");
		femaleBeteen0And19ManicEpisodeOldCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19ManicEpisodeOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19ManicEpisodeOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19ManicEpisodeOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19ManicEpisodeOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19ManicEpisodeOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19ManicEpisodeOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5ManicEpisodeOldCasePatientIndicator", femaleBeteen0And19ManicEpisodeOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.O.F.019",
		    "Old case Manic episode/Episode maniaque Female",
		    new Mapped(femaleBeteen0And19ManicEpisodeOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithManicEpisode = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithManicEpisode
		        .setName("maleOldCasepatientsBetween20And39YearsWithManicEpisode");
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithManicEpisode.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithManicEpisodeIndicator",
		    maleOldCasepatientsBetween20And39YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.O.M.2039",
		    "Old case Manic episode/Episode maniaque Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithManicEpisode = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode
		        .setName("femaleOldCasepatientsBetween20And39YearsWithManicEpisode");
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithManicEpisode.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithManicEpisodeIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.O.F.2039",
		    "Old case Manic episode/Episode maniaque Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithManicEpisode = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithManicEpisode.setName("maleOldCasepatientsAbove40YearsWithManicEpisode");
		maleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithManicEpisode.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithManicEpisode.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithManicEpisodeIndicator", maleOldCasepatientsAbove40YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.O.M.40",
		    "Old case Manic episode/Episode maniaque Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithManicEpisode = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithManicEpisode.setName("femaleOldCasepatientsAbove40YearsWithManicEpisode");
		femaleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithManicEpisode.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithManicEpisode
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlManicEpisodePatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithManicEpisode.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithManicEpisode.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithManicEpisode.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithManicEpisodeIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithManicEpisodeIndicator", femaleOldCasepatientsAbove40YearsWithManicEpisode,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.11.O.F.40",
		    "Old case Manic episode/Episode maniaque Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithManicEpisodeIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 New case patient with Bipolar disorders/Troubles bipolaires
		
		SqlCohortDefinition newBipolarDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate("F31", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19BipolarDisordersPatient = new CompositionCohortDefinition();
		maleBeteen0And19BipolarDisordersPatient.setName("maleBeteen0And19BipolarDisordersPatient");
		maleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19BipolarDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19BipolarDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19BipolarDisordersPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19BipolarDisordersPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19BipolarDisordersPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19BipolarDisordersPatientIndicator", maleBeteen0And19BipolarDisordersPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.N.M.019",
		    "New case Bipolar disorders/Troubles bipolaires Male",
		    new Mapped(maleBetween0And19BipolarDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19BipolarDisordersPatient = new CompositionCohortDefinition();
		femaleBeteen0And19BipolarDisordersPatient.setName("femaleBelow5BipolarDisordersPatient");
		femaleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19BipolarDisordersPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19BipolarDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19BipolarDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19BipolarDisordersPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19BipolarDisordersPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19BipolarDisordersPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5BipolarDisordersPatientIndicator", femaleBeteen0And19BipolarDisordersPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.N.F.019",
		    "New case Bipolar disorders/Troubles bipolaires Female",
		    new Mapped(femaleBeteen0And19BipolarDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithBipolarDisorders = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithBipolarDisorders.setName("malepatientsBetween20And39YearsWithBipolarDisorders");
		malepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithBipolarDisorders
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithBipolarDisorders
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithBipolarDisorders.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithBipolarDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithBipolarDisordersIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithBipolarDisordersIndicator",
		    malepatientsBetween20And39YearsWithBipolarDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.N.M.2039",
		    "New case Bipolar disorders/Troubles bipolaires Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithBipolarDisorders = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithBipolarDisorders
		        .setName("femalepatientsBetween20And39YearsWithBipolarDisorders");
		femalepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithBipolarDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithBipolarDisordersIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithBipolarDisordersIndicator",
		    femalepatientsBetween20And39YearsWithBipolarDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.N.F.2039",
		    "New case Bipolar disorders/Troubles bipolaires Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithBipolarDisorders = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithBipolarDisorders.setName("malepatientsAbove40YearsWithBipolarDisorders");
		malepatientsAbove40YearsWithBipolarDisorders
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithBipolarDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithBipolarDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithBipolarDisordersIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithBipolarDisordersIndicator", malepatientsAbove40YearsWithBipolarDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.N.M.40",
		    "New case Bipolar disorders/Troubles bipolaires Male above 40",
		    new Mapped(malepatientsAbove40YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithBipolarDisorders = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithBipolarDisorders.setName("femalepatientsAbove40YearsWithBipolarDisorders");
		femalepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithBipolarDisorders.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithBipolarDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithBipolarDisordersIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithBipolarDisordersIndicator", femalepatientsAbove40YearsWithBipolarDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.N.F.40",
		    "New case Bipolar disorders/Troubles bipolaires Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 Old case patient with Bipolar disorders/Troubles bipolaires
		
		SqlCohortDefinition odlBipolarDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate("F31", caseStatus,
		    oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19BipolarDisordersOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19BipolarDisordersOldCasePatient.setName("maleBeteen0And19BipolarDisordersOldCasePatient");
		maleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19BipolarDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19BipolarDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19BipolarDisordersOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19BipolarDisordersOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19BipolarDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19BipolarDisordersOldCasePatientIndicator", maleBeteen0And19BipolarDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.O.M.019",
		    "Old case Bipolar disorders/Troubles bipolaires Male",
		    new Mapped(maleBetween0And19BipolarDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19BipolarDisordersOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19BipolarDisordersOldCasePatient.setName("femaleBelow5BipolarDisordersOldCasePatient");
		femaleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19BipolarDisordersOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19BipolarDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19BipolarDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19BipolarDisordersOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19BipolarDisordersOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19BipolarDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5BipolarDisordersOldCasePatientIndicator", femaleBeteen0And19BipolarDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.O.F.019",
		    "Old case Bipolar disorders/Troubles bipolaires Female",
		    new Mapped(femaleBeteen0And19BipolarDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithBipolarDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders
		        .setName("maleOldCasepatientsBetween20And39YearsWithBipolarDisorders");
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithBipolarDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithBipolarDisordersIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithBipolarDisordersIndicator",
		    maleOldCasepatientsBetween20And39YearsWithBipolarDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.O.M.2039",
		    "Old case Bipolar disorders/Troubles bipolaires Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders
		        .setName("femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders");
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithBipolarDisordersIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithBipolarDisordersIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithBipolarDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.O.F.2039",
		    "Old case Bipolar disorders/Troubles bipolaires Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithBipolarDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.setName("maleOldCasepatientsAbove40YearsWithBipolarDisorders");
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithBipolarDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithBipolarDisordersIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithBipolarDisordersIndicator",
		    maleOldCasepatientsAbove40YearsWithBipolarDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.O.M.40",
		    "Old case Bipolar disorders/Troubles bipolaires Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithBipolarDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders
		        .setName("femaleOldCasepatientsAbove40YearsWithBipolarDisorders");
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlBipolarDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithBipolarDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithBipolarDisordersIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithBipolarDisordersIndicator",
		    femaleOldCasepatientsAbove40YearsWithBipolarDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.12.O.F.40",
		    "Old case Bipolar disorders/Troubles bipolaires Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithBipolarDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 New case patient with Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux
		
		SqlCohortDefinition newOtherPsychologicalMentalBehaviouralDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate(
		    "F99", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient
		        .setName("maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient");
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherPsychologicalMentalBehaviouralDisordersPatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19OtherPsychologicalMentalBehaviouralDisordersPatientIndicator",
		            maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.N.M.019",
		    "New case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Male",
		    new Mapped(maleBetween0And19OtherPsychologicalMentalBehaviouralDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient
		        .setName("femaleBelow5OtherPsychologicalMentalBehaviouralDisordersPatient");
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherPsychologicalMentalBehaviouralDisordersPatientIndicator",
		            femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.N.F.019",
		    "New case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Female",
		    new Mapped(femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator(
		            "malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.N.M.2039",
		    "New case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator(
		            "femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.N.F.2039",
		    "New case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator("malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.N.M.40",
		    "New case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Male above 40",
		    new Mapped(malepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator("femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.N.F.40",
		    "New case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 Old case patient with Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux
		
		SqlCohortDefinition odlOtherPsychologicalMentalBehaviouralDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate(
		    "F99", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient
		        .setName("maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient");
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatientIndicator",
		            maleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.13.O.M.019",
		    "Old case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Male",
		    new Mapped(maleBetween0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient
		        .setName("femaleBelow5OtherPsychologicalMentalBehaviouralDisordersOldCasePatient");
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherPsychologicalMentalBehaviouralDisordersOldCasePatientIndicator",
		            femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("III.B.13.O.F.019",
		    "Old case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Female",
		    new Mapped(femaleBeteen0And19OtherPsychologicalMentalBehaviouralDisordersOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.O.M.2039",
		    "Old case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.O.F.2039",
		    "Old case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.O.M.40",
		    "Old case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setName("femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders");
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherPsychologicalMentalBehaviouralDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator",
		            femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.13.O.F.40",
		    "Old case Other Psychological/Mental behavioural disorders/Autres troubles psychologiques/mentaux Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithOtherPsychologicalMentalBehaviouralDisordersIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 New case patient with Epilepsy/Epilepsie
		
		SqlCohortDefinition newEpilepsyPatient = patientWithICDCodeObsByStartDateAndEndDate("G409", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19EpilepsyPatient = new CompositionCohortDefinition();
		maleBeteen0And19EpilepsyPatient.setName("maleBeteen0And19EpilepsyPatient");
		maleBeteen0And19EpilepsyPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19EpilepsyPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19EpilepsyPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19EpilepsyPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19EpilepsyPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19EpilepsyPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19EpilepsyPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19EpilepsyPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19EpilepsyPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19EpilepsyPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19EpilepsyPatientIndicator", maleBeteen0And19EpilepsyPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.N.M.019",
		    "New case Epilepsy/Epilepsie Male",
		    new Mapped(maleBetween0And19EpilepsyPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19EpilepsyPatient = new CompositionCohortDefinition();
		femaleBeteen0And19EpilepsyPatient.setName("femaleBelow5EpilepsyPatient");
		femaleBeteen0And19EpilepsyPatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19EpilepsyPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19EpilepsyPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19EpilepsyPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19EpilepsyPatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19EpilepsyPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19EpilepsyPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19EpilepsyPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19EpilepsyPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19EpilepsyPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5EpilepsyPatientIndicator", femaleBeteen0And19EpilepsyPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.N.F.019",
		    "New case Epilepsy/Epilepsie Female",
		    new Mapped(femaleBeteen0And19EpilepsyPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithEpilepsy = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithEpilepsy.setName("malepatientsBetween20And39YearsWithEpilepsy");
		malepatientsBetween20And39YearsWithEpilepsy
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithEpilepsy.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithEpilepsy.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithEpilepsyIndicator", malepatientsBetween20And39YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.N.M.2039",
		    "New case Epilepsy/Epilepsie Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithEpilepsy = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithEpilepsy.setName("femalepatientsBetween20And39YearsWithEpilepsy");
		femalepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithEpilepsy.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithEpilepsy.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithEpilepsyIndicator", femalepatientsBetween20And39YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.N.F.2039",
		    "New case Epilepsy/Epilepsie Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithEpilepsy = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithEpilepsy.setName("malepatientsAbove40YearsWithEpilepsy");
		malepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithEpilepsy.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithEpilepsy.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithEpilepsyIndicator", malepatientsAbove40YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.N.M.40",
		    "New case Epilepsy/Epilepsie Male above 40",
		    new Mapped(malepatientsAbove40YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithEpilepsy = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithEpilepsy.setName("femalepatientsAbove40YearsWithEpilepsy");
		femalepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithEpilepsy.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithEpilepsy.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithEpilepsyIndicator", femalepatientsAbove40YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.N.F.40",
		    "New case Epilepsy/Epilepsie Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 Old case patient with Epilepsy/Epilepsie
		
		SqlCohortDefinition odlEpilepsyPatient = patientWithICDCodeObsByStartDateAndEndDate("G409", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19EpilepsyOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19EpilepsyOldCasePatient.setName("maleBeteen0And19EpilepsyOldCasePatient");
		maleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19EpilepsyOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19EpilepsyOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19EpilepsyOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19EpilepsyOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19EpilepsyOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19EpilepsyOldCasePatientIndicator", maleBeteen0And19EpilepsyOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.O.M.019",
		    "Old case Epilepsy/Epilepsie Male",
		    new Mapped(maleBetween0And19EpilepsyOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19EpilepsyOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19EpilepsyOldCasePatient.setName("femaleBelow5EpilepsyOldCasePatient");
		femaleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19EpilepsyOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19EpilepsyOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19EpilepsyOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19EpilepsyOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19EpilepsyOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19EpilepsyOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5EpilepsyOldCasePatientIndicator", femaleBeteen0And19EpilepsyOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.O.F.019",
		    "Old case Epilepsy/Epilepsie Female",
		    new Mapped(femaleBeteen0And19EpilepsyOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithEpilepsy = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.setName("maleOldCasepatientsBetween20And39YearsWithEpilepsy");
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithEpilepsy.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithEpilepsyIndicator",
		    maleOldCasepatientsBetween20And39YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.O.M.2039",
		    "Old case Epilepsy/Epilepsie Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithEpilepsy = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.setName("femaleOldCasepatientsBetween20And39YearsWithEpilepsy");
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithEpilepsy.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithEpilepsyIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.O.F.2039",
		    "Old case Epilepsy/Epilepsie Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithEpilepsy = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithEpilepsy.setName("maleOldCasepatientsAbove40YearsWithEpilepsy");
		maleOldCasepatientsAbove40YearsWithEpilepsy
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithEpilepsy.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithEpilepsy.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithEpilepsyIndicator", maleOldCasepatientsAbove40YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.O.M.40",
		    "Old case Epilepsy/Epilepsie Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithEpilepsy = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithEpilepsy.setName("femaleOldCasepatientsAbove40YearsWithEpilepsy");
		femaleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlEpilepsyPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithEpilepsy.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithEpilepsyIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithEpilepsyIndicator", femaleOldCasepatientsAbove40YearsWithEpilepsy,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.14.O.F.40",
		    "Old case Epilepsy/Epilepsie Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithEpilepsyIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 New case patient with Other neurological disorders/Autres troubles neurologiques
		
		SqlCohortDefinition newOtherNeurologicalDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate("G99",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherNeurologicalDisordersPatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherNeurologicalDisordersPatient.setName("maleBeteen0And19OtherNeurologicalDisordersPatient");
		maleBeteen0And19OtherNeurologicalDisordersPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19OtherNeurologicalDisordersPatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19OtherNeurologicalDisordersPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19OtherNeurologicalDisordersPatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19OtherNeurologicalDisordersPatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19OtherNeurologicalDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherNeurologicalDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherNeurologicalDisordersPatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherNeurologicalDisordersPatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherNeurologicalDisordersPatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherNeurologicalDisordersPatientIndicator",
		    maleBeteen0And19OtherNeurologicalDisordersPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.N.M.019",
		    "New case Other neurological disorders/Autres troubles neurologiques Male",
		    new Mapped(maleBetween0And19OtherNeurologicalDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherNeurologicalDisordersPatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherNeurologicalDisordersPatient.setName("femaleBelow5OtherNeurologicalDisordersPatient");
		femaleBeteen0And19OtherNeurologicalDisordersPatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersPatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersPatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersPatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersPatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersPatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherNeurologicalDisordersPatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherNeurologicalDisordersPatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherNeurologicalDisordersPatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherNeurologicalDisordersPatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5OtherNeurologicalDisordersPatientIndicator", femaleBeteen0And19OtherNeurologicalDisordersPatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.N.F.019",
		    "New case Other neurological disorders/Autres troubles neurologiques Female",
		    new Mapped(femaleBeteen0And19OtherNeurologicalDisordersPatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders
		        .setName("malepatientsBetween20And39YearsWithOtherNeurologicalDisorders");
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator",
		            malepatientsBetween20And39YearsWithOtherNeurologicalDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.N.M.2039",
		    "New case Other neurological disorders/Autres troubles neurologiques Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders
		        .setName("femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders");
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator",
		            femalepatientsBetween20And39YearsWithOtherNeurologicalDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.N.F.2039",
		    "New case Other neurological disorders/Autres troubles neurologiques Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithOtherNeurologicalDisorders
		        .setName("malepatientsAbove40YearsWithOtherNeurologicalDisorders");
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator",
		    malepatientsAbove40YearsWithOtherNeurologicalDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.N.M.40",
		    "New case Other neurological disorders/Autres troubles neurologiques Male above 40",
		    new Mapped(malepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders
		        .setName("femalepatientsAbove40YearsWithOtherNeurologicalDisorders");
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator",
		    femalepatientsAbove40YearsWithOtherNeurologicalDisorders,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.N.F.40",
		    "New case Other neurological disorders/Autres troubles neurologiques Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// III.B. 11 Old case patient with Other neurological disorders/Autres troubles neurologiques
		
		SqlCohortDefinition odlOtherNeurologicalDisordersPatient = patientWithICDCodeObsByStartDateAndEndDate("G99",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherNeurologicalDisordersOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient
		        .setName("maleBeteen0And19OtherNeurologicalDisordersOldCasePatient");
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherNeurologicalDisordersOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherNeurologicalDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherNeurologicalDisordersOldCasePatientIndicator",
		    maleBeteen0And19OtherNeurologicalDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.O.M.019",
		    "Old case Other neurological disorders/Autres troubles neurologiques Male",
		    new Mapped(maleBetween0And19OtherNeurologicalDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient
		        .setName("femaleBelow5OtherNeurologicalDisordersOldCasePatient");
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherNeurologicalDisordersOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5OtherNeurologicalDisordersOldCasePatientIndicator",
		    femaleBeteen0And19OtherNeurologicalDisordersOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.O.F.019",
		    "Old case Other neurological disorders/Autres troubles neurologiques Female",
		    new Mapped(femaleBeteen0And19OtherNeurologicalDisordersOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders
		        .setName("maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders");
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator",
		            maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.O.M.2039",
		    "Old case Other neurological disorders/Autres troubles neurologiques Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders
		        .setName("femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders");
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.O.F.2039",
		    "Old case Other neurological disorders/Autres troubles neurologiques Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders
		        .setName("maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders");
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator",
		            maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.O.M.40",
		    "Old case Other neurological disorders/Autres troubles neurologiques Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders
		        .setName("femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders");
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(odlOtherNeurologicalDisordersPatient, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator",
		            femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisorders,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "III.B.15.O.F.40",
		    "Old case Other neurological disorders/Autres troubles neurologiques Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithOtherNeurologicalDisordersIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
	}
	
	//=================================
	// IV. Chronic Diseases
	//=================================
	
	private void createCohortMonthlyIndicatorsIV(CohortIndicatorDataSetDefinition dsd) {
		
		AgeCohortDefinition patientBetweenZeroAndNineteenYears = patientWithAgeBetween(0, 19);
		
		GenderCohortDefinition males = new GenderCohortDefinition();
		males.setName("male Patients");
		males.setMaleIncluded(true);
		
		AgeCohortDefinition patientBetween20And39Years = patientWithAgeBetween(20, 39);
		
		AgeCohortDefinition patientAbove40Years = patientWithAgeAbove(40);
		
		// IV.B.  New case patient with Hypertension
		
		SqlCohortDefinition newHypertension = patientWithICDCodesObsByStartDateAndEndDate("I10,I11,I12,I13,I14,I15",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19Hypertension = new CompositionCohortDefinition();
		maleBeteen0And19Hypertension.setName("maleBeteen0And19Hypertension");
		maleBeteen0And19Hypertension.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19Hypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19Hypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19Hypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19Hypertension.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19Hypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19Hypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19Hypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19Hypertension.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19HypertensionIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19HypertensionIndicator", maleBeteen0And19Hypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.HY.1.N.M.019", "New case Hypertension Male", new Mapped(maleBetween0And19HypertensionIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19Hypertension = new CompositionCohortDefinition();
		femaleBeteen0And19Hypertension.setName("femaleBelow5Hypertension");
		femaleBeteen0And19Hypertension.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19Hypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19Hypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19Hypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19Hypertension.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19Hypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19Hypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19Hypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19Hypertension.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19HypertensionIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5HypertensionIndicator", femaleBeteen0And19Hypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.HY.1.N.F.019", "New case Hypertension Female", new Mapped(femaleBeteen0And19HypertensionIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithHypertension = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithHypertension.setName("malepatientsBetween20And39YearsWithHypertension");
		malepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithHypertension.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithHypertensionIndicator", malepatientsBetween20And39YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.N.M.2039",
		    "New case Hypertension Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithHypertension = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithHypertension.setName("femalepatientsBetween20And39YearsWithHypertension");
		femalepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithHypertension
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithHypertension.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithHypertensionIndicator", femalepatientsBetween20And39YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.N.F.2039",
		    "New case Hypertension Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithHypertension = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithHypertension.setName("malepatientsAbove40YearsWithHypertension");
		malepatientsAbove40YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithHypertension.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithHypertensionIndicator", malepatientsAbove40YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.N.M.40",
		    "New case Hypertension Male above 40",
		    new Mapped(malepatientsAbove40YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithHypertension = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithHypertension.setName("femalepatientsAbove40YearsWithHypertension");
		femalepatientsAbove40YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithHypertension.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithHypertensionIndicator", femalepatientsAbove40YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.N.F.40",
		    "New case Hypertension Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.B. Old case patient with Hypertension
		
		SqlCohortDefinition OldHypertension = patientWithICDCodesObsByStartDateAndEndDate("I10,I11,I12,I13,I14,I15",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19HypertensionOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19HypertensionOldCasePatient.setName("maleBeteen0And19HypertensionOldCasePatient");
		maleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19HypertensionOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19HypertensionOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19HypertensionOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19HypertensionOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19HypertensionOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19HypertensionOldCasePatientIndicator", maleBeteen0And19HypertensionOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.O.M.019",
		    "Old case Hypertension Male",
		    new Mapped(maleBetween0And19HypertensionOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19HypertensionOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19HypertensionOldCasePatient.setName("femaleBelow5HypertensionOldCasePatient");
		femaleBeteen0And19HypertensionOldCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19HypertensionOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19HypertensionOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19HypertensionOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19HypertensionOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19HypertensionOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19HypertensionOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5HypertensionOldCasePatientIndicator", femaleBeteen0And19HypertensionOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.O.F.019",
		    "Old case Hypertension Female",
		    new Mapped(femaleBeteen0And19HypertensionOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithHypertension = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithHypertension
		        .setName("maleOldCasepatientsBetween20And39YearsWithHypertension");
		maleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithHypertension.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithHypertension.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithHypertensionIndicator",
		    maleOldCasepatientsBetween20And39YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.O.M.2039",
		    "Old case Hypertension Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithHypertension = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithHypertension
		        .setName("femaleOldCasepatientsBetween20And39YearsWithHypertension");
		femaleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHypertension
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithHypertension.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithHypertension.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithHypertensionIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.O.F.2039",
		    "Old case Hypertension Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithHypertension = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithHypertension.setName("maleOldCasepatientsAbove40YearsWithHypertension");
		maleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithHypertension.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithHypertensionIndicator", maleOldCasepatientsAbove40YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.O.M.40",
		    "Old case Hypertension Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithHypertension = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithHypertension.setName("femaleOldCasepatientsAbove40YearsWithHypertension");
		femaleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithHypertension
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithHypertension.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithHypertensionIndicator", femaleOldCasepatientsAbove40YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.O.F.40",
		    "Old case Hypertension Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.B. Died patient with Hypertension
		
		SqlCohortDefinition diedHypertension = diedPatientWithICDCodesObsByStartDateAndEndDate("I10,I11,I12,I13,I14,I15");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19HypertensiondiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19HypertensiondiedCasePatient.setName("maleBeteen0And19HypertensiondiedCasePatient");
		maleBeteen0And19HypertensiondiedCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19HypertensiondiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19HypertensiondiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19HypertensiondiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19HypertensiondiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19HypertensiondiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19HypertensiondiedCasePatientIndicator", maleBeteen0And19HypertensiondiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.D.M.019",
		    "Died Hypertension Male",
		    new Mapped(maleBetween0And19HypertensiondiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19HypertensiondiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19HypertensiondiedCasePatient.setName("femaleBelow5HypertensiondiedCasePatient");
		femaleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19HypertensiondiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19HypertensiondiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19HypertensiondiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19HypertensiondiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19HypertensiondiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19HypertensiondiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5HypertensiondiedCasePatientIndicator", femaleBeteen0And19HypertensiondiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.D.F.019",
		    "Died Hypertension Female",
		    new Mapped(femaleBeteen0And19HypertensiondiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithHypertension = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithHypertension
		        .setName("malediedCasepatientsBetween20And39YearsWithHypertension");
		malediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHypertension
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithHypertension.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithHypertension.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithHypertensionIndicator",
		    malediedCasepatientsBetween20And39YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.D.M.2039",
		    "Died Hypertension Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithHypertension = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithHypertension
		        .setName("femalediedCasepatientsBetween20And39YearsWithHypertension");
		femalediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithHypertension.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithHypertension.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsBetween20And39YearsWithHypertensionIndicator",
		    femalediedCasepatientsBetween20And39YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.D.F.2039",
		    "Died Hypertension Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithHypertension = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithHypertension.setName("malediedCasepatientsAbove40YearsWithHypertension");
		malediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithHypertension.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithHypertensionIndicator", malediedCasepatientsAbove40YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.D.M.40",
		    "Died Hypertension Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithHypertension = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithHypertension.setName("femalediedCasepatientsAbove40YearsWithHypertension");
		femalediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithHypertension.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithHypertension
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHypertension, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithHypertension.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithHypertension.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithHypertension.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithHypertensionIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithHypertensionIndicator",
		    femalediedCasepatientsAbove40YearsWithHypertension,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.HY.1.D.F.40",
		    "Died Hypertension Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithHypertensionIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R.1  New case patient with Asthma intermittant
		
		SqlCohortDefinition newAsthmaIntermittant = patientWithICDCodeObsByStartDateAndEndDate("J452", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaIntermittant = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaIntermittant.setName("maleBeteen0And19AsthmaIntermittant");
		maleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19AsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaIntermittant.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaIntermittant.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaIntermittantIndicator", maleBeteen0And19AsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.N.M.019",
		    "New case Asthma Intermittant Male",
		    new Mapped(maleBetween0And19AsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaIntermittant = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaIntermittant.setName("femaleBelow5AsthmaIntermittant");
		femaleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19AsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19AsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaIntermittant.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaIntermittant.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaIntermittantIndicator", femaleBeteen0And19AsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.N.F.019",
		    "New case Asthma Intermittant Female",
		    new Mapped(femaleBeteen0And19AsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithAsthmaIntermittant
		        .setName("malepatientsBetween20And39YearsWithAsthmaIntermittant");
		malepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithAsthmaIntermittantIndicator",
		    malepatientsBetween20And39YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.N.M.2039",
		    "New case Asthma Intermittant Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithAsthmaIntermittant
		        .setName("femalepatientsBetween20And39YearsWithAsthmaIntermittant");
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithAsthmaIntermittantIndicator",
		    femalepatientsBetween20And39YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.N.F.2039",
		    "New case Asthma Intermittant Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithAsthmaIntermittant.setName("malepatientsAbove40YearsWithAsthmaIntermittant");
		malepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithAsthmaIntermittantIndicator", malepatientsAbove40YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.N.M.40",
		    "New case Asthma Intermittant Male above 40",
		    new Mapped(malepatientsAbove40YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithAsthmaIntermittant.setName("femalepatientsAbove40YearsWithAsthmaIntermittant");
		femalepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithAsthmaIntermittantIndicator", femalepatientsAbove40YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.N.F.40",
		    "New case Asthma Intermittant Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R.1 Old case patient with Asthma intermittant
		
		SqlCohortDefinition OldAsthmaIntermittant = patientWithICDCodeObsByStartDateAndEndDate("J452", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaIntermittantOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaIntermittantOldCasePatient.setName("maleBeteen0And19AsthmaIntermittantOldCasePatient");
		maleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaIntermittantOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaIntermittantOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaIntermittantOldCasePatientIndicator", maleBeteen0And19AsthmaIntermittantOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.O.M.019",
		    "Old case Asthma Intermittant Male",
		    new Mapped(maleBetween0And19AsthmaIntermittantOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaIntermittantOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.setName("femaleBelow5AsthmaIntermittantOldCasePatient");
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaIntermittantOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaIntermittantOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaIntermittantOldCasePatientIndicator", femaleBeteen0And19AsthmaIntermittantOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.O.F.019",
		    "Old case Asthma Intermittant Female",
		    new Mapped(femaleBeteen0And19AsthmaIntermittantOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant
		        .setName("maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant");
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator",
		            maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.O.M.2039",
		    "Old case Asthma Intermittant Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant
		        .setName("femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant");
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittant,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.O.F.2039",
		    "Old case Asthma Intermittant Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant
		        .setName("maleOldCasepatientsAbove40YearsWithAsthmaIntermittant");
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithAsthmaIntermittantIndicator",
		    maleOldCasepatientsAbove40YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.O.M.40",
		    "Old case Asthma Intermittant Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant
		        .setName("femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant");
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithAsthmaIntermittantIndicator",
		    femaleOldCasepatientsAbove40YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.O.F.40",
		    "Old case Asthma Intermittant Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R.1 Died patient with Asthma intermittant
		
		SqlCohortDefinition diedAsthmaIntermittant = diedPatientWithICDCodeObsByStartDateAndEndDate("J452");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaIntermittantdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.setName("maleBeteen0And19AsthmaIntermittantdiedCasePatient");
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaIntermittantdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaIntermittantdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaIntermittantdiedCasePatientIndicator",
		    maleBeteen0And19AsthmaIntermittantdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.D.M.019",
		    "Died Asthma Intermittant Male",
		    new Mapped(maleBetween0And19AsthmaIntermittantdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaIntermittantdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.setName("femaleBelow5AsthmaIntermittantdiedCasePatient");
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaIntermittantdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaIntermittantdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaIntermittantdiedCasePatientIndicator", femaleBeteen0And19AsthmaIntermittantdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.D.F.019",
		    "Died Asthma Intermittant Female",
		    new Mapped(femaleBeteen0And19AsthmaIntermittantdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant
		        .setName("malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant");
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator",
		            malediedCasepatientsBetween20And39YearsWithAsthmaIntermittant,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.D.M.2039",
		    "Died Asthma Intermittant Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant
		        .setName("femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant");
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator",
		            femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittant,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.D.F.2039",
		    "Died Asthma Intermittant Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant
		        .setName("malediedCasepatientsAbove40YearsWithAsthmaIntermittant");
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithAsthmaIntermittantIndicator",
		    malediedCasepatientsAbove40YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.D.M.40",
		    "Died Asthma Intermittant Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithAsthmaIntermittant = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant
		        .setName("femalediedCasepatientsAbove40YearsWithAsthmaIntermittant");
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaIntermittant, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithAsthmaIntermittant.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithAsthmaIntermittantIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithAsthmaIntermittantIndicator",
		    femalediedCasepatientsAbove40YearsWithAsthmaIntermittant,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.1.D.F.40",
		    "Died Asthma Intermittant Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithAsthmaIntermittantIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 2 New case patient with Asthma persintent mild
		
		SqlCohortDefinition newAsthmaPersintentMild = patientWithICDCodeObsByStartDateAndEndDate("J453", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentMild = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentMild.setName("maleBeteen0And19AsthmaPersintentMild");
		maleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19AsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentMild.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentMild.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentMildIndicator", maleBeteen0And19AsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.N.M.019",
		    "New case Asthma persintent mild Male",
		    new Mapped(maleBetween0And19AsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentMild = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentMild.setName("femaleBelow5AsthmaPersintentMild");
		femaleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19AsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19AsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentMild.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentMild.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentMildIndicator", femaleBeteen0And19AsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.N.F.019",
		    "New case Asthma persintent mild Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithAsthmaPersintentMild
		        .setName("malepatientsBetween20And39YearsWithAsthmaPersintentMild");
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator",
		    malepatientsBetween20And39YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.N.M.2039",
		    "New case Asthma persintent mild Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild
		        .setName("femalepatientsBetween20And39YearsWithAsthmaPersintentMild");
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator",
		    femalepatientsBetween20And39YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.N.F.2039",
		    "New case Asthma persintent mild Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithAsthmaPersintentMild.setName("malepatientsAbove40YearsWithAsthmaPersintentMild");
		malepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithAsthmaPersintentMildIndicator", malepatientsAbove40YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.N.M.40",
		    "New case Asthma persintent mild Male above 40",
		    new Mapped(malepatientsAbove40YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithAsthmaPersintentMild.setName("femalepatientsAbove40YearsWithAsthmaPersintentMild");
		femalepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentMild
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithAsthmaPersintentMildIndicator",
		    femalepatientsAbove40YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.N.F.40",
		    "New case Asthma persintent mild Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 2 Old case patient with Asthma persintent mild
		
		SqlCohortDefinition OldAsthmaPersintentMild = patientWithICDCodeObsByStartDateAndEndDate("J453", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentMildOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.setName("maleBeteen0And19AsthmaPersintentMildOldCasePatient");
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentMildOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentMildOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentMildOldCasePatientIndicator",
		    maleBeteen0And19AsthmaPersintentMildOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.O.M.019",
		    "Old case Asthma persintent mild Male",
		    new Mapped(maleBetween0And19AsthmaPersintentMildOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentMildOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.setName("femaleBelow5AsthmaPersintentMildOldCasePatient");
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentMildOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentMildOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentMildOldCasePatientIndicator", femaleBeteen0And19AsthmaPersintentMildOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.O.F.019",
		    "Old case Asthma persintent mild Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentMildOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild
		        .setName("maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild");
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator",
		            maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.O.M.2039",
		    "Old case Asthma persintent mild Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild
		        .setName("femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild");
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMild,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.O.F.2039",
		    "Old case Asthma persintent mild Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild
		        .setName("maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild");
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator",
		    maleOldCasepatientsAbove40YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.O.M.40",
		    "Old case Asthma persintent mild Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild
		        .setName("femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild");
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator",
		    femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.O.F.40",
		    "Old case Asthma persintent mild Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 2 Died patient with Asthma persintent mild
		
		SqlCohortDefinition diedAsthmaPersintentMild = diedPatientWithICDCodeObsByStartDateAndEndDate("J453");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentMilddiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.setName("maleBeteen0And19AsthmaPersintentMilddiedCasePatient");
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentMilddiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentMilddiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentMilddiedCasePatientIndicator",
		    maleBeteen0And19AsthmaPersintentMilddiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.D.M.019",
		    "Died Asthma persintent mild Male",
		    new Mapped(maleBetween0And19AsthmaPersintentMilddiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentMilddiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.setName("femaleBelow5AsthmaPersintentMilddiedCasePatient");
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentMilddiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentMilddiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentMilddiedCasePatientIndicator",
		    femaleBeteen0And19AsthmaPersintentMilddiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.D.F.019",
		    "Died Asthma persintent mild Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentMilddiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild
		        .setName("malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild");
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator",
		            malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.D.M.2039",
		    "Died Asthma persintent mild Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild
		        .setName("femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild");
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator",
		            femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMild,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.D.F.2039",
		    "Died Asthma persintent mild Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild
		        .setName("malediedCasepatientsAbove40YearsWithAsthmaPersintentMild");
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator",
		    malediedCasepatientsAbove40YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.D.M.40",
		    "Died Asthma persintent mild Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild
		        .setName("femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild");
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentMild, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator",
		    femalediedCasepatientsAbove40YearsWithAsthmaPersintentMild,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.2.D.F.40",
		    "Died Asthma persintent mild Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithAsthmaPersintentMildIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 3 New case patient with Asthma persintent modarate
		
		SqlCohortDefinition newAsthmaPersintentModarate = patientWithICDCodeObsByStartDateAndEndDate("J454", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentModarate = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentModarate.setName("maleBeteen0And19AsthmaPersintentModarate");
		maleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19AsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentModarate.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentModarate.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentModarateIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentModarateIndicator", maleBeteen0And19AsthmaPersintentModarate,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.N.M.019",
		    "New case Asthma persintent modarate Male",
		    new Mapped(maleBetween0And19AsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentModarate = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentModarate.setName("femaleBelow5AsthmaPersintentModarate");
		femaleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19AsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19AsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentModarate.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentModarate.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentModarateIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentModarateIndicator", femaleBeteen0And19AsthmaPersintentModarate,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.N.F.019",
		    "New case Asthma persintent modarate Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate
		        .setName("malepatientsBetween20And39YearsWithAsthmaPersintentModarate");
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator",
		            malepatientsBetween20And39YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.N.M.2039",
		    "New case Asthma persintent modarate Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate
		        .setName("femalepatientsBetween20And39YearsWithAsthmaPersintentModarate");
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator",
		            femalepatientsBetween20And39YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.N.F.2039",
		    "New case Asthma persintent modarate Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithAsthmaPersintentModarate.setName("malepatientsAbove40YearsWithAsthmaPersintentModarate");
		malepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentModarate
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentModarate
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithAsthmaPersintentModarateIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithAsthmaPersintentModarateIndicator",
		    malepatientsAbove40YearsWithAsthmaPersintentModarate,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.N.M.40",
		    "New case Asthma persintent modarate Male above 40",
		    new Mapped(malepatientsAbove40YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithAsthmaPersintentModarate
		        .setName("femalepatientsAbove40YearsWithAsthmaPersintentModarate");
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithAsthmaPersintentModarateIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithAsthmaPersintentModarateIndicator",
		    femalepatientsAbove40YearsWithAsthmaPersintentModarate,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.N.F.40",
		    "New case Asthma persintent modarate Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 3 Old case patient with Asthma persintent modarate
		
		SqlCohortDefinition OldAsthmaPersintentModarate = patientWithICDCodeObsByStartDateAndEndDate("J454", caseStatus,
		    oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentModarateOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient
		        .setName("maleBeteen0And19AsthmaPersintentModarateOldCasePatient");
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentModarateOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentModarateOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentModarateOldCasePatientIndicator",
		    maleBeteen0And19AsthmaPersintentModarateOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.O.M.019",
		    "Old case Asthma persintent modarate Male",
		    new Mapped(maleBetween0And19AsthmaPersintentModarateOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentModarateOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient
		        .setName("femaleBelow5AsthmaPersintentModarateOldCasePatient");
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentModarateOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentModarateOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentModarateOldCasePatientIndicator",
		    femaleBeteen0And19AsthmaPersintentModarateOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.O.F.019",
		    "Old case Asthma persintent modarate Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentModarateOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate
		        .setName("maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate");
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator",
		            maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.O.M.2039",
		    "Old case Asthma persintent modarate Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate
		        .setName("femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate");
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.O.F.2039",
		    "Old case Asthma persintent modarate Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate
		        .setName("maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate");
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator",
		            maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.O.M.40",
		    "Old case Asthma persintent modarate Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate
		        .setName("femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate");
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator",
		            femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.O.F.40",
		    "Old case Asthma persintent modarate Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 3 Died patient with Asthma persintent modarate
		
		SqlCohortDefinition diedAsthmaPersintentModarate = diedPatientWithICDCodeObsByStartDateAndEndDate("J454");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentModaratediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient
		        .setName("maleBeteen0And19AsthmaPersintentModaratediedCasePatient");
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentModaratediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentModaratediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentModaratediedCasePatientIndicator",
		    maleBeteen0And19AsthmaPersintentModaratediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.D.M.019",
		    "Died Asthma persintent modarate Male",
		    new Mapped(maleBetween0And19AsthmaPersintentModaratediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentModaratediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient
		        .setName("femaleBelow5AsthmaPersintentModaratediedCasePatient");
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentModaratediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentModaratediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentModaratediedCasePatientIndicator",
		    femaleBeteen0And19AsthmaPersintentModaratediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.D.F.019",
		    "Died Asthma persintent modarate Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentModaratediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate
		        .setName("malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate");
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator",
		            malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.D.M.2039",
		    "Died Asthma persintent modarate Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate
		        .setName("femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate");
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator",
		            femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.D.F.2039",
		    "Died Asthma persintent modarate Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate
		        .setName("malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate");
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator",
		            malediedCasepatientsAbove40YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.D.M.40",
		    "Died Asthma persintent modarate Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate
		        .setName("femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate");
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentModarate, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator",
		            femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarate,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.3.D.F.40",
		    "Died Asthma persintent modarate Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithAsthmaPersintentModarateIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 4 New case patient with Asthma persintent severe
		
		SqlCohortDefinition newAsthmaPersintentSevere = patientWithICDCodeObsByStartDateAndEndDate("J455", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentSevere = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentSevere.setName("maleBeteen0And19AsthmaPersintentSevere");
		maleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19AsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentSevere.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentSevere.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentSevereIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentSevereIndicator", maleBeteen0And19AsthmaPersintentSevere,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.N.M.019",
		    "New case Asthma persintent severe Male",
		    new Mapped(maleBetween0And19AsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentSevere = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentSevere.setName("femaleBelow5AsthmaPersintentSevere");
		femaleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19AsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19AsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentSevere.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentSevere.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentSevereIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentSevereIndicator", femaleBeteen0And19AsthmaPersintentSevere,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.N.F.019",
		    "New case Asthma persintent severe Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere
		        .setName("malepatientsBetween20And39YearsWithAsthmaPersintentSevere");
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator",
		    malepatientsBetween20And39YearsWithAsthmaPersintentSevere,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.N.M.2039",
		    "New case Asthma persintent severe Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere
		        .setName("femalepatientsBetween20And39YearsWithAsthmaPersintentSevere");
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator",
		            femalepatientsBetween20And39YearsWithAsthmaPersintentSevere,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.N.F.2039",
		    "New case Asthma persintent severe Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithAsthmaPersintentSevere.setName("malepatientsAbove40YearsWithAsthmaPersintentSevere");
		malepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentSevere
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithAsthmaPersintentSevereIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithAsthmaPersintentSevereIndicator",
		    malepatientsAbove40YearsWithAsthmaPersintentSevere,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.N.M.40",
		    "New case Asthma persintent severe Male above 40",
		    new Mapped(malepatientsAbove40YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.setName("femalepatientsAbove40YearsWithAsthmaPersintentSevere");
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithAsthmaPersintentSevereIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithAsthmaPersintentSevereIndicator",
		    femalepatientsAbove40YearsWithAsthmaPersintentSevere,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.N.F.40",
		    "New case Asthma persintent severe Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 4 Old case patient with Asthma persintent severe
		
		SqlCohortDefinition OldAsthmaPersintentSevere = patientWithICDCodeObsByStartDateAndEndDate("J455", caseStatus,
		    oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentSevereOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.setName("maleBeteen0And19AsthmaPersintentSevereOldCasePatient");
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentSevereOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentSevereOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentSevereOldCasePatientIndicator",
		    maleBeteen0And19AsthmaPersintentSevereOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.O.M.019",
		    "Old case Asthma persintent severe Male",
		    new Mapped(maleBetween0And19AsthmaPersintentSevereOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentSevereOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.setName("femaleBelow5AsthmaPersintentSevereOldCasePatient");
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentSevereOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentSevereOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentSevereOldCasePatientIndicator",
		    femaleBeteen0And19AsthmaPersintentSevereOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.O.F.019",
		    "Old case Asthma persintent severe Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentSevereOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere
		        .setName("maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere");
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator",
		            maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.O.M.2039",
		    "Old case Asthma persintent severe Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere
		        .setName("femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere");
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevere,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.O.F.2039",
		    "Old case Asthma persintent severe Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere
		        .setName("maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere");
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator",
		    maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.O.M.40",
		    "Old case Asthma persintent severe Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere
		        .setName("femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere");
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator",
		            femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevere,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.O.F.40",
		    "Old case Asthma persintent severe Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.R. 4 Died patient with Asthma persintent severe
		
		SqlCohortDefinition diedAsthmaPersintentSevere = diedPatientWithICDCodeObsByStartDateAndEndDate("J455");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19AsthmaPersintentSeverediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient
		        .setName("maleBeteen0And19AsthmaPersintentSeverediedCasePatient");
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19AsthmaPersintentSeverediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19AsthmaPersintentSeverediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19AsthmaPersintentSeverediedCasePatientIndicator",
		    maleBeteen0And19AsthmaPersintentSeverediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.D.M.019",
		    "Died Asthma persintent severe Male",
		    new Mapped(maleBetween0And19AsthmaPersintentSeverediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19AsthmaPersintentSeverediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.setName("femaleBelow5AsthmaPersintentSeverediedCasePatient");
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19AsthmaPersintentSeverediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19AsthmaPersintentSeverediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5AsthmaPersintentSeverediedCasePatientIndicator",
		    femaleBeteen0And19AsthmaPersintentSeverediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.D.F.019",
		    "Died Asthma persintent severe Female",
		    new Mapped(femaleBeteen0And19AsthmaPersintentSeverediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere
		        .setName("malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere");
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator",
		            malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.D.M.2039",
		    "Died Asthma persintent severe Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere
		        .setName("femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere");
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator",
		            femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevere,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.D.F.2039",
		    "Died Asthma persintent severe Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere
		        .setName("malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere");
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator",
		    malediedCasepatientsAbove40YearsWithAsthmaPersintentSevere,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.D.M.40",
		    "Died Asthma persintent severe Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere
		        .setName("femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere");
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedAsthmaPersintentSevere, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator",
		            femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevere,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.4.D.F.40",
		    "Died Asthma persintent severe Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithAsthmaPersintentSevereIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.R. 5  New case patient with Bronchitis
		
		SqlCohortDefinition newBronchitis = patientWithICDCodesObsByStartDateAndEndDate("J40,J41,J42", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19Bronchitis = new CompositionCohortDefinition();
		maleBeteen0And19Bronchitis.setName("maleBeteen0And19Bronchitis");
		maleBeteen0And19Bronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19Bronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19Bronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19Bronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19Bronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19Bronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19Bronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19Bronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19Bronchitis.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19BronchitisIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19BronchitisIndicator", maleBeteen0And19Bronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.5.N.M.019", "New case Bronchitis Male", new Mapped(maleBetween0And19BronchitisIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19Bronchitis = new CompositionCohortDefinition();
		femaleBeteen0And19Bronchitis.setName("femaleBelow5Bronchitis");
		femaleBeteen0And19Bronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19Bronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19Bronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19Bronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19Bronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19Bronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19Bronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19Bronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19Bronchitis.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19BronchitisIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5BronchitisIndicator", femaleBeteen0And19Bronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.5.N.F.019", "New case Bronchitis Female", new Mapped(femaleBeteen0And19BronchitisIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithBronchitis = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithBronchitis.setName("malepatientsBetween20And39YearsWithBronchitis");
		malepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithBronchitis.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithBronchitisIndicator", malepatientsBetween20And39YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.N.M.2039",
		    "New case Bronchitis Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithBronchitis = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithBronchitis.setName("femalepatientsBetween20And39YearsWithBronchitis");
		femalepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithBronchitis.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithBronchitisIndicator", femalepatientsBetween20And39YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.N.F.2039",
		    "New case Bronchitis Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithBronchitis = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithBronchitis.setName("malepatientsAbove40YearsWithBronchitis");
		malepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithBronchitis.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithBronchitisIndicator", malepatientsAbove40YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.N.M.40",
		    "New case Bronchitis Male above 40",
		    new Mapped(malepatientsAbove40YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithBronchitis = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithBronchitis.setName("femalepatientsAbove40YearsWithBronchitis");
		femalepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithBronchitis.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithBronchitisIndicator", femalepatientsAbove40YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.N.F.40",
		    "New case Bronchitis Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.R. 5 Old case patient with Bronchitis
		
		SqlCohortDefinition OldBronchitis = patientWithICDCodesObsByStartDateAndEndDate("J40,J41,J42", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19BronchitisOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19BronchitisOldCasePatient.setName("maleBeteen0And19BronchitisOldCasePatient");
		maleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19BronchitisOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19BronchitisOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19BronchitisOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19BronchitisOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19BronchitisOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19BronchitisOldCasePatientIndicator", maleBeteen0And19BronchitisOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.O.M.019",
		    "Old case Bronchitis Male",
		    new Mapped(maleBetween0And19BronchitisOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19BronchitisOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19BronchitisOldCasePatient.setName("femaleBelow5BronchitisOldCasePatient");
		femaleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19BronchitisOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19BronchitisOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19BronchitisOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19BronchitisOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19BronchitisOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19BronchitisOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5BronchitisOldCasePatientIndicator", femaleBeteen0And19BronchitisOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.O.F.019",
		    "Old case Bronchitis Female",
		    new Mapped(femaleBeteen0And19BronchitisOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithBronchitis = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithBronchitis.setName("maleOldCasepatientsBetween20And39YearsWithBronchitis");
		maleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithBronchitis
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBronchitis
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithBronchitis.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithBronchitis.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithBronchitisIndicator",
		    maleOldCasepatientsBetween20And39YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.O.M.2039",
		    "Old case Bronchitis Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithBronchitis = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithBronchitis
		        .setName("femaleOldCasepatientsBetween20And39YearsWithBronchitis");
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithBronchitis.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithBronchitisIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.O.F.2039",
		    "Old case Bronchitis Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithBronchitis = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithBronchitis.setName("maleOldCasepatientsAbove40YearsWithBronchitis");
		maleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithBronchitis.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithBronchitisIndicator", maleOldCasepatientsAbove40YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.O.M.40",
		    "Old case Bronchitis Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithBronchitis = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithBronchitis.setName("femaleOldCasepatientsAbove40YearsWithBronchitis");
		femaleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithBronchitis.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithBronchitisIndicator", femaleOldCasepatientsAbove40YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.O.F.40",
		    "Old case Bronchitis Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.R. 5 Died patient with Bronchitis
		
		SqlCohortDefinition diedBronchitis = diedPatientWithICDCodesObsByStartDateAndEndDate("J40,J41,J42");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19BronchitisdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19BronchitisdiedCasePatient.setName("maleBeteen0And19BronchitisdiedCasePatient");
		maleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19BronchitisdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19BronchitisdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19BronchitisdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19BronchitisdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19BronchitisdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19BronchitisdiedCasePatientIndicator", maleBeteen0And19BronchitisdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.D.M.019",
		    "Died Bronchitis Male",
		    new Mapped(maleBetween0And19BronchitisdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19BronchitisdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19BronchitisdiedCasePatient.setName("femaleBelow5BronchitisdiedCasePatient");
		femaleBeteen0And19BronchitisdiedCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19BronchitisdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19BronchitisdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19BronchitisdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19BronchitisdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19BronchitisdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19BronchitisdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5BronchitisdiedCasePatientIndicator", femaleBeteen0And19BronchitisdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.D.F.019",
		    "Died Bronchitis Female",
		    new Mapped(femaleBeteen0And19BronchitisdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithBronchitis = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithBronchitis
		        .setName("malediedCasepatientsBetween20And39YearsWithBronchitis");
		malediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithBronchitis.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithBronchitis.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithBronchitisIndicator",
		    malediedCasepatientsBetween20And39YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.D.M.2039",
		    "Died Bronchitis Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithBronchitis = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithBronchitis
		        .setName("femalediedCasepatientsBetween20And39YearsWithBronchitis");
		femalediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithBronchitis
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithBronchitis.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithBronchitis.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsBetween20And39YearsWithBronchitisIndicator",
		    femalediedCasepatientsBetween20And39YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.D.F.2039",
		    "Died Bronchitis Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithBronchitis = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithBronchitis.setName("malediedCasepatientsAbove40YearsWithBronchitis");
		malediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithBronchitis.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithBronchitisIndicator", malediedCasepatientsAbove40YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.D.M.40",
		    "Died Bronchitis Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithBronchitis = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithBronchitis.setName("femalediedCasepatientsAbove40YearsWithBronchitis");
		femalediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithBronchitis.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedBronchitis, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithBronchitis.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithBronchitis.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithBronchitis.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithBronchitisIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithBronchitisIndicator", femalediedCasepatientsAbove40YearsWithBronchitis,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.5.D.F.40",
		    "Died Bronchitis Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithBronchitisIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.R. 6  New case patient withOther Chronic obstructive pulmonary diseases
		
		SqlCohortDefinition newOtherChronicObstructivePulmonaryDiseases = patientWithICDCodesObsByStartDateAndEndDate(
		    "J44,J47", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases
		        .setName("maleBeteen0And19OtherChronicObstructivePulmonaryDiseases");
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherChronicObstructivePulmonaryDiseasesIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherChronicObstructivePulmonaryDiseasesIndicator",
		    maleBeteen0And19OtherChronicObstructivePulmonaryDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.6.N.M.019",
		    "New caseOther Chronic obstructive pulmonary diseases Male",
		    new Mapped(maleBetween0And19OtherChronicObstructivePulmonaryDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases
		        .setName("femaleBelow5OtherChronicObstructivePulmonaryDiseases");
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5OtherChronicObstructivePulmonaryDiseasesIndicator",
		    femaleBeteen0And19OtherChronicObstructivePulmonaryDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.6.N.F.019",
		    "New caseOther Chronic obstructive pulmonary diseases Female",
		    new Mapped(femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases");
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.N.M.2039",
		    "New caseOther Chronic obstructive pulmonary diseases Male between 20 and 39 years", new Mapped(
		            malepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases");
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.N.F.2039",
		    "New caseOther Chronic obstructive pulmonary diseases Female between 20 and 39 years", new Mapped(
		            femalepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases");
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator("malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.6.N.M.40",
		    "New caseOther Chronic obstructive pulmonary diseases Male above 40",
		    new Mapped(malepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases");
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator("femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.6.N.F.40",
		    "New caseOther Chronic obstructive pulmonary diseases Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.R. 6 Old case patient withOther Chronic obstructive pulmonary diseases
		
		SqlCohortDefinition OldOtherChronicObstructivePulmonaryDiseases = patientWithICDCodesObsByStartDateAndEndDate(
		    "J44,J47", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient
		        .setName("maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient");
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatientIndicator",
		            maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.R.6.O.M.019",
		    "Old caseOther Chronic obstructive pulmonary diseases Male",
		    new Mapped(maleBetween0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient
		        .setName("femaleBelow5OtherChronicObstructivePulmonaryDiseasesOldCasePatient");
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherChronicObstructivePulmonaryDiseasesOldCasePatientIndicator",
		            femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.O.F.019", "Old caseOther Chronic obstructive pulmonary diseases Female",
		    new Mapped(femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesOldCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases");
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.O.M.2039",
		    "Old caseOther Chronic obstructive pulmonary diseases Male between 20 and 39 years", new Mapped(
		            maleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases");
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.O.F.2039",
		    "Old caseOther Chronic obstructive pulmonary diseases Female between 20 and 39 years", new Mapped(
		            femaleOldCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases");
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.O.M.40", "Old caseOther Chronic obstructive pulmonary diseases Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases");
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.O.F.40", "Old caseOther Chronic obstructive pulmonary diseases Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.R. 6 Died patient withOther Chronic obstructive pulmonary diseases
		
		SqlCohortDefinition diedOtherChronicObstructivePulmonaryDiseases = diedPatientWithICDCodesObsByStartDateAndEndDate("J44,J47");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient
		        .setName("maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient");
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatientIndicator",
		            maleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.D.M.019", "DiedOther Chronic obstructive pulmonary diseases Male",
		    new Mapped(maleBetween0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient
		        .setName("femaleBelow5OtherChronicObstructivePulmonaryDiseasesdiedCasePatient");
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherChronicObstructivePulmonaryDiseasesdiedCasePatientIndicator",
		            femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.D.F.019", "DiedOther Chronic obstructive pulmonary diseases Female",
		    new Mapped(femaleBeteen0And19OtherChronicObstructivePulmonaryDiseasesdiedCasePatientIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases");
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.D.M.2039", "DiedOther Chronic obstructive pulmonary diseases Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases");
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.D.F.2039", "DiedOther Chronic obstructive pulmonary diseases Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases");
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.D.M.40", "DiedOther Chronic obstructive pulmonary diseases Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setName("femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases");
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicObstructivePulmonaryDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator",
		            femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("IV.R.6.D.F.40", "DiedOther Chronic obstructive pulmonary diseases Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithOtherChronicObstructivePulmonaryDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 1 New case patient with Diabetes - Type 1
		
		SqlCohortDefinition newDiabetesTypeOne = patientWithICDCodeObsByStartDateAndEndDate("E10", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesTypeOne = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesTypeOne.setName("maleBeteen0And19DiabetesTypeOne");
		maleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesTypeOne.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesTypeOne.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesTypeOneIndicator", maleBeteen0And19DiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.N.M.019",
		    "New case Diabetes - Type 1 Male",
		    new Mapped(maleBetween0And19DiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesTypeOne = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesTypeOne.setName("femaleBelow5DiabetesTypeOne");
		femaleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19DiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesTypeOne.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesTypeOne.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesTypeOneIndicator", femaleBeteen0And19DiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.N.F.019",
		    "New case Diabetes - Type 1 Female",
		    new Mapped(femaleBeteen0And19DiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithDiabetesTypeOne.setName("malepatientsBetween20And39YearsWithDiabetesTypeOne");
		malepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithDiabetesTypeOneIndicator",
		    malepatientsBetween20And39YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.N.M.2039",
		    "New case Diabetes - Type 1 Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.setName("femalepatientsBetween20And39YearsWithDiabetesTypeOne");
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithDiabetesTypeOneIndicator",
		    femalepatientsBetween20And39YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.N.F.2039",
		    "New case Diabetes - Type 1 Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithDiabetesTypeOne.setName("malepatientsAbove40YearsWithDiabetesTypeOne");
		malepatientsAbove40YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithDiabetesTypeOneIndicator", malepatientsAbove40YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.N.M.40",
		    "New case Diabetes - Type 1 Male above 40",
		    new Mapped(malepatientsAbove40YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithDiabetesTypeOne.setName("femalepatientsAbove40YearsWithDiabetesTypeOne");
		femalepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithDiabetesTypeOneIndicator", femalepatientsAbove40YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.N.F.40",
		    "New case Diabetes - Type 1 Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 1 Old case patient with Diabetes - Type 1
		
		SqlCohortDefinition OldDiabetesTypeOne = patientWithICDCodeObsByStartDateAndEndDate("E10", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesTypeOneOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesTypeOneOldCasePatient.setName("maleBeteen0And19DiabetesTypeOneOldCasePatient");
		maleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesTypeOneOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesTypeOneOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesTypeOneOldCasePatientIndicator", maleBeteen0And19DiabetesTypeOneOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.O.M.019",
		    "Old case Diabetes - Type 1 Male",
		    new Mapped(maleBetween0And19DiabetesTypeOneOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesTypeOneOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.setName("femaleBelow5DiabetesTypeOneOldCasePatient");
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesTypeOneOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesTypeOneOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesTypeOneOldCasePatientIndicator", femaleBeteen0And19DiabetesTypeOneOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.O.F.019",
		    "Old case Diabetes - Type 1 Female",
		    new Mapped(femaleBeteen0And19DiabetesTypeOneOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne
		        .setName("maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne");
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator",
		    maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.O.M.2039",
		    "Old case Diabetes - Type 1 Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne
		        .setName("femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne");
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOne,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.O.F.2039",
		    "Old case Diabetes - Type 1 Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.setName("maleOldCasepatientsAbove40YearsWithDiabetesTypeOne");
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithDiabetesTypeOneIndicator",
		    maleOldCasepatientsAbove40YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.O.M.40",
		    "Old case Diabetes - Type 1 Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.setName("femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne");
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithDiabetesTypeOneIndicator",
		    femaleOldCasepatientsAbove40YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.O.F.40",
		    "Old case Diabetes - Type 1 Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 1 Died patient with Diabetes - Type 1
		
		SqlCohortDefinition diedDiabetesTypeOne = diedPatientWithICDCodeObsByStartDateAndEndDate("E10");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesTypeOnediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesTypeOnediedCasePatient.setName("maleBeteen0And19DiabetesTypeOnediedCasePatient");
		maleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesTypeOnediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesTypeOnediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesTypeOnediedCasePatientIndicator", maleBeteen0And19DiabetesTypeOnediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.D.M.019",
		    "Died Diabetes - Type 1 Male",
		    new Mapped(maleBetween0And19DiabetesTypeOnediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesTypeOnediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.setName("femaleBelow5DiabetesTypeOnediedCasePatient");
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesTypeOnediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesTypeOnediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesTypeOnediedCasePatientIndicator", femaleBeteen0And19DiabetesTypeOnediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.D.F.019",
		    "Died Diabetes - Type 1 Female",
		    new Mapped(femaleBeteen0And19DiabetesTypeOnediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne
		        .setName("malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne");
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator",
		    malediedCasepatientsBetween20And39YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.D.M.2039",
		    "Died Diabetes - Type 1 Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne
		        .setName("femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne");
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator",
		            femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOne,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.D.F.2039",
		    "Died Diabetes - Type 1 Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.setName("malediedCasepatientsAbove40YearsWithDiabetesTypeOne");
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithDiabetesTypeOneIndicator",
		    malediedCasepatientsAbove40YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.D.M.40",
		    "Died Diabetes - Type 1 Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithDiabetesTypeOne = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne
		        .setName("femalediedCasepatientsAbove40YearsWithDiabetesTypeOne");
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeOne, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeOne.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithDiabetesTypeOneIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithDiabetesTypeOneIndicator",
		    femalediedCasepatientsAbove40YearsWithDiabetesTypeOne,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.1.D.F.40",
		    "Died Diabetes - Type 1 Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithDiabetesTypeOneIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 2 New case patient with Diabetes - Type 2
		
		SqlCohortDefinition newDiabetesTypeTwo = patientWithICDCodeObsByStartDateAndEndDate("E11", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesTypeTwo = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesTypeTwo.setName("maleBeteen0And19DiabetesTypeTwo");
		maleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesTypeTwo.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesTypeTwo.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesTypeTwoIndicator", maleBeteen0And19DiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.N.M.019",
		    "New case Diabetes - Type 2 Male",
		    new Mapped(maleBetween0And19DiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesTypeTwo = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesTypeTwo.setName("femaleBelow5DiabetesTypeTwo");
		femaleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19DiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesTypeTwo.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesTypeTwo.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesTypeTwoIndicator", femaleBeteen0And19DiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.N.F.019",
		    "New case Diabetes - Type 2 Female",
		    new Mapped(femaleBeteen0And19DiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.setName("malepatientsBetween20And39YearsWithDiabetesTypeTwo");
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator",
		    malepatientsBetween20And39YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.N.M.2039",
		    "New case Diabetes - Type 2 Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.setName("femalepatientsBetween20And39YearsWithDiabetesTypeTwo");
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator",
		    femalepatientsBetween20And39YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.N.F.2039",
		    "New case Diabetes - Type 2 Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithDiabetesTypeTwo.setName("malepatientsAbove40YearsWithDiabetesTypeTwo");
		malepatientsAbove40YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithDiabetesTypeTwoIndicator", malepatientsAbove40YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.N.M.40",
		    "New case Diabetes - Type 2 Male above 40",
		    new Mapped(malepatientsAbove40YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithDiabetesTypeTwo.setName("femalepatientsAbove40YearsWithDiabetesTypeTwo");
		femalepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithDiabetesTypeTwoIndicator", femalepatientsAbove40YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.N.F.40",
		    "New case Diabetes - Type 2 Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IV.D. 2 Old case patient with Diabetes - Type 2
		
		SqlCohortDefinition OldDiabetesTypeTwo = patientWithICDCodeObsByStartDateAndEndDate("E11", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesTypeTwoOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.setName("maleBeteen0And19DiabetesTypeTwoOldCasePatient");
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesTypeTwoOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesTypeTwoOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesTypeTwoOldCasePatientIndicator", maleBeteen0And19DiabetesTypeTwoOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.O.M.019",
		    "Old case Diabetes - Type 2 Male",
		    new Mapped(maleBetween0And19DiabetesTypeTwoOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesTypeTwoOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.setName("femaleBelow5DiabetesTypeTwoOldCasePatient");
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesTypeTwoOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesTypeTwoOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesTypeTwoOldCasePatientIndicator", femaleBeteen0And19DiabetesTypeTwoOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.O.F.019",
		    "Old case Diabetes - Type 2 Female",
		    new Mapped(femaleBeteen0And19DiabetesTypeTwoOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo
		        .setName("maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo");
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator",
		    maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.O.M.2039",
		    "Old case Diabetes - Type 2 Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo
		        .setName("femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo");
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwo,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.O.F.2039",
		    "Old case Diabetes - Type 2 Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.setName("maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo");
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator",
		    maleOldCasepatientsAbove40YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.O.M.40",
		    "Old case Diabetes - Type 2 Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.setName("femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo");
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator",
		    femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.O.F.40",
		    "Old case Diabetes - Type 2 Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 2 Died patient with Diabetes - Type 2
		
		SqlCohortDefinition diedDiabetesTypeTwo = diedPatientWithICDCodeObsByStartDateAndEndDate("E11");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesTypeTwodiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.setName("maleBeteen0And19DiabetesTypeTwodiedCasePatient");
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesTypeTwodiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesTypeTwodiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesTypeTwodiedCasePatientIndicator", maleBeteen0And19DiabetesTypeTwodiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.D.M.019",
		    "Died Diabetes - Type 2 Male",
		    new Mapped(maleBetween0And19DiabetesTypeTwodiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesTypeTwodiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.setName("femaleBelow5DiabetesTypeTwodiedCasePatient");
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesTypeTwodiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesTypeTwodiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesTypeTwodiedCasePatientIndicator", femaleBeteen0And19DiabetesTypeTwodiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.D.F.019",
		    "Died Diabetes - Type 2 Female",
		    new Mapped(femaleBeteen0And19DiabetesTypeTwodiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo
		        .setName("malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo");
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator",
		    malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.D.M.2039",
		    "Died Diabetes - Type 2 Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo
		        .setName("femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo");
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator",
		            femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwo,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.D.F.2039",
		    "Died Diabetes - Type 2 Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.setName("malediedCasepatientsAbove40YearsWithDiabetesTypeTwo");
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator",
		    malediedCasepatientsAbove40YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.D.M.40",
		    "Died Diabetes - Type 2 Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo
		        .setName("femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo");
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesTypeTwo, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator",
		    femalediedCasepatientsAbove40YearsWithDiabetesTypeTwo,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.2.D.F.40",
		    "Died Diabetes - Type 2 Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithDiabetesTypeTwoIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 3 New case patient with Diabetes gestational
		
		SqlCohortDefinition newDiabetesGestational = patientWithICDCodeObsByStartDateAndEndDate("O244", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesGestational = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesGestational.setName("maleBeteen0And19DiabetesGestational");
		maleBeteen0And19DiabetesGestational.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19DiabetesGestational.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesGestational.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesGestational.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesGestational.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesGestationalIndicator", maleBeteen0And19DiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.N.M.019",
		    "New case Diabetes gestational Male",
		    new Mapped(maleBetween0And19DiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesGestational = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesGestational.setName("femaleBelow5DiabetesGestational");
		femaleBeteen0And19DiabetesGestational.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19DiabetesGestational.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesGestational.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19DiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesGestational.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesGestational.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesGestationalIndicator", femaleBeteen0And19DiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.N.F.019",
		    "New case Diabetes gestational Female",
		    new Mapped(femaleBeteen0And19DiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithDiabetesGestational = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithDiabetesGestational
		        .setName("malepatientsBetween20And39YearsWithDiabetesGestational");
		malepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithDiabetesGestational.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithDiabetesGestationalIndicator",
		    malepatientsBetween20And39YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.N.M.2039",
		    "New case Diabetes gestational Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithDiabetesGestational = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithDiabetesGestational
		        .setName("femalepatientsBetween20And39YearsWithDiabetesGestational");
		femalepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithDiabetesGestational
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithDiabetesGestational.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithDiabetesGestationalIndicator",
		    femalepatientsBetween20And39YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.N.F.2039",
		    "New case Diabetes gestational Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithDiabetesGestational = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithDiabetesGestational.setName("malepatientsAbove40YearsWithDiabetesGestational");
		malepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithDiabetesGestational.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithDiabetesGestational.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithDiabetesGestationalIndicator", malepatientsAbove40YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.N.M.40",
		    "New case Diabetes gestational Male above 40",
		    new Mapped(malepatientsAbove40YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithDiabetesGestational = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithDiabetesGestational.setName("femalepatientsAbove40YearsWithDiabetesGestational");
		femalepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithDiabetesGestational
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithDiabetesGestational.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithDiabetesGestational.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithDiabetesGestationalIndicator", femalepatientsAbove40YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.N.F.40",
		    "New case Diabetes gestational Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 3 Old case patient with Diabetes gestational
		
		SqlCohortDefinition OldDiabetesGestational = patientWithICDCodeObsByStartDateAndEndDate("O244", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesGestationalOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesGestationalOldCasePatient.setName("maleBeteen0And19DiabetesGestationalOldCasePatient");
		maleBeteen0And19DiabetesGestationalOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19DiabetesGestationalOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesGestationalOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesGestationalOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesGestationalOldCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesGestationalOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesGestationalOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesGestationalOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesGestationalOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesGestationalOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesGestationalOldCasePatientIndicator",
		    maleBeteen0And19DiabetesGestationalOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.O.M.019",
		    "Old case Diabetes gestational Male",
		    new Mapped(maleBetween0And19DiabetesGestationalOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesGestationalOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesGestationalOldCasePatient.setName("femaleBelow5DiabetesGestationalOldCasePatient");
		femaleBeteen0And19DiabetesGestationalOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19DiabetesGestationalOldCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesGestationalOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesGestationalOldCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesGestationalOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19DiabetesGestationalOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesGestationalOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesGestationalOldCasePatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesGestationalOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesGestationalOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesGestationalOldCasePatientIndicator", femaleBeteen0And19DiabetesGestationalOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.O.F.019",
		    "Old case Diabetes gestational Female",
		    new Mapped(femaleBeteen0And19DiabetesGestationalOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithDiabetesGestational = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational
		        .setName("maleOldCasepatientsBetween20And39YearsWithDiabetesGestational");
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithDiabetesGestational.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator",
		            maleOldCasepatientsBetween20And39YearsWithDiabetesGestational,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.O.M.2039",
		    "Old case Diabetes gestational Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational
		        .setName("femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational");
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithDiabetesGestational,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.O.F.2039",
		    "Old case Diabetes gestational Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithDiabetesGestational = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithDiabetesGestational
		        .setName("maleOldCasepatientsAbove40YearsWithDiabetesGestational");
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithDiabetesGestational.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithDiabetesGestationalIndicator",
		    maleOldCasepatientsAbove40YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.O.M.40",
		    "Old case Diabetes gestational Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithDiabetesGestational = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational
		        .setName("femaleOldCasepatientsAbove40YearsWithDiabetesGestational");
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithDiabetesGestational.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithDiabetesGestationalIndicator",
		    femaleOldCasepatientsAbove40YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.O.F.40",
		    "Old case Diabetes gestational Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// IIV.D. 3 Died patient with Diabetes gestational
		
		SqlCohortDefinition diedDiabetesGestational = diedPatientWithICDCodeObsByStartDateAndEndDate("O244");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19DiabetesGestationaldiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19DiabetesGestationaldiedCasePatient.setName("maleBeteen0And19DiabetesGestationaldiedCasePatient");
		maleBeteen0And19DiabetesGestationaldiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19DiabetesGestationaldiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19DiabetesGestationaldiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19DiabetesGestationaldiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19DiabetesGestationaldiedCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19DiabetesGestationaldiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19DiabetesGestationaldiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19DiabetesGestationaldiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19DiabetesGestationaldiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19DiabetesGestationaldiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19DiabetesGestationaldiedCasePatientIndicator",
		    maleBeteen0And19DiabetesGestationaldiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.D.M.019",
		    "Died Diabetes gestational Male",
		    new Mapped(maleBetween0And19DiabetesGestationaldiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19DiabetesGestationaldiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.setName("femaleBelow5DiabetesGestationaldiedCasePatient");
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19DiabetesGestationaldiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19DiabetesGestationaldiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5DiabetesGestationaldiedCasePatientIndicator", femaleBeteen0And19DiabetesGestationaldiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.D.F.019",
		    "Died Diabetes gestational Female",
		    new Mapped(femaleBeteen0And19DiabetesGestationaldiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithDiabetesGestational = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational
		        .setName("malediedCasepatientsBetween20And39YearsWithDiabetesGestational");
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithDiabetesGestational.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator",
		            malediedCasepatientsBetween20And39YearsWithDiabetesGestational,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.D.M.2039",
		    "Died Diabetes gestational Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithDiabetesGestational = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational
		        .setName("femalediedCasepatientsBetween20And39YearsWithDiabetesGestational");
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithDiabetesGestational.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator",
		            femalediedCasepatientsBetween20And39YearsWithDiabetesGestational,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.D.F.2039",
		    "Died Diabetes gestational Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithDiabetesGestational = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithDiabetesGestational
		        .setName("malediedCasepatientsAbove40YearsWithDiabetesGestational");
		malediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesGestational
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithDiabetesGestational.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithDiabetesGestationalIndicator",
		    malediedCasepatientsAbove40YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.D.M.40",
		    "Died Diabetes gestational Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithDiabetesGestational = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithDiabetesGestational
		        .setName("femalediedCasepatientsAbove40YearsWithDiabetesGestational");
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedDiabetesGestational, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithDiabetesGestational.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithDiabetesGestationalIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithDiabetesGestationalIndicator",
		    femalediedCasepatientsAbove40YearsWithDiabetesGestational,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "IV.D.3.D.F.40",
		    "Died Diabetes gestational Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithDiabetesGestationalIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
	}
	
	//==================================================
	// V. Other Cardiovascular and Kidney diseases
	//==================================================
	
	private void createCohortMonthlyIndicatorsV(CohortIndicatorDataSetDefinition dsd) {
		
		AgeCohortDefinition patientBetweenZeroAndNineteenYears = patientWithAgeBetween(0, 19);
		
		GenderCohortDefinition males = new GenderCohortDefinition();
		males.setName("male Patients");
		males.setMaleIncluded(true);
		
		AgeCohortDefinition patientBetween20And39Years = patientWithAgeBetween(20, 39);
		
		AgeCohortDefinition patientAbove40Years = patientWithAgeAbove(40);
		
		// V.CK. 1 New case patient with Cardiomyopathies
		
		SqlCohortDefinition newCardiomyopathies = patientWithICDCodeObsByStartDateAndEndDate("I42", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19Cardiomyopathies = new CompositionCohortDefinition();
		maleBeteen0And19Cardiomyopathies.setName("maleBeteen0And19Cardiomyopathies");
		maleBeteen0And19Cardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19Cardiomyopathies.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19Cardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19Cardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19Cardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19Cardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19Cardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19Cardiomyopathies.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19Cardiomyopathies.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CardiomyopathiesIndicator", maleBeteen0And19Cardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.N.M.019",
		    "New caseCardiomyopathies Male",
		    new Mapped(maleBetween0And19CardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19Cardiomyopathies = new CompositionCohortDefinition();
		femaleBeteen0And19Cardiomyopathies.setName("femaleBelow5Cardiomyopathies");
		femaleBeteen0And19Cardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19Cardiomyopathies.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19Cardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19Cardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19Cardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19Cardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19Cardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19Cardiomyopathies.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19Cardiomyopathies.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CardiomyopathiesIndicator", femaleBeteen0And19Cardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.N.F.019",
		    "New caseCardiomyopathies Female",
		    new Mapped(femaleBeteen0And19CardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithCardiomyopathies = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithCardiomyopathies.setName("malepatientsBetween20And39YearsWithCardiomyopathies");
		malepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithCardiomyopathies
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithCardiomyopathies
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithCardiomyopathies.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithCardiomyopathies.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithCardiomyopathiesIndicator",
		    malepatientsBetween20And39YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.N.M.2039",
		    "New caseCardiomyopathies Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithCardiomyopathies = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithCardiomyopathies
		        .setName("femalepatientsBetween20And39YearsWithCardiomyopathies");
		femalepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithCardiomyopathies.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithCardiomyopathiesIndicator",
		    femalepatientsBetween20And39YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.N.F.2039",
		    "New caseCardiomyopathies Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithCardiomyopathies = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithCardiomyopathies.setName("malepatientsAbove40YearsWithCardiomyopathies");
		malepatientsAbove40YearsWithCardiomyopathies
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithCardiomyopathies.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithCardiomyopathies.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithCardiomyopathiesIndicator", malepatientsAbove40YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.N.M.40",
		    "New caseCardiomyopathies Male above 40",
		    new Mapped(malepatientsAbove40YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithCardiomyopathies = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithCardiomyopathies.setName("femalepatientsAbove40YearsWithCardiomyopathies");
		femalepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithCardiomyopathies.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithCardiomyopathies.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithCardiomyopathiesIndicator", femalepatientsAbove40YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.N.F.40",
		    "New caseCardiomyopathies Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 1 Old case patient with Cardiomyopathies
		
		SqlCohortDefinition OldCardiomyopathies = patientWithICDCodeObsByStartDateAndEndDate("I42", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CardiomyopathiesOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19CardiomyopathiesOldCasePatient.setName("maleBeteen0And19CardiomyopathiesOldCasePatient");
		maleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19CardiomyopathiesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CardiomyopathiesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CardiomyopathiesOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CardiomyopathiesOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CardiomyopathiesOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CardiomyopathiesOldCasePatientIndicator", maleBeteen0And19CardiomyopathiesOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.O.M.019",
		    "Old caseCardiomyopathies Male",
		    new Mapped(maleBetween0And19CardiomyopathiesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CardiomyopathiesOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19CardiomyopathiesOldCasePatient.setName("femaleBelow5CardiomyopathiesOldCasePatient");
		femaleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CardiomyopathiesOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CardiomyopathiesOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CardiomyopathiesOldCasePatientIndicator", femaleBeteen0And19CardiomyopathiesOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.O.F.019",
		    "Old caseCardiomyopathies Female",
		    new Mapped(femaleBeteen0And19CardiomyopathiesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithCardiomyopathies = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies
		        .setName("maleOldCasepatientsBetween20And39YearsWithCardiomyopathies");
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithCardiomyopathies.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator",
		    maleOldCasepatientsBetween20And39YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.O.M.2039",
		    "Old caseCardiomyopathies Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies
		        .setName("femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies");
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithCardiomyopathies,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.O.F.2039",
		    "Old caseCardiomyopathies Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithCardiomyopathies = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.setName("maleOldCasepatientsAbove40YearsWithCardiomyopathies");
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithCardiomyopathies.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithCardiomyopathiesIndicator",
		    maleOldCasepatientsAbove40YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.O.M.40",
		    "Old caseCardiomyopathies Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithCardiomyopathies = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies
		        .setName("femaleOldCasepatientsAbove40YearsWithCardiomyopathies");
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithCardiomyopathies.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithCardiomyopathiesIndicator",
		    femaleOldCasepatientsAbove40YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.O.F.40",
		    "Old caseCardiomyopathies Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 1 Died patient with Cardiomyopathies
		
		SqlCohortDefinition diedCardiomyopathies = diedPatientWithICDCodeObsByStartDateAndEndDate("I42");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CardiomyopathiesdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19CardiomyopathiesdiedCasePatient.setName("maleBeteen0And19CardiomyopathiesdiedCasePatient");
		maleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CardiomyopathiesdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CardiomyopathiesdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CardiomyopathiesdiedCasePatientIndicator", maleBeteen0And19CardiomyopathiesdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.D.M.019",
		    "DiedCardiomyopathies Male",
		    new Mapped(maleBetween0And19CardiomyopathiesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CardiomyopathiesdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.setName("femaleBelow5CardiomyopathiesdiedCasePatient");
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CardiomyopathiesdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CardiomyopathiesdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CardiomyopathiesdiedCasePatientIndicator", femaleBeteen0And19CardiomyopathiesdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.D.F.019",
		    "DiedCardiomyopathies Female",
		    new Mapped(femaleBeteen0And19CardiomyopathiesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithCardiomyopathies = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies
		        .setName("malediedCasepatientsBetween20And39YearsWithCardiomyopathies");
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithCardiomyopathies.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator",
		            malediedCasepatientsBetween20And39YearsWithCardiomyopathies,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.D.M.2039",
		    "DiedCardiomyopathies Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithCardiomyopathies = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies
		        .setName("femalediedCasepatientsBetween20And39YearsWithCardiomyopathies");
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithCardiomyopathies.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator",
		            femalediedCasepatientsBetween20And39YearsWithCardiomyopathies,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.D.F.2039",
		    "DiedCardiomyopathies Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithCardiomyopathies = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithCardiomyopathies.setName("malediedCasepatientsAbove40YearsWithCardiomyopathies");
		malediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCardiomyopathies
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithCardiomyopathies
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithCardiomyopathies.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithCardiomyopathiesIndicator",
		    malediedCasepatientsAbove40YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.D.M.40",
		    "DiedCardiomyopathies Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithCardiomyopathies = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithCardiomyopathies
		        .setName("femalediedCasepatientsAbove40YearsWithCardiomyopathies");
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCardiomyopathies, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithCardiomyopathies.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithCardiomyopathiesIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithCardiomyopathiesIndicator",
		    femalediedCasepatientsAbove40YearsWithCardiomyopathies,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.1.D.F.40",
		    "DiedCardiomyopathies Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithCardiomyopathiesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 2  New case patient with Stroke/TIA
		
		SqlCohortDefinition newStrokeTIA = patientWithICDCodesObsByStartDateAndEndDate("G45,I60,I61,I62,I63,I64",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19StrokeTIA = new CompositionCohortDefinition();
		maleBeteen0And19StrokeTIA.setName("maleBeteen0And19StrokeTIA");
		maleBeteen0And19StrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19StrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19StrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19StrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19StrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19StrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19StrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19StrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19StrokeTIA.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19StrokeTIAIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19StrokeTIAIndicator", maleBeteen0And19StrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.2.N.M.019", "New case Stroke/TIA Male", new Mapped(maleBetween0And19StrokeTIAIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19StrokeTIA = new CompositionCohortDefinition();
		femaleBeteen0And19StrokeTIA.setName("femaleBelow5StrokeTIA");
		femaleBeteen0And19StrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19StrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19StrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19StrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19StrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19StrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19StrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19StrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19StrokeTIA.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19StrokeTIAIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5StrokeTIAIndicator", femaleBeteen0And19StrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.2.N.F.019", "New case Stroke/TIA Female", new Mapped(femaleBeteen0And19StrokeTIAIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithStrokeTIA = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithStrokeTIA.setName("malepatientsBetween20And39YearsWithStrokeTIA");
		malepatientsBetween20And39YearsWithStrokeTIA
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithStrokeTIA.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithStrokeTIAIndicator", malepatientsBetween20And39YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.N.M.2039",
		    "New case Stroke/TIA Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithStrokeTIA = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithStrokeTIA.setName("femalepatientsBetween20And39YearsWithStrokeTIA");
		femalepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithStrokeTIA.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithStrokeTIAIndicator", femalepatientsBetween20And39YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.N.F.2039",
		    "New case Stroke/TIA Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithStrokeTIA = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithStrokeTIA.setName("malepatientsAbove40YearsWithStrokeTIA");
		malepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithStrokeTIA.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithStrokeTIAIndicator", malepatientsAbove40YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.N.M.40",
		    "New case Stroke/TIA Male above 40",
		    new Mapped(malepatientsAbove40YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithStrokeTIA = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithStrokeTIA.setName("femalepatientsAbove40YearsWithStrokeTIA");
		femalepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithStrokeTIA.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithStrokeTIAIndicator", femalepatientsAbove40YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.N.F.40",
		    "New case Stroke/TIA Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 2 Old case patient with Stroke/TIA
		
		SqlCohortDefinition OldStrokeTIA = patientWithICDCodesObsByStartDateAndEndDate("G45,I60,I61,I62,I63,I64",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19StrokeTIAOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19StrokeTIAOldCasePatient.setName("maleBeteen0And19StrokeTIAOldCasePatient");
		maleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19StrokeTIAOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19StrokeTIAOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19StrokeTIAOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19StrokeTIAOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19StrokeTIAOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19StrokeTIAOldCasePatientIndicator", maleBeteen0And19StrokeTIAOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.O.M.019",
		    "Old case Stroke/TIA Male",
		    new Mapped(maleBetween0And19StrokeTIAOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19StrokeTIAOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19StrokeTIAOldCasePatient.setName("femaleBelow5StrokeTIAOldCasePatient");
		femaleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19StrokeTIAOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19StrokeTIAOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19StrokeTIAOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19StrokeTIAOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19StrokeTIAOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19StrokeTIAOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5StrokeTIAOldCasePatientIndicator", femaleBeteen0And19StrokeTIAOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.O.F.019",
		    "Old case Stroke/TIA Female",
		    new Mapped(femaleBeteen0And19StrokeTIAOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithStrokeTIA = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.setName("maleOldCasepatientsBetween20And39YearsWithStrokeTIA");
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithStrokeTIA.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithStrokeTIAIndicator",
		    maleOldCasepatientsBetween20And39YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.O.M.2039",
		    "Old case Stroke/TIA Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithStrokeTIA = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA
		        .setName("femaleOldCasepatientsBetween20And39YearsWithStrokeTIA");
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithStrokeTIA.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithStrokeTIAIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.O.F.2039",
		    "Old case Stroke/TIA Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithStrokeTIA = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithStrokeTIA.setName("maleOldCasepatientsAbove40YearsWithStrokeTIA");
		maleOldCasepatientsAbove40YearsWithStrokeTIA
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithStrokeTIA.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithStrokeTIAIndicator", maleOldCasepatientsAbove40YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.O.M.40",
		    "Old case Stroke/TIA Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithStrokeTIA = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.setName("femaleOldCasepatientsAbove40YearsWithStrokeTIA");
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithStrokeTIA.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithStrokeTIAIndicator", femaleOldCasepatientsAbove40YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.O.F.40",
		    "Old case Stroke/TIA Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 2 Died patient with Stroke/TIA
		
		SqlCohortDefinition diedStrokeTIA = diedPatientWithICDCodesObsByStartDateAndEndDate("G45,I60,I61,I62,I63,I64");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19StrokeTIAdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19StrokeTIAdiedCasePatient.setName("maleBeteen0And19StrokeTIAdiedCasePatient");
		maleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19StrokeTIAdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19StrokeTIAdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19StrokeTIAdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19StrokeTIAdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19StrokeTIAdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19StrokeTIAdiedCasePatientIndicator", maleBeteen0And19StrokeTIAdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.D.M.019",
		    "Died Stroke/TIA Male",
		    new Mapped(maleBetween0And19StrokeTIAdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19StrokeTIAdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19StrokeTIAdiedCasePatient.setName("femaleBelow5StrokeTIAdiedCasePatient");
		femaleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19StrokeTIAdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19StrokeTIAdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19StrokeTIAdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19StrokeTIAdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19StrokeTIAdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19StrokeTIAdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5StrokeTIAdiedCasePatientIndicator", femaleBeteen0And19StrokeTIAdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.D.F.019",
		    "Died Stroke/TIA Female",
		    new Mapped(femaleBeteen0And19StrokeTIAdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithStrokeTIA = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.setName("malediedCasepatientsBetween20And39YearsWithStrokeTIA");
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithStrokeTIA.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithStrokeTIAIndicator",
		    malediedCasepatientsBetween20And39YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.D.M.2039",
		    "Died Stroke/TIA Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithStrokeTIA = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA
		        .setName("femalediedCasepatientsBetween20And39YearsWithStrokeTIA");
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithStrokeTIA.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsBetween20And39YearsWithStrokeTIAIndicator",
		    femalediedCasepatientsBetween20And39YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.D.F.2039",
		    "Died Stroke/TIA Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithStrokeTIA = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithStrokeTIA.setName("malediedCasepatientsAbove40YearsWithStrokeTIA");
		malediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithStrokeTIA.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithStrokeTIAIndicator", malediedCasepatientsAbove40YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.D.M.40",
		    "Died Stroke/TIA Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithStrokeTIA = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithStrokeTIA.setName("femalediedCasepatientsAbove40YearsWithStrokeTIA");
		femalediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedStrokeTIA, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithStrokeTIA.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithStrokeTIAIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithStrokeTIAIndicator", femalediedCasepatientsAbove40YearsWithStrokeTIA,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.2.D.F.40",
		    "Died Stroke/TIA Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithStrokeTIAIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 3  New case patient with Rheumatic heart disease
		
		SqlCohortDefinition newRheumaticHeartDisease = patientWithICDCodesObsByStartDateAndEndDate("I05,I06,I07,I08,I09",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19RheumaticHeartDisease = new CompositionCohortDefinition();
		maleBeteen0And19RheumaticHeartDisease.setName("maleBeteen0And19RheumaticHeartDisease");
		maleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19RheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19RheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19RheumaticHeartDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19RheumaticHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19RheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19RheumaticHeartDiseaseIndicator", maleBeteen0And19RheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.N.M.019",
		    "New case Rheumatic heart disease Male",
		    new Mapped(maleBetween0And19RheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19RheumaticHeartDisease = new CompositionCohortDefinition();
		femaleBeteen0And19RheumaticHeartDisease.setName("femaleBelow5RheumaticHeartDisease");
		femaleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19RheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19RheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19RheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19RheumaticHeartDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19RheumaticHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19RheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RheumaticHeartDiseaseIndicator", femaleBeteen0And19RheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.N.F.019",
		    "New case Rheumatic heart disease Female",
		    new Mapped(femaleBeteen0And19RheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithRheumaticHeartDisease
		        .setName("malepatientsBetween20And39YearsWithRheumaticHeartDisease");
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator",
		    malepatientsBetween20And39YearsWithRheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.N.M.2039",
		    "New case Rheumatic heart disease Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease
		        .setName("femalepatientsBetween20And39YearsWithRheumaticHeartDisease");
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator",
		    femalepatientsBetween20And39YearsWithRheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.N.F.2039",
		    "New case Rheumatic heart disease Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithRheumaticHeartDisease.setName("malepatientsAbove40YearsWithRheumaticHeartDisease");
		malepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithRheumaticHeartDisease
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator", malepatientsAbove40YearsWithRheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.N.M.40",
		    "New case Rheumatic heart disease Male above 40",
		    new Mapped(malepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithRheumaticHeartDisease.setName("femalepatientsAbove40YearsWithRheumaticHeartDisease");
		femalepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithRheumaticHeartDisease
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithRheumaticHeartDisease
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithRheumaticHeartDisease.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator",
		    femalepatientsAbove40YearsWithRheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.N.F.40",
		    "New case Rheumatic heart disease Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 3 Old case patient with Rheumatic heart disease
		
		SqlCohortDefinition OldRheumaticHeartDisease = patientWithICDCodesObsByStartDateAndEndDate("I05,I06,I07,I08,I09",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19RheumaticHeartDiseaseOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.setName("maleBeteen0And19RheumaticHeartDiseaseOldCasePatient");
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19RheumaticHeartDiseaseOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19RheumaticHeartDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19RheumaticHeartDiseaseOldCasePatientIndicator",
		    maleBeteen0And19RheumaticHeartDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.O.M.019",
		    "Old case Rheumatic heart disease Male",
		    new Mapped(maleBetween0And19RheumaticHeartDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.setName("femaleBelow5RheumaticHeartDiseaseOldCasePatient");
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19RheumaticHeartDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RheumaticHeartDiseaseOldCasePatientIndicator",
		    femaleBeteen0And19RheumaticHeartDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.O.F.019",
		    "Old case Rheumatic heart disease Female",
		    new Mapped(femaleBeteen0And19RheumaticHeartDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease
		        .setName("maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease");
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator",
		            maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.O.M.2039",
		    "Old case Rheumatic heart disease Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease
		        .setName("femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease");
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.O.F.2039",
		    "Old case Rheumatic heart disease Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease
		        .setName("maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease");
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator",
		    maleOldCasepatientsAbove40YearsWithRheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.O.M.40",
		    "Old case Rheumatic heart disease Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease
		        .setName("femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease");
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator",
		    femaleOldCasepatientsAbove40YearsWithRheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.O.F.40",
		    "Old case Rheumatic heart disease Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 3 Died patient with Rheumatic heart disease
		
		SqlCohortDefinition diedRheumaticHeartDisease = diedPatientWithICDCodesObsByStartDateAndEndDate("I05,I06,I07,I08,I09");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19RheumaticHeartDiseasediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.setName("maleBeteen0And19RheumaticHeartDiseasediedCasePatient");
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19RheumaticHeartDiseasediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19RheumaticHeartDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19RheumaticHeartDiseasediedCasePatientIndicator",
		    maleBeteen0And19RheumaticHeartDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.D.M.019",
		    "Died Rheumatic heart disease Male",
		    new Mapped(maleBetween0And19RheumaticHeartDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19RheumaticHeartDiseasediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.setName("femaleBelow5RheumaticHeartDiseasediedCasePatient");
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19RheumaticHeartDiseasediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19RheumaticHeartDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RheumaticHeartDiseasediedCasePatientIndicator",
		    femaleBeteen0And19RheumaticHeartDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.D.F.019",
		    "Died Rheumatic heart disease Female",
		    new Mapped(femaleBeteen0And19RheumaticHeartDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease
		        .setName("malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease");
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator",
		            malediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.D.M.2039",
		    "Died Rheumatic heart disease Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease
		        .setName("femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease");
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator",
		            femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.D.F.2039",
		    "Died Rheumatic heart disease Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease
		        .setName("malediedCasepatientsAbove40YearsWithRheumaticHeartDisease");
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator",
		    malediedCasepatientsAbove40YearsWithRheumaticHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.D.M.40",
		    "Died Rheumatic heart disease Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease
		        .setName("femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease");
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRheumaticHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator",
		            femalediedCasepatientsAbove40YearsWithRheumaticHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.3.D.F.40",
		    "Died Rheumatic heart disease Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithRheumaticHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 4  New case patient with Congenital heart disease
		
		SqlCohortDefinition newCongenitalHeartDisease = patientWithICDCodesObsByStartDateAndEndDate(
		    "Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CongenitalHeartDisease = new CompositionCohortDefinition();
		maleBeteen0And19CongenitalHeartDisease.setName("maleBeteen0And19CongenitalHeartDisease");
		maleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19CongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CongenitalHeartDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CongenitalHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CongenitalHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CongenitalHeartDiseaseIndicator", maleBeteen0And19CongenitalHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.N.M.019",
		    "New case Congenital heart disease Male",
		    new Mapped(maleBetween0And19CongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CongenitalHeartDisease = new CompositionCohortDefinition();
		femaleBeteen0And19CongenitalHeartDisease.setName("femaleBelow5CongenitalHeartDisease");
		femaleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19CongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19CongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CongenitalHeartDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CongenitalHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CongenitalHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CongenitalHeartDiseaseIndicator", femaleBeteen0And19CongenitalHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.N.F.019",
		    "New case Congenital heart disease Female",
		    new Mapped(femaleBeteen0And19CongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithCongenitalHeartDisease
		        .setName("malepatientsBetween20And39YearsWithCongenitalHeartDisease");
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator",
		    malepatientsBetween20And39YearsWithCongenitalHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.N.M.2039",
		    "New case Congenital heart disease Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease
		        .setName("femalepatientsBetween20And39YearsWithCongenitalHeartDisease");
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator",
		            femalepatientsBetween20And39YearsWithCongenitalHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.N.F.2039",
		    "New case Congenital heart disease Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithCongenitalHeartDisease.setName("malepatientsAbove40YearsWithCongenitalHeartDisease");
		malepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithCongenitalHeartDisease
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator",
		    malepatientsAbove40YearsWithCongenitalHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.N.M.40",
		    "New case Congenital heart disease Male above 40",
		    new Mapped(malepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithCongenitalHeartDisease.setName("femalepatientsAbove40YearsWithCongenitalHeartDisease");
		femalepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithCongenitalHeartDisease
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithCongenitalHeartDisease
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator",
		    femalepatientsAbove40YearsWithCongenitalHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.N.F.40",
		    "New case Congenital heart disease Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 4 Old case patient with Congenital heart disease
		
		SqlCohortDefinition OldCongenitalHeartDisease = patientWithICDCodesObsByStartDateAndEndDate(
		    "Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CongenitalHeartDiseaseOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.setName("maleBeteen0And19CongenitalHeartDiseaseOldCasePatient");
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CongenitalHeartDiseaseOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CongenitalHeartDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CongenitalHeartDiseaseOldCasePatientIndicator",
		    maleBeteen0And19CongenitalHeartDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.O.M.019",
		    "Old case Congenital heart disease Male",
		    new Mapped(maleBetween0And19CongenitalHeartDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.setName("femaleBelow5CongenitalHeartDiseaseOldCasePatient");
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CongenitalHeartDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CongenitalHeartDiseaseOldCasePatientIndicator",
		    femaleBeteen0And19CongenitalHeartDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.O.F.019",
		    "Old case Congenital heart disease Female",
		    new Mapped(femaleBeteen0And19CongenitalHeartDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease
		        .setName("maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease");
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator",
		            maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.O.M.2039",
		    "Old case Congenital heart disease Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease
		        .setName("femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease");
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.O.F.2039",
		    "Old case Congenital heart disease Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease
		        .setName("maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease");
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator",
		    maleOldCasepatientsAbove40YearsWithCongenitalHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.O.M.40",
		    "Old case Congenital heart disease Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease
		        .setName("femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease");
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator",
		            femaleOldCasepatientsAbove40YearsWithCongenitalHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.O.F.40",
		    "Old case Congenital heart disease Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 4 Died patient with Congenital heart disease
		
		SqlCohortDefinition diedCongenitalHeartDisease = diedPatientWithICDCodesObsByStartDateAndEndDate("Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CongenitalHeartDiseasediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient
		        .setName("maleBeteen0And19CongenitalHeartDiseasediedCasePatient");
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CongenitalHeartDiseasediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CongenitalHeartDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CongenitalHeartDiseasediedCasePatientIndicator",
		    maleBeteen0And19CongenitalHeartDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.D.M.019",
		    "Died Congenital heart disease Male",
		    new Mapped(maleBetween0And19CongenitalHeartDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CongenitalHeartDiseasediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.setName("femaleBelow5CongenitalHeartDiseasediedCasePatient");
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CongenitalHeartDiseasediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CongenitalHeartDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CongenitalHeartDiseasediedCasePatientIndicator",
		    femaleBeteen0And19CongenitalHeartDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.D.F.019",
		    "Died Congenital heart disease Female",
		    new Mapped(femaleBeteen0And19CongenitalHeartDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease
		        .setName("malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease");
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator",
		            malediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.D.M.2039",
		    "Died Congenital heart disease Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease
		        .setName("femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease");
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator",
		            femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.D.F.2039",
		    "Died Congenital heart disease Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease
		        .setName("malediedCasepatientsAbove40YearsWithCongenitalHeartDisease");
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator",
		    malediedCasepatientsAbove40YearsWithCongenitalHeartDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.D.M.40",
		    "Died Congenital heart disease Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease
		        .setName("femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease");
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCongenitalHeartDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator",
		            femalediedCasepatientsAbove40YearsWithCongenitalHeartDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.4.D.F.40",
		    "Died Congenital heart disease Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithCongenitalHeartDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 5 New case patient with Coronary artery disease
		
		SqlCohortDefinition newCoronaryArteryDisease = patientWithICDCodeObsByStartDateAndEndDate("I251", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CoronaryArteryDisease = new CompositionCohortDefinition();
		maleBeteen0And19CoronaryArteryDisease.setName("maleBeteen0And19CoronaryArteryDisease");
		maleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19CoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CoronaryArteryDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CoronaryArteryDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CoronaryArteryDiseaseIndicator", maleBeteen0And19CoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.N.M.019",
		    "New caseCoronaryArteryDisease Male",
		    new Mapped(maleBetween0And19CoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CoronaryArteryDisease = new CompositionCohortDefinition();
		femaleBeteen0And19CoronaryArteryDisease.setName("femaleBelow5CoronaryArteryDisease");
		femaleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19CoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19CoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CoronaryArteryDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CoronaryArteryDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CoronaryArteryDiseaseIndicator", femaleBeteen0And19CoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.N.F.019",
		    "New caseCoronaryArteryDisease Female",
		    new Mapped(femaleBeteen0And19CoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithCoronaryArteryDisease
		        .setName("malepatientsBetween20And39YearsWithCoronaryArteryDisease");
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator",
		    malepatientsBetween20And39YearsWithCoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.N.M.2039",
		    "New caseCoronaryArteryDisease Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease
		        .setName("femalepatientsBetween20And39YearsWithCoronaryArteryDisease");
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator",
		    femalepatientsBetween20And39YearsWithCoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.N.F.2039",
		    "New caseCoronaryArteryDisease Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithCoronaryArteryDisease.setName("malepatientsAbove40YearsWithCoronaryArteryDisease");
		malepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithCoronaryArteryDisease
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator", malepatientsAbove40YearsWithCoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.N.M.40",
		    "New caseCoronaryArteryDisease Male above 40",
		    new Mapped(malepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithCoronaryArteryDisease.setName("femalepatientsAbove40YearsWithCoronaryArteryDisease");
		femalepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithCoronaryArteryDisease
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithCoronaryArteryDisease
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithCoronaryArteryDisease.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator",
		    femalepatientsAbove40YearsWithCoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.N.F.40",
		    "New caseCoronaryArteryDisease Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 5 Old case patient with Coronary artery disease
		
		SqlCohortDefinition OldCoronaryArteryDisease = patientWithICDCodeObsByStartDateAndEndDate("I251", caseStatus,
		    oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CoronaryArteryDiseaseOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.setName("maleBeteen0And19CoronaryArteryDiseaseOldCasePatient");
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CoronaryArteryDiseaseOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CoronaryArteryDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CoronaryArteryDiseaseOldCasePatientIndicator",
		    maleBeteen0And19CoronaryArteryDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.O.M.019",
		    "Old caseCoronaryArteryDisease Male",
		    new Mapped(maleBetween0And19CoronaryArteryDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.setName("femaleBelow5CoronaryArteryDiseaseOldCasePatient");
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CoronaryArteryDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CoronaryArteryDiseaseOldCasePatientIndicator",
		    femaleBeteen0And19CoronaryArteryDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.O.F.019",
		    "Old caseCoronaryArteryDisease Female",
		    new Mapped(femaleBeteen0And19CoronaryArteryDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease
		        .setName("maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease");
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator",
		            maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.O.M.2039",
		    "Old caseCoronaryArteryDisease Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease
		        .setName("femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease");
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.O.F.2039",
		    "Old caseCoronaryArteryDisease Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease
		        .setName("maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease");
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator",
		    maleOldCasepatientsAbove40YearsWithCoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.O.M.40",
		    "Old caseCoronaryArteryDisease Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease
		        .setName("femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease");
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator",
		    femaleOldCasepatientsAbove40YearsWithCoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.O.F.40",
		    "Old caseCoronaryArteryDisease Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 5 Died patient with Coronary artery disease
		
		SqlCohortDefinition diedCoronaryArteryDisease = diedPatientWithICDCodeObsByStartDateAndEndDate("I251");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19CoronaryArteryDiseasediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.setName("maleBeteen0And19CoronaryArteryDiseasediedCasePatient");
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19CoronaryArteryDiseasediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19CoronaryArteryDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19CoronaryArteryDiseasediedCasePatientIndicator",
		    maleBeteen0And19CoronaryArteryDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.D.M.019",
		    "DiedCoronaryArteryDisease Male",
		    new Mapped(maleBetween0And19CoronaryArteryDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19CoronaryArteryDiseasediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.setName("femaleBelow5CoronaryArteryDiseasediedCasePatient");
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19CoronaryArteryDiseasediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19CoronaryArteryDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5CoronaryArteryDiseasediedCasePatientIndicator",
		    femaleBeteen0And19CoronaryArteryDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.D.F.019",
		    "DiedCoronaryArteryDisease Female",
		    new Mapped(femaleBeteen0And19CoronaryArteryDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease
		        .setName("malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease");
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator",
		            malediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.D.M.2039",
		    "DiedCoronaryArteryDisease Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease
		        .setName("femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease");
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator",
		            femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.D.F.2039",
		    "DiedCoronaryArteryDisease Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease
		        .setName("malediedCasepatientsAbove40YearsWithCoronaryArteryDisease");
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator",
		    malediedCasepatientsAbove40YearsWithCoronaryArteryDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.D.M.40",
		    "DiedCoronaryArteryDisease Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease
		        .setName("femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease");
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedCoronaryArteryDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator",
		            femalediedCasepatientsAbove40YearsWithCoronaryArteryDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.5.D.F.40",
		    "DiedCoronaryArteryDisease Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithCoronaryArteryDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 6  New case patient with Pericardial disease
		
		SqlCohortDefinition newPericardialDisease = patientWithICDCodesObsByStartDateAndEndDate("I30,I31", caseStatus,
		    newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19PericardialDisease = new CompositionCohortDefinition();
		maleBeteen0And19PericardialDisease.setName("maleBeteen0And19PericardialDisease");
		maleBeteen0And19PericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19PericardialDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19PericardialDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19PericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19PericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19PericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19PericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19PericardialDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19PericardialDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19PericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19PericardialDiseaseIndicator", maleBeteen0And19PericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.N.M.019",
		    "New case Pericardial disease Male",
		    new Mapped(maleBetween0And19PericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19PericardialDisease = new CompositionCohortDefinition();
		femaleBeteen0And19PericardialDisease.setName("femaleBelow5PericardialDisease");
		femaleBeteen0And19PericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19PericardialDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19PericardialDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19PericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19PericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19PericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19PericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19PericardialDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19PericardialDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19PericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5PericardialDiseaseIndicator", femaleBeteen0And19PericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.N.F.019",
		    "New case Pericardial disease Female",
		    new Mapped(femaleBeteen0And19PericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithPericardialDisease = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithPericardialDisease
		        .setName("malepatientsBetween20And39YearsWithPericardialDisease");
		malepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithPericardialDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithPericardialDiseaseIndicator",
		    malepatientsBetween20And39YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.N.M.2039",
		    "New case Pericardial disease Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithPericardialDisease = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithPericardialDisease
		        .setName("femalepatientsBetween20And39YearsWithPericardialDisease");
		femalepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithPericardialDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithPericardialDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithPericardialDiseaseIndicator",
		    femalepatientsBetween20And39YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.N.F.2039",
		    "New case Pericardial disease Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithPericardialDisease = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithPericardialDisease.setName("malepatientsAbove40YearsWithPericardialDisease");
		malepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithPericardialDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithPericardialDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithPericardialDiseaseIndicator", malepatientsAbove40YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.N.M.40",
		    "New case Pericardial disease Male above 40",
		    new Mapped(malepatientsAbove40YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithPericardialDisease = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithPericardialDisease.setName("femalepatientsAbove40YearsWithPericardialDisease");
		femalepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithPericardialDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithPericardialDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithPericardialDiseaseIndicator", femalepatientsAbove40YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.N.F.40",
		    "New case Pericardial disease Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 6 Old case patient with Pericardial disease
		
		SqlCohortDefinition OldPericardialDisease = patientWithICDCodesObsByStartDateAndEndDate("I30,I31", caseStatus,
		    oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19PericardialDiseaseOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19PericardialDiseaseOldCasePatient.setName("maleBeteen0And19PericardialDiseaseOldCasePatient");
		maleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19PericardialDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19PericardialDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19PericardialDiseaseOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19PericardialDiseaseOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19PericardialDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19PericardialDiseaseOldCasePatientIndicator", maleBeteen0And19PericardialDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.O.M.019",
		    "Old case Pericardial disease Male",
		    new Mapped(maleBetween0And19PericardialDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19PericardialDiseaseOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19PericardialDiseaseOldCasePatient.setName("femaleBelow5PericardialDiseaseOldCasePatient");
		femaleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19PericardialDiseaseOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19PericardialDiseaseOldCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19PericardialDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19PericardialDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19PericardialDiseaseOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19PericardialDiseaseOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19PericardialDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5PericardialDiseaseOldCasePatientIndicator", femaleBeteen0And19PericardialDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.O.F.019",
		    "Old case Pericardial disease Female",
		    new Mapped(femaleBeteen0And19PericardialDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithPericardialDisease = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease
		        .setName("maleOldCasepatientsBetween20And39YearsWithPericardialDisease");
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithPericardialDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator",
		            maleOldCasepatientsBetween20And39YearsWithPericardialDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.O.M.2039",
		    "Old case Pericardial disease Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithPericardialDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease
		        .setName("femaleOldCasepatientsBetween20And39YearsWithPericardialDisease");
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithPericardialDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithPericardialDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.O.F.2039",
		    "Old case Pericardial disease Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithPericardialDisease = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithPericardialDisease
		        .setName("maleOldCasepatientsAbove40YearsWithPericardialDisease");
		maleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithPericardialDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithPericardialDiseaseIndicator",
		    maleOldCasepatientsAbove40YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.O.M.40",
		    "Old case Pericardial disease Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithPericardialDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithPericardialDisease
		        .setName("femaleOldCasepatientsAbove40YearsWithPericardialDisease");
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithPericardialDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithPericardialDiseaseIndicator",
		    femaleOldCasepatientsAbove40YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.O.F.40",
		    "Old case Pericardial disease Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 6 Died patient with Pericardial disease
		
		SqlCohortDefinition diedPericardialDisease = diedPatientWithICDCodesObsByStartDateAndEndDate("I30,I31");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19PericardialDiseasediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19PericardialDiseasediedCasePatient.setName("maleBeteen0And19PericardialDiseasediedCasePatient");
		maleBeteen0And19PericardialDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19PericardialDiseasediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19PericardialDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19PericardialDiseasediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19PericardialDiseasediedCasePatient
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19PericardialDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19PericardialDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19PericardialDiseasediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19PericardialDiseasediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19PericardialDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19PericardialDiseasediedCasePatientIndicator",
		    maleBeteen0And19PericardialDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.D.M.019",
		    "Died Pericardial disease Male",
		    new Mapped(maleBetween0And19PericardialDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19PericardialDiseasediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19PericardialDiseasediedCasePatient.setName("femaleBelow5PericardialDiseasediedCasePatient");
		femaleBeteen0And19PericardialDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19PericardialDiseasediedCasePatient
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19PericardialDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19PericardialDiseasediedCasePatient
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19PericardialDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19PericardialDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19PericardialDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19PericardialDiseasediedCasePatient.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19PericardialDiseasediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19PericardialDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5PericardialDiseasediedCasePatientIndicator", femaleBeteen0And19PericardialDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.D.F.019",
		    "Died Pericardial disease Female",
		    new Mapped(femaleBeteen0And19PericardialDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithPericardialDisease = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithPericardialDisease
		        .setName("malediedCasepatientsBetween20And39YearsWithPericardialDisease");
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithPericardialDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator",
		            malediedCasepatientsBetween20And39YearsWithPericardialDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.D.M.2039",
		    "Died Pericardial disease Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithPericardialDisease = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease
		        .setName("femalediedCasepatientsBetween20And39YearsWithPericardialDisease");
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithPericardialDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator",
		            femalediedCasepatientsBetween20And39YearsWithPericardialDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.D.F.2039",
		    "Died Pericardial disease Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithPericardialDisease = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithPericardialDisease
		        .setName("malediedCasepatientsAbove40YearsWithPericardialDisease");
		malediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithPericardialDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithPericardialDiseaseIndicator",
		    malediedCasepatientsAbove40YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.D.M.40",
		    "Died Pericardial disease Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithPericardialDisease = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithPericardialDisease
		        .setName("femalediedCasepatientsAbove40YearsWithPericardialDisease");
		femalediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithPericardialDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithPericardialDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPericardialDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithPericardialDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithPericardialDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithPericardialDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithPericardialDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithPericardialDiseaseIndicator",
		    femalediedCasepatientsAbove40YearsWithPericardialDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.6.D.F.40",
		    "Died Pericardial disease Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithPericardialDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 7  New case patient with Heart failure
		
		SqlCohortDefinition newHeartFailure = patientWithICDCodesObsByStartDateAndEndDate("I50,I110", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19HeartFailure = new CompositionCohortDefinition();
		maleBeteen0And19HeartFailure.setName("maleBeteen0And19HeartFailure");
		maleBeteen0And19HeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19HeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19HeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19HeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19HeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19HeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19HeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19HeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19HeartFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19HeartFailureIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19HeartFailureIndicator", maleBeteen0And19HeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.7.N.M.019", "New case Heart failure Male", new Mapped(maleBetween0And19HeartFailureIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19HeartFailure = new CompositionCohortDefinition();
		femaleBeteen0And19HeartFailure.setName("femaleBelow5HeartFailure");
		femaleBeteen0And19HeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19HeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19HeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19HeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19HeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19HeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19HeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19HeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19HeartFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19HeartFailureIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5HeartFailureIndicator", femaleBeteen0And19HeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.7.N.F.019", "New case Heart failure Female", new Mapped(femaleBeteen0And19HeartFailureIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithHeartFailure = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithHeartFailure.setName("malepatientsBetween20And39YearsWithHeartFailure");
		malepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithHeartFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithHeartFailureIndicator", malepatientsBetween20And39YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.N.M.2039",
		    "New case Heart failure Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithHeartFailure = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithHeartFailure.setName("femalepatientsBetween20And39YearsWithHeartFailure");
		femalepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithHeartFailure
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithHeartFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithHeartFailureIndicator", femalepatientsBetween20And39YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.N.F.2039",
		    "New case Heart failure Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithHeartFailure = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithHeartFailure.setName("malepatientsAbove40YearsWithHeartFailure");
		malepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithHeartFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithHeartFailureIndicator", malepatientsAbove40YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.N.M.40",
		    "New case Heart failure Male above 40",
		    new Mapped(malepatientsAbove40YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithHeartFailure = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithHeartFailure.setName("femalepatientsAbove40YearsWithHeartFailure");
		femalepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithHeartFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithHeartFailureIndicator", femalepatientsAbove40YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.N.F.40",
		    "New case Heart failure Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 7 Old case patient with Heart failure
		
		SqlCohortDefinition OldHeartFailure = patientWithICDCodesObsByStartDateAndEndDate("I50,I11.0", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19HeartFailureOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19HeartFailureOldCasePatient.setName("maleBeteen0And19HeartFailureOldCasePatient");
		maleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19HeartFailureOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19HeartFailureOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19HeartFailureOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19HeartFailureOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19HeartFailureOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19HeartFailureOldCasePatientIndicator", maleBeteen0And19HeartFailureOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.O.M.019",
		    "Old case Heart failure Male",
		    new Mapped(maleBetween0And19HeartFailureOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19HeartFailureOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19HeartFailureOldCasePatient.setName("femaleBelow5HeartFailureOldCasePatient");
		femaleBeteen0And19HeartFailureOldCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19HeartFailureOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19HeartFailureOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19HeartFailureOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19HeartFailureOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19HeartFailureOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19HeartFailureOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5HeartFailureOldCasePatientIndicator", femaleBeteen0And19HeartFailureOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.O.F.019",
		    "Old case Heart failure Female",
		    new Mapped(femaleBeteen0And19HeartFailureOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithHeartFailure = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithHeartFailure
		        .setName("maleOldCasepatientsBetween20And39YearsWithHeartFailure");
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithHeartFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithHeartFailureIndicator",
		    maleOldCasepatientsBetween20And39YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.O.M.2039",
		    "Old case Heart failure Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithHeartFailure = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure
		        .setName("femaleOldCasepatientsBetween20And39YearsWithHeartFailure");
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithHeartFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithHeartFailureIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.O.F.2039",
		    "Old case Heart failure Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithHeartFailure = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithHeartFailure.setName("maleOldCasepatientsAbove40YearsWithHeartFailure");
		maleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithHeartFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithHeartFailureIndicator", maleOldCasepatientsAbove40YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.O.M.40",
		    "Old case Heart failure Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithHeartFailure = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithHeartFailure.setName("femaleOldCasepatientsAbove40YearsWithHeartFailure");
		femaleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithHeartFailure
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithHeartFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithHeartFailureIndicator", femaleOldCasepatientsAbove40YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.O.F.40",
		    "Old case Heart failure Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 7 Died patient with Heart failure
		
		SqlCohortDefinition diedHeartFailure = diedPatientWithICDCodesObsByStartDateAndEndDate("I50,I11.0");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19HeartFailurediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19HeartFailurediedCasePatient.setName("maleBeteen0And19HeartFailurediedCasePatient");
		maleBeteen0And19HeartFailurediedCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19HeartFailurediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19HeartFailurediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19HeartFailurediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19HeartFailurediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19HeartFailurediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19HeartFailurediedCasePatientIndicator", maleBeteen0And19HeartFailurediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.D.M.019",
		    "Died Heart failure Male",
		    new Mapped(maleBetween0And19HeartFailurediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19HeartFailurediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19HeartFailurediedCasePatient.setName("femaleBelow5HeartFailurediedCasePatient");
		femaleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19HeartFailurediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19HeartFailurediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19HeartFailurediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19HeartFailurediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19HeartFailurediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19HeartFailurediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5HeartFailurediedCasePatientIndicator", femaleBeteen0And19HeartFailurediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.D.F.019",
		    "Died Heart failure Female",
		    new Mapped(femaleBeteen0And19HeartFailurediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithHeartFailure = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithHeartFailure
		        .setName("malediedCasepatientsBetween20And39YearsWithHeartFailure");
		malediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHeartFailure
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithHeartFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithHeartFailureIndicator",
		    malediedCasepatientsBetween20And39YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.D.M.2039",
		    "Died Heart failure Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithHeartFailure = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithHeartFailure
		        .setName("femalediedCasepatientsBetween20And39YearsWithHeartFailure");
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithHeartFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsBetween20And39YearsWithHeartFailureIndicator",
		    femalediedCasepatientsBetween20And39YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.D.F.2039",
		    "Died Heart failure Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithHeartFailure = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithHeartFailure.setName("malediedCasepatientsAbove40YearsWithHeartFailure");
		malediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithHeartFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithHeartFailureIndicator", malediedCasepatientsAbove40YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.D.M.40",
		    "Died Heart failure Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithHeartFailure = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithHeartFailure.setName("femalediedCasepatientsAbove40YearsWithHeartFailure");
		femalediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithHeartFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithHeartFailure
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedHeartFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithHeartFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithHeartFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithHeartFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithHeartFailureIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithHeartFailureIndicator",
		    femalediedCasepatientsAbove40YearsWithHeartFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.7.D.F.40",
		    "Died Heart failure Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithHeartFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 8  New case patient with Other Cardiovascular diseases
		
		SqlCohortDefinition newOtherCardiovascularDiseases = patientWithICDCodesObsByStartDateAndEndDate("I971,I516",
		    caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherCardiovascularDiseases = new CompositionCohortDefinition();
		maleBeteen0And19OtherCardiovascularDiseases.setName("maleBeteen0And19OtherCardiovascularDiseases");
		maleBeteen0And19OtherCardiovascularDiseases
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19OtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherCardiovascularDiseases.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherCardiovascularDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherCardiovascularDiseasesIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherCardiovascularDiseasesIndicator", maleBeteen0And19OtherCardiovascularDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.N.M.019",
		    "New case Other Cardiovascular diseases Male",
		    new Mapped(maleBetween0And19OtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherCardiovascularDiseases = new CompositionCohortDefinition();
		femaleBeteen0And19OtherCardiovascularDiseases.setName("femaleBelow5OtherCardiovascularDiseases");
		femaleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19OtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19OtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherCardiovascularDiseases.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherCardiovascularDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherCardiovascularDiseasesIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5OtherCardiovascularDiseasesIndicator", femaleBeteen0And19OtherCardiovascularDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.N.F.019",
		    "New case Other Cardiovascular diseases Female",
		    new Mapped(femaleBeteen0And19OtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases
		        .setName("malepatientsBetween20And39YearsWithOtherCardiovascularDiseases");
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator",
		            malepatientsBetween20And39YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.N.M.2039",
		    "New case Other Cardiovascular diseases Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases
		        .setName("femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases");
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator",
		            femalepatientsBetween20And39YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.N.F.2039",
		    "New case Other Cardiovascular diseases Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithOtherCardiovascularDiseases
		        .setName("malepatientsAbove40YearsWithOtherCardiovascularDiseases");
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator",
		    malepatientsAbove40YearsWithOtherCardiovascularDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.N.M.40",
		    "New case Other Cardiovascular diseases Male above 40",
		    new Mapped(malepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases
		        .setName("femalepatientsAbove40YearsWithOtherCardiovascularDiseases");
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator",
		    femalepatientsAbove40YearsWithOtherCardiovascularDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.N.F.40",
		    "New case Other Cardiovascular diseases Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 8 Old case patient with Other Cardiovascular diseases
		
		SqlCohortDefinition OldOtherCardiovascularDiseases = patientWithICDCodesObsByStartDateAndEndDate("I97.1,I51.6",
		    caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient
		        .setName("maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient");
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherCardiovascularDiseasesOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherCardiovascularDiseasesOldCasePatientIndicator",
		    maleBeteen0And19OtherCardiovascularDiseasesOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.O.M.019",
		    "Old case Other Cardiovascular diseases Male",
		    new Mapped(maleBetween0And19OtherCardiovascularDiseasesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient
		        .setName("femaleBelow5OtherCardiovascularDiseasesOldCasePatient");
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherCardiovascularDiseasesOldCasePatientIndicator",
		            femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.O.F.019",
		    "Old case Other Cardiovascular diseases Female",
		    new Mapped(femaleBeteen0And19OtherCardiovascularDiseasesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases
		        .setName("maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases");
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator",
		            maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.O.M.2039",
		    "Old case Other Cardiovascular diseases Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases
		        .setName("femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases");
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.O.F.2039",
		    "Old case Other Cardiovascular diseases Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases
		        .setName("maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases");
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator",
		            maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.O.M.40",
		    "Old case Other Cardiovascular diseases Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases
		        .setName("femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases");
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator",
		            femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.O.F.40",
		    "Old case Other Cardiovascular diseases Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 8 Died patient with Other Cardiovascular diseases
		
		SqlCohortDefinition diedOtherCardiovascularDiseases = diedPatientWithICDCodesObsByStartDateAndEndDate("I97.1,I51.6");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient
		        .setName("maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient");
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherCardiovascularDiseasesdiedCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19OtherCardiovascularDiseasesdiedCasePatientIndicator",
		            maleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.D.M.019",
		    "Died Other Cardiovascular diseases Male",
		    new Mapped(maleBetween0And19OtherCardiovascularDiseasesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient
		        .setName("femaleBelow5OtherCardiovascularDiseasesdiedCasePatient");
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherCardiovascularDiseasesdiedCasePatientIndicator",
		            femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.D.F.019",
		    "Died Other Cardiovascular diseases Female",
		    new Mapped(femaleBeteen0And19OtherCardiovascularDiseasesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases
		        .setName("malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases");
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator",
		            malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.D.M.2039",
		    "Died Other Cardiovascular diseases Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases
		        .setName("femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases");
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator",
		            femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.8.D.F.2039", "Died Other Cardiovascular diseases Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithOtherCardiovascularDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases
		        .setName("malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases");
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator",
		            malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.D.M.40",
		    "Died Other Cardiovascular diseases Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases
		        .setName("femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases");
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherCardiovascularDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator",
		            femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.8.D.F.40",
		    "Died Other Cardiovascular diseases Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithOtherCardiovascularDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 9        Post heart surgery    (N/A) ????????????????????????????
		
		// V.CK. 10  New case patient with Renal failure
		
		SqlCohortDefinition newRenalFailure = patientWithICDCodesObsByStartDateAndEndDate("N17,N18,N19", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19RenalFailure = new CompositionCohortDefinition();
		maleBeteen0And19RenalFailure.setName("maleBeteen0And19RenalFailure");
		maleBeteen0And19RenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19RenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19RenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19RenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19RenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19RenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19RenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19RenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19RenalFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19RenalFailureIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19RenalFailureIndicator", maleBeteen0And19RenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.10.N.M.019", "New case Renal failure Male", new Mapped(maleBetween0And19RenalFailureIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19RenalFailure = new CompositionCohortDefinition();
		femaleBeteen0And19RenalFailure.setName("femaleBelow5RenalFailure");
		femaleBeteen0And19RenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19RenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19RenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19RenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19RenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19RenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19RenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19RenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19RenalFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19RenalFailureIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RenalFailureIndicator", femaleBeteen0And19RenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.N.F.019",
		    "New case Renal failure Female",
		    new Mapped(femaleBeteen0And19RenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithRenalFailure = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithRenalFailure.setName("malepatientsBetween20And39YearsWithRenalFailure");
		malepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithRenalFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithRenalFailureIndicator", malepatientsBetween20And39YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.N.M.2039",
		    "New case Renal failure Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithRenalFailure = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithRenalFailure.setName("femalepatientsBetween20And39YearsWithRenalFailure");
		femalepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithRenalFailure
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithRenalFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithRenalFailureIndicator", femalepatientsBetween20And39YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.N.F.2039",
		    "New case Renal failure Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithRenalFailure = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithRenalFailure.setName("malepatientsAbove40YearsWithRenalFailure");
		malepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithRenalFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithRenalFailureIndicator", malepatientsAbove40YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.N.M.40",
		    "New case Renal failure Male above 40",
		    new Mapped(malepatientsAbove40YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithRenalFailure = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithRenalFailure.setName("femalepatientsAbove40YearsWithRenalFailure");
		femalepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithRenalFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithRenalFailureIndicator", femalepatientsAbove40YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.N.F.40",
		    "New case Renal failure Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 10 Old case patient with Renal failure
		
		SqlCohortDefinition OldRenalFailure = patientWithICDCodesObsByStartDateAndEndDate("N17,N18,N19", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19RenalFailureOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19RenalFailureOldCasePatient.setName("maleBeteen0And19RenalFailureOldCasePatient");
		maleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19RenalFailureOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19RenalFailureOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19RenalFailureOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19RenalFailureOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19RenalFailureOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19RenalFailureOldCasePatientIndicator", maleBeteen0And19RenalFailureOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.O.M.019",
		    "Old case Renal failure Male",
		    new Mapped(maleBetween0And19RenalFailureOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19RenalFailureOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19RenalFailureOldCasePatient.setName("femaleBelow5RenalFailureOldCasePatient");
		femaleBeteen0And19RenalFailureOldCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19RenalFailureOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19RenalFailureOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19RenalFailureOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19RenalFailureOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19RenalFailureOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19RenalFailureOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RenalFailureOldCasePatientIndicator", femaleBeteen0And19RenalFailureOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.O.F.019",
		    "Old case Renal failure Female",
		    new Mapped(femaleBeteen0And19RenalFailureOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithRenalFailure = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithRenalFailure
		        .setName("maleOldCasepatientsBetween20And39YearsWithRenalFailure");
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithRenalFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithRenalFailureIndicator",
		    maleOldCasepatientsBetween20And39YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.O.M.2039",
		    "Old case Renal failure Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithRenalFailure = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure
		        .setName("femaleOldCasepatientsBetween20And39YearsWithRenalFailure");
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithRenalFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithRenalFailureIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.O.F.2039",
		    "Old case Renal failure Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithRenalFailure = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithRenalFailure.setName("maleOldCasepatientsAbove40YearsWithRenalFailure");
		maleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithRenalFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithRenalFailureIndicator", maleOldCasepatientsAbove40YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.O.M.40",
		    "Old case Renal failure Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithRenalFailure = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithRenalFailure.setName("femaleOldCasepatientsAbove40YearsWithRenalFailure");
		femaleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithRenalFailure
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithRenalFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithRenalFailureIndicator", femaleOldCasepatientsAbove40YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.O.F.40",
		    "Old case Renal failure Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 10 Died patient with Renal failure
		
		SqlCohortDefinition diedRenalFailure = diedPatientWithICDCodesObsByStartDateAndEndDate("N17,N18,N19");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19RenalFailurediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19RenalFailurediedCasePatient.setName("maleBeteen0And19RenalFailurediedCasePatient");
		maleBeteen0And19RenalFailurediedCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19RenalFailurediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19RenalFailurediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19RenalFailurediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19RenalFailurediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19RenalFailurediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19RenalFailurediedCasePatientIndicator", maleBeteen0And19RenalFailurediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.D.M.019",
		    "Died Renal failure Male",
		    new Mapped(maleBetween0And19RenalFailurediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19RenalFailurediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19RenalFailurediedCasePatient.setName("femaleBelow5RenalFailurediedCasePatient");
		femaleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19RenalFailurediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19RenalFailurediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19RenalFailurediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19RenalFailurediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19RenalFailurediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19RenalFailurediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5RenalFailurediedCasePatientIndicator", femaleBeteen0And19RenalFailurediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.D.F.019",
		    "Died Renal failure Female",
		    new Mapped(femaleBeteen0And19RenalFailurediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithRenalFailure = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithRenalFailure
		        .setName("malediedCasepatientsBetween20And39YearsWithRenalFailure");
		malediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithRenalFailure
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithRenalFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithRenalFailureIndicator",
		    malediedCasepatientsBetween20And39YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.D.M.2039",
		    "Died Renal failure Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithRenalFailure = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithRenalFailure
		        .setName("femalediedCasepatientsBetween20And39YearsWithRenalFailure");
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithRenalFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsBetween20And39YearsWithRenalFailureIndicator",
		    femalediedCasepatientsBetween20And39YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.D.F.2039",
		    "Died Renal failure Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithRenalFailure = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithRenalFailure.setName("malediedCasepatientsAbove40YearsWithRenalFailure");
		malediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithRenalFailure.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithRenalFailureIndicator", malediedCasepatientsAbove40YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.D.M.40",
		    "Died Renal failure Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithRenalFailure = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithRenalFailure.setName("femalediedCasepatientsAbove40YearsWithRenalFailure");
		femalediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithRenalFailure.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithRenalFailure
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedRenalFailure, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithRenalFailure.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithRenalFailure.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithRenalFailure.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithRenalFailureIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithRenalFailureIndicator",
		    femalediedCasepatientsAbove40YearsWithRenalFailure,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.10.D.F.40",
		    "Died Renal failure Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithRenalFailureIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 11  New case patient with Other chronic kidney diseases
		
		SqlCohortDefinition newOtherChronicKidneyDiseases = patientWithICDCodesObsByStartDateAndEndDate(
		    "N00,N01,N02,N03,N04,N05,N06,N07,N08,N10,N11,N12,N13,N14,N15,N16", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherChronicKidneyDiseases = new CompositionCohortDefinition();
		maleBeteen0And19OtherChronicKidneyDiseases.setName("maleBeteen0And19OtherChronicKidneyDiseases");
		maleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherChronicKidneyDiseases.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherChronicKidneyDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherChronicKidneyDiseasesIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherChronicKidneyDiseasesIndicator", maleBeteen0And19OtherChronicKidneyDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.N.M.019",
		    "New case Other chronic kidney diseases Male",
		    new Mapped(maleBetween0And19OtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherChronicKidneyDiseases = new CompositionCohortDefinition();
		femaleBeteen0And19OtherChronicKidneyDiseases.setName("femaleBelow5OtherChronicKidneyDiseases");
		femaleBeteen0And19OtherChronicKidneyDiseases
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherChronicKidneyDiseases.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherChronicKidneyDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherChronicKidneyDiseasesIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5OtherChronicKidneyDiseasesIndicator", femaleBeteen0And19OtherChronicKidneyDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.N.F.019",
		    "New case Other chronic kidney diseases Female",
		    new Mapped(femaleBeteen0And19OtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases
		        .setName("malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases");
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator",
		            malepatientsBetween20And39YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.N.M.2039",
		    "New case Other chronic kidney diseases Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases
		        .setName("femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases");
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator",
		            femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.N.F.2039",
		    "New case Other chronic kidney diseases Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases
		        .setName("malepatientsAbove40YearsWithOtherChronicKidneyDiseases");
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator",
		    malepatientsAbove40YearsWithOtherChronicKidneyDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.N.M.40",
		    "New case Other chronic kidney diseases Male above 40",
		    new Mapped(malepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases
		        .setName("femalepatientsAbove40YearsWithOtherChronicKidneyDiseases");
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator",
		    femalepatientsAbove40YearsWithOtherChronicKidneyDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.N.F.40",
		    "New case Other chronic kidney diseases Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 11 Old case patient with Other chronic kidney diseases
		
		SqlCohortDefinition OldOtherChronicKidneyDiseases = patientWithICDCodesObsByStartDateAndEndDate(
		    "N00,N01,N2,N03,N04,N05,N06,N07,N08,N10,N11,N12,N13,N14,N15,N16", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient
		        .setName("maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient");
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherChronicKidneyDiseasesOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherChronicKidneyDiseasesOldCasePatientIndicator",
		    maleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.O.M.019",
		    "Old case Other chronic kidney diseases Male",
		    new Mapped(maleBetween0And19OtherChronicKidneyDiseasesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient
		        .setName("femaleBelow5OtherChronicKidneyDiseasesOldCasePatient");
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5OtherChronicKidneyDiseasesOldCasePatientIndicator",
		    femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.O.F.019",
		    "Old case Other chronic kidney diseases Female",
		    new Mapped(femaleBeteen0And19OtherChronicKidneyDiseasesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases
		        .setName("maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases");
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator",
		            maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.O.M.2039",
		    "Old case Other chronic kidney diseases Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases
		        .setName("femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases");
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.O.F.2039",
		    "Old case Other chronic kidney diseases Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases
		        .setName("maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases");
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator",
		            maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.O.M.40",
		    "Old case Other chronic kidney diseases Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases
		        .setName("femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases");
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator",
		            femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.O.F.40",
		    "Old case Other chronic kidney diseases Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 11 Died patient with Other chronic kidney diseases
		
		SqlCohortDefinition diedOtherChronicKidneyDiseases = diedPatientWithICDCodesObsByStartDateAndEndDate("N00,N01,N2,N03,N04,N05,N06,N07,N08,N10,N11,N12,N13,N14,N15,N16");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient
		        .setName("maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient");
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherChronicKidneyDiseasesdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherChronicKidneyDiseasesdiedCasePatientIndicator",
		    maleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.D.M.019",
		    "Died Other chronic kidney diseases Male",
		    new Mapped(maleBetween0And19OtherChronicKidneyDiseasesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient
		        .setName("femaleBelow5OtherChronicKidneyDiseasesdiedCasePatient");
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherChronicKidneyDiseasesdiedCasePatientIndicator",
		            femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.D.F.019",
		    "Died Other chronic kidney diseases Female",
		    new Mapped(femaleBeteen0And19OtherChronicKidneyDiseasesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases
		        .setName("malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases");
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator",
		            malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.D.M.2039",
		    "Died Other chronic kidney diseases Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases
		        .setName("femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases");
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator",
		            femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.D.F.2039",
		    "Died Other chronic kidney diseases Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases
		        .setName("malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases");
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator",
		            malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.D.M.40",
		    "Died Other chronic kidney diseases Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases
		        .setName("femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases");
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherChronicKidneyDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator",
		            femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.11.D.F.40",
		    "Died Other chronic kidney diseases Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithOtherChronicKidneyDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 12  New case patient with Thyroid Disease
		
		SqlCohortDefinition newThyroidDisease = patientWithICDCodesObsByStartDateAndEndDate(
		    "E00,E01,E02,E03,E04,E05,E06,E07", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19ThyroidDisease = new CompositionCohortDefinition();
		maleBeteen0And19ThyroidDisease.setName("maleBeteen0And19ThyroidDisease");
		maleBeteen0And19ThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19ThyroidDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19ThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19ThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19ThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19ThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19ThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19ThyroidDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19ThyroidDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19ThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19ThyroidDiseaseIndicator", maleBeteen0And19ThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.N.M.019",
		    "New case Thyroid Disease Male",
		    new Mapped(maleBetween0And19ThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19ThyroidDisease = new CompositionCohortDefinition();
		femaleBeteen0And19ThyroidDisease.setName("femaleBelow5ThyroidDisease");
		femaleBeteen0And19ThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19ThyroidDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19ThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19ThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19ThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19ThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19ThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19ThyroidDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19ThyroidDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19ThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5ThyroidDiseaseIndicator", femaleBeteen0And19ThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.N.F.019",
		    "New case Thyroid Disease Female",
		    new Mapped(femaleBeteen0And19ThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithThyroidDisease = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithThyroidDisease.setName("malepatientsBetween20And39YearsWithThyroidDisease");
		malepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithThyroidDisease
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithThyroidDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithThyroidDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithThyroidDiseaseIndicator", malepatientsBetween20And39YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.N.M.2039",
		    "New case Thyroid Disease Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithThyroidDisease = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithThyroidDisease.setName("femalepatientsBetween20And39YearsWithThyroidDisease");
		femalepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithThyroidDisease
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithThyroidDisease
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithThyroidDisease.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithThyroidDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithThyroidDiseaseIndicator",
		    femalepatientsBetween20And39YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.N.F.2039",
		    "New case Thyroid Disease Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithThyroidDisease = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithThyroidDisease.setName("malepatientsAbove40YearsWithThyroidDisease");
		malepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithThyroidDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithThyroidDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithThyroidDiseaseIndicator", malepatientsAbove40YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.N.M.40",
		    "New case Thyroid Disease Male above 40",
		    new Mapped(malepatientsAbove40YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithThyroidDisease = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithThyroidDisease.setName("femalepatientsAbove40YearsWithThyroidDisease");
		femalepatientsAbove40YearsWithThyroidDisease
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithThyroidDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithThyroidDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithThyroidDiseaseIndicator", femalepatientsAbove40YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.N.F.40",
		    "New case Thyroid Disease Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 12 Old case patient with Thyroid Disease
		
		SqlCohortDefinition OldThyroidDisease = patientWithICDCodesObsByStartDateAndEndDate(
		    "E00,E01,E02,E03,E04,E05,E06,E07", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19ThyroidDiseaseOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19ThyroidDiseaseOldCasePatient.setName("maleBeteen0And19ThyroidDiseaseOldCasePatient");
		maleBeteen0And19ThyroidDiseaseOldCasePatient
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19ThyroidDiseaseOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19ThyroidDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19ThyroidDiseaseOldCasePatientIndicator", maleBeteen0And19ThyroidDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.O.M.019",
		    "Old case Thyroid Disease Male",
		    new Mapped(maleBetween0And19ThyroidDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19ThyroidDiseaseOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.setName("femaleBelow5ThyroidDiseaseOldCasePatient");
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19ThyroidDiseaseOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19ThyroidDiseaseOldCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5ThyroidDiseaseOldCasePatientIndicator", femaleBeteen0And19ThyroidDiseaseOldCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.O.F.019",
		    "Old case Thyroid Disease Female",
		    new Mapped(femaleBeteen0And19ThyroidDiseaseOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithThyroidDisease = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease
		        .setName("maleOldCasepatientsBetween20And39YearsWithThyroidDisease");
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease
		        .addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithThyroidDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator",
		    maleOldCasepatientsBetween20And39YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.O.M.2039",
		    "Old case Thyroid Disease Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithThyroidDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease
		        .setName("femaleOldCasepatientsBetween20And39YearsWithThyroidDisease");
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithThyroidDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator",
		    femaleOldCasepatientsBetween20And39YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.O.F.2039",
		    "Old case Thyroid Disease Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithThyroidDisease = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithThyroidDisease.setName("maleOldCasepatientsAbove40YearsWithThyroidDisease");
		maleOldCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleOldCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithThyroidDisease
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithThyroidDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithThyroidDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "maleOldCasepatientsAbove40YearsWithThyroidDiseaseIndicator", maleOldCasepatientsAbove40YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.O.M.40",
		    "Old case Thyroid Disease Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithThyroidDisease = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.setName("femaleOldCasepatientsAbove40YearsWithThyroidDisease");
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.getSearches()
		        .put("3", new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithThyroidDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "femaleOldCasepatientsAbove40YearsWithThyroidDiseaseIndicator",
		    femaleOldCasepatientsAbove40YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.O.F.40",
		    "Old case Thyroid Disease Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 12 Died patient with Thyroid Disease
		
		SqlCohortDefinition diedThyroidDisease = diedPatientWithICDCodesObsByStartDateAndEndDate("E00,E01,E02,E03,E04,E05,E06,E07");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19ThyroidDiseasediedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19ThyroidDiseasediedCasePatient.setName("maleBeteen0And19ThyroidDiseasediedCasePatient");
		maleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19ThyroidDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19ThyroidDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19ThyroidDiseasediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19ThyroidDiseasediedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19ThyroidDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19ThyroidDiseasediedCasePatientIndicator", maleBeteen0And19ThyroidDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.D.M.019",
		    "Died Thyroid Disease Male",
		    new Mapped(maleBetween0And19ThyroidDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19ThyroidDiseasediedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19ThyroidDiseasediedCasePatient.setName("femaleBelow5ThyroidDiseasediedCasePatient");
		femaleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19ThyroidDiseasediedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19ThyroidDiseasediedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5ThyroidDiseasediedCasePatientIndicator", femaleBeteen0And19ThyroidDiseasediedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.D.F.019",
		    "Died Thyroid Disease Female",
		    new Mapped(femaleBeteen0And19ThyroidDiseasediedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithThyroidDisease = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithThyroidDisease
		        .setName("malediedCasepatientsBetween20And39YearsWithThyroidDisease");
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithThyroidDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator",
		    malediedCasepatientsBetween20And39YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.D.M.2039",
		    "Died Thyroid Disease Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithThyroidDisease = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease
		        .setName("femalediedCasepatientsBetween20And39YearsWithThyroidDisease");
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithThyroidDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator",
		            femalediedCasepatientsBetween20And39YearsWithThyroidDisease,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.D.F.2039",
		    "Died Thyroid Disease Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithThyroidDisease = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithThyroidDisease.setName("malediedCasepatientsAbove40YearsWithThyroidDisease");
		malediedCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithThyroidDisease
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithThyroidDisease.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithThyroidDisease.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithThyroidDiseaseIndicator",
		    malediedCasepatientsAbove40YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.D.M.40",
		    "Died Thyroid Disease Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithThyroidDisease = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithThyroidDisease.setName("femalediedCasepatientsAbove40YearsWithThyroidDisease");
		femalediedCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithThyroidDisease
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithThyroidDisease
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithThyroidDisease.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedThyroidDisease, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithThyroidDisease.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithThyroidDisease.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithThyroidDisease.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithThyroidDiseaseIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithThyroidDiseaseIndicator",
		    femalediedCasepatientsAbove40YearsWithThyroidDisease,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.12.D.F.40",
		    "Died Thyroid Disease Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithThyroidDiseaseIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 13  New case patient with Other endocrine and metabolic diseases
		
		SqlCohortDefinition newOtherEndocrineAndMetabolicDiseases = patientWithICDCodesObsByStartDateAndEndDate(
		    "E15,E16,E20,E21,E22,E23,E24,E25,E26,E27,E28,E29,E30,E31,E32,E33,E34,E35", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.setName("maleBeteen0And19OtherEndocrineAndMetabolicDiseases");
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases
		        .addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherEndocrineAndMetabolicDiseasesIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19OtherEndocrineAndMetabolicDiseasesIndicator",
		    maleBeteen0And19OtherEndocrineAndMetabolicDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.N.M.019",
		    "New case Other endocrine and metabolic diseases Male",
		    new Mapped(maleBetween0And19OtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.setName("femaleBelow5OtherEndocrineAndMetabolicDiseases");
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5OtherEndocrineAndMetabolicDiseasesIndicator", femaleBeteen0And19OtherEndocrineAndMetabolicDiseases,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.N.F.019",
		    "New case Other endocrine and metabolic diseases Female",
		    new Mapped(femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases");
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.N.M.2039",
		    "New case Other endocrine and metabolic diseases Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases");
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.N.F.2039",
		    "New case Other endocrine and metabolic diseases Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases");
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.N.M.40",
		    "New case Other endocrine and metabolic diseases Male above 40",
		    new Mapped(malepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases");
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.N.F.40",
		    "New case Other endocrine and metabolic diseases Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 13 Old case patient with Other endocrine and metabolic diseases
		
		SqlCohortDefinition OldOtherEndocrineAndMetabolicDiseases = patientWithICDCodesObsByStartDateAndEndDate(
		    "E15,E16,E20,E21,E22,E23,E24,E25,E26,E27,E28,E29,E30,E31,E32,E33,E34,E35", caseStatus, oldCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient
		        .setName("maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient");
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherEndocrineAndMetabolicDiseasesOldCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19OtherEndocrineAndMetabolicDiseasesOldCasePatientIndicator",
		            maleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.O.M.019",
		    "Old case Other endocrine and metabolic diseases Male",
		    new Mapped(maleBetween0And19OtherEndocrineAndMetabolicDiseasesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient
		        .setName("femaleBelow5OtherEndocrineAndMetabolicDiseasesOldCasePatient");
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherEndocrineAndMetabolicDiseasesOldCasePatientIndicator",
		            femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.O.F.019",
		    "Old case Other endocrine and metabolic diseases Female",
		    new Mapped(femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesOldCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases");
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.13.O.M.2039", "Old case Other endocrine and metabolic diseases Male between 20 and 39 years",
		    new Mapped(maleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases");
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.13.O.F.2039", "Old case Other endocrine and metabolic diseases Female between 20 and 39 years",
		    new Mapped(femaleOldCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases");
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.O.M.40",
		    "Old case Other endocrine and metabolic diseases Male above 40",
		    new Mapped(maleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases");
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(OldOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.O.F.40",
		    "Old case Other endocrine and metabolic diseases Female above 40",
		    new Mapped(femaleOldCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// V.CK. 13 Died patient with Other endocrine and metabolic diseases
		
		SqlCohortDefinition diedOtherEndocrineAndMetabolicDiseases = diedPatientWithICDCodesObsByStartDateAndEndDate("E15,E16,E20,E21,E22,E23,E24,E25,E26,E27,E28,E29,E30,E31,E32,E33,E34,E35");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient
		        .setName("maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient");
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatientIndicator = Indicators
		        .newCohortIndicator("maleBetween0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatientIndicator",
		            maleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.D.M.019",
		    "Died Other endocrine and metabolic diseases Male",
		    new Mapped(maleBetween0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient
		        .setName("femaleBelow5OtherEndocrineAndMetabolicDiseasesdiedCasePatient");
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("endDate", "endDate",
		        Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatientIndicator = Indicators
		        .newCohortIndicator("femaleBelow5OtherEndocrineAndMetabolicDiseasesdiedCasePatientIndicator",
		            femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatient,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.D.F.019",
		    "Died Other endocrine and metabolic diseases Female",
		    new Mapped(femaleBeteen0And19OtherEndocrineAndMetabolicDiseasesdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases");
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.13.D.M.2039", "Died Other endocrine and metabolic diseases Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases");
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "effectiveDate", "effectiveDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "startDate", "startDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "endDate", "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter(
		        "onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases
		        .setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator(
		            "femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.13.D.F.2039", "Died Other endocrine and metabolic diseases Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithOtherEndocrineAndMetabolicDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases");
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "V.CK.13.D.M.40",
		    "Died Other endocrine and metabolic diseases Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases
		        .setName("femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases");
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("effectiveDate",
		        "effectiveDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("startDate",
		        "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("endDate",
		        "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrAfter",
		        "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.addParameter(new Parameter("onOrBefore",
		        "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedOtherEndocrineAndMetabolicDiseases, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator = Indicators
		        .newCohortIndicator("femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator",
		            femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseases,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("V.CK.13.D.F.40", "Died Other endocrine and metabolic diseases Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithOtherEndocrineAndMetabolicDiseasesIndicator,
		            ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
	}
	
	// VI. Injuries
	
	private void createCohortMonthlyIndicatorsVI(CohortIndicatorDataSetDefinition dsd) {
		
		AgeCohortDefinition patientBetweenZeroAndNineteenYears = patientWithAgeBetween(0, 19);
		
		GenderCohortDefinition males = new GenderCohortDefinition();
		males.setName("male Patients");
		males.setMaleIncluded(true);
		
		AgeCohortDefinition patientBetween20And39Years = patientWithAgeBetween(20, 39);
		
		AgeCohortDefinition patientAbove40Years = patientWithAgeAbove(40);
		
		// VI.I. 7  New case patient with Fire or burns thermo, electrical, chemical
		
		SqlCohortDefinition newFireBurns = patientWithICDCodesObsByStartDateAndEndDate(
		    "T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19FireBurns = new CompositionCohortDefinition();
		maleBeteen0And19FireBurns.setName("maleBeteen0And19FireBurns");
		maleBeteen0And19FireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19FireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19FireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19FireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19FireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19FireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19FireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19FireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19FireBurns.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19FireBurnsIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19FireBurnsIndicator", maleBeteen0And19FireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.N.M.019",
		    "New case Fire or burns thermo, electrical, chemical Male",
		    new Mapped(maleBetween0And19FireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19FireBurns = new CompositionCohortDefinition();
		femaleBeteen0And19FireBurns.setName("femaleBelow5FireBurns");
		femaleBeteen0And19FireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19FireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19FireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19FireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19FireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19FireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19FireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19FireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19FireBurns.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19FireBurnsIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5FireBurnsIndicator", femaleBeteen0And19FireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.N.F.019",
		    "New case Fire or burns thermo, electrical, chemical Female",
		    new Mapped(femaleBeteen0And19FireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithFireBurns = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithFireBurns.setName("malepatientsBetween20And39YearsWithFireBurns");
		malepatientsBetween20And39YearsWithFireBurns
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithFireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithFireBurns.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithFireBurnsIndicator", malepatientsBetween20And39YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.N.M.2039",
		    "New case Fire or burns thermo, electrical, chemical Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithFireBurns = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithFireBurns.setName("femalepatientsBetween20And39YearsWithFireBurns");
		femalepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithFireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithFireBurns.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithFireBurnsIndicator", femalepatientsBetween20And39YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.N.F.2039",
		    "New case Fire or burns thermo, electrical, chemical Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithFireBurns = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithFireBurns.setName("malepatientsAbove40YearsWithFireBurns");
		malepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithFireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithFireBurns.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithFireBurnsIndicator", malepatientsAbove40YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.N.M.40",
		    "New case Fire or burns thermo, electrical, chemical Male above 40",
		    new Mapped(malepatientsAbove40YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithFireBurns = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithFireBurns.setName("femalepatientsAbove40YearsWithFireBurns");
		femalepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithFireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithFireBurns.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithFireBurnsIndicator", femalepatientsAbove40YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.N.F.40",
		    "New case Fire or burns thermo, electrical, chemical Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// VI.I. 7 Died patient with Fire or burns thermo, electrical, chemical
		
		SqlCohortDefinition diedFireBurns = diedPatientWithICDCodesObsByStartDateAndEndDate("T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19FireBurnsdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19FireBurnsdiedCasePatient.setName("maleBeteen0And19FireBurnsdiedCasePatient");
		maleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19FireBurnsdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19FireBurnsdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19FireBurnsdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19FireBurnsdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19FireBurnsdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19FireBurnsdiedCasePatientIndicator", maleBeteen0And19FireBurnsdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.D.M.019",
		    "Died Fire or burns thermo, electrical, chemical Male",
		    new Mapped(maleBetween0And19FireBurnsdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19FireBurnsdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19FireBurnsdiedCasePatient.setName("femaleBelow5FireBurnsdiedCasePatient");
		femaleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19FireBurnsdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19FireBurnsdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19FireBurnsdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19FireBurnsdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19FireBurnsdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19FireBurnsdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5FireBurnsdiedCasePatientIndicator", femaleBeteen0And19FireBurnsdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.D.F.019",
		    "Died Fire or burns thermo, electrical, chemical Female",
		    new Mapped(femaleBeteen0And19FireBurnsdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithFireBurns = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithFireBurns.setName("malediedCasepatientsBetween20And39YearsWithFireBurns");
		malediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithFireBurns
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithFireBurns
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithFireBurns.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithFireBurns.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithFireBurnsIndicator",
		    malediedCasepatientsBetween20And39YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.D.M.2039",
		    "Died Fire or burns thermo, electrical, chemical Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithFireBurns = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithFireBurns
		        .setName("femalediedCasepatientsBetween20And39YearsWithFireBurns");
		femalediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithFireBurns.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsBetween20And39YearsWithFireBurnsIndicator",
		    femalediedCasepatientsBetween20And39YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.D.F.2039",
		    "Died Fire or burns thermo, electrical, chemical Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithFireBurns = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithFireBurns.setName("malediedCasepatientsAbove40YearsWithFireBurns");
		malediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithFireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithFireBurns.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithFireBurnsIndicator", malediedCasepatientsAbove40YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.D.M.40",
		    "Died Fire or burns thermo, electrical, chemical Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithFireBurns = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithFireBurns.setName("femalediedCasepatientsAbove40YearsWithFireBurns");
		femalediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithFireBurns.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedFireBurns, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithFireBurns.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithFireBurns.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithFireBurns.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithFireBurnsIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithFireBurnsIndicator", femalediedCasepatientsAbove40YearsWithFireBurns,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.7.D.F.40",
		    "Died Fire or burns thermo, electrical, chemical Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithFireBurnsIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// VI.I. 9  New case patient with Poisoning
		
		SqlCohortDefinition newPoisoning = patientWithICDCodesObsByStartDateAndEndDate(
		    "T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50", caseStatus, newCase);
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19Poisoning = new CompositionCohortDefinition();
		maleBeteen0And19Poisoning.setName("maleBeteen0And19Poisoning");
		maleBeteen0And19Poisoning.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19Poisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19Poisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19Poisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19Poisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19Poisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19Poisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19Poisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19Poisoning.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19PoisoningIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19PoisoningIndicator", maleBeteen0And19Poisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("VI.I.9.N.M.019", "New case Poisoning Male", new Mapped(maleBetween0And19PoisoningIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19Poisoning = new CompositionCohortDefinition();
		femaleBeteen0And19Poisoning.setName("femaleBelow5Poisoning");
		femaleBeteen0And19Poisoning.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19Poisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19Poisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19Poisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19Poisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19Poisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19Poisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19Poisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19Poisoning.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19PoisoningIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5PoisoningIndicator", femaleBeteen0And19Poisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn("VI.I.9.N.F.019", "New case Poisoning Female", new Mapped(femaleBeteen0And19PoisoningIndicator,
		        ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malepatientsBetween20And39YearsWithPoisoning = new CompositionCohortDefinition();
		malepatientsBetween20And39YearsWithPoisoning.setName("malepatientsBetween20And39YearsWithPoisoning");
		malepatientsBetween20And39YearsWithPoisoning
		        .addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsBetween20And39YearsWithPoisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsBetween20And39YearsWithPoisoning.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsBetween20And39YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "malepatientsBetween20And39YearsWithPoisoningIndicator", malepatientsBetween20And39YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.N.M.2039",
		    "New case Poisoning Male between 20 and 39 years",
		    new Mapped(malepatientsBetween20And39YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsBetween20And39YearsWithPoisoning = new CompositionCohortDefinition();
		femalepatientsBetween20And39YearsWithPoisoning.setName("femalepatientsBetween20And39YearsWithPoisoning");
		femalepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsBetween20And39YearsWithPoisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsBetween20And39YearsWithPoisoning.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsBetween20And39YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "femalepatientsBetween20And39YearsWithPoisoningIndicator", femalepatientsBetween20And39YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.N.F.2039",
		    "New case Poisoning Female between 20 and 39 years",
		    new Mapped(femalepatientsBetween20And39YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malepatientsAbove40YearsWithPoisoning = new CompositionCohortDefinition();
		malepatientsAbove40YearsWithPoisoning.setName("malepatientsAbove40YearsWithPoisoning");
		malepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		malepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		malepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		malepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malepatientsAbove40YearsWithPoisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malepatientsAbove40YearsWithPoisoning.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malepatientsAbove40YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "malepatientsAbove40YearsWithPoisoningIndicator", malepatientsAbove40YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.N.M.40",
		    "New case Poisoning Male above 40",
		    new Mapped(malepatientsAbove40YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalepatientsAbove40YearsWithPoisoning = new CompositionCohortDefinition();
		femalepatientsAbove40YearsWithPoisoning.setName("femalepatientsAbove40YearsWithPoisoning");
		femalepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femalepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(newPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalepatientsAbove40YearsWithPoisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalepatientsAbove40YearsWithPoisoning.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalepatientsAbove40YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "femalepatientsAbove40YearsWithPoisoningIndicator", femalepatientsAbove40YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.N.F.40",
		    "New case Poisoning Female above 40",
		    new Mapped(femalepatientsAbove40YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// VI.I. 9 Died patient with Poisoning
		
		SqlCohortDefinition diedPoisoning = diedPatientWithICDCodesObsByStartDateAndEndDate("T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50");
		
		// 0-19
		
		CompositionCohortDefinition maleBeteen0And19PoisoningdiedCasePatient = new CompositionCohortDefinition();
		maleBeteen0And19PoisoningdiedCasePatient.setName("maleBeteen0And19PoisoningdiedCasePatient");
		maleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		maleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		maleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		maleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		maleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		maleBeteen0And19PoisoningdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		maleBeteen0And19PoisoningdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		maleBeteen0And19PoisoningdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		maleBeteen0And19PoisoningdiedCasePatient.setCompositionString("1 and 2 and 3");
		
		CohortIndicator maleBetween0And19PoisoningdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "maleBetween0And19PoisoningdiedCasePatientIndicator", maleBeteen0And19PoisoningdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.D.M.019",
		    "Died Poisoning Male",
		    new Mapped(maleBetween0And19PoisoningdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femaleBeteen0And19PoisoningdiedCasePatient = new CompositionCohortDefinition();
		femaleBeteen0And19PoisoningdiedCasePatient.setName("femaleBelow5PoisoningdiedCasePatient");
		femaleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		femaleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("startDate", "startDate", Date.class));
		femaleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("endDate", "endDate", Date.class));
		femaleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femaleBeteen0And19PoisoningdiedCasePatient.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femaleBeteen0And19PoisoningdiedCasePatient.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femaleBeteen0And19PoisoningdiedCasePatient.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetweenZeroAndNineteenYears, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femaleBeteen0And19PoisoningdiedCasePatient.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femaleBeteen0And19PoisoningdiedCasePatient.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femaleBeteen0And19PoisoningdiedCasePatientIndicator = Indicators.newCohortIndicator(
		    "femaleBelow5PoisoningdiedCasePatientIndicator", femaleBeteen0And19PoisoningdiedCasePatient,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.D.F.019",
		    "Died Poisoning Female",
		    new Mapped(femaleBeteen0And19PoisoningdiedCasePatientIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		//20-39
		
		CompositionCohortDefinition malediedCasepatientsBetween20And39YearsWithPoisoning = new CompositionCohortDefinition();
		malediedCasepatientsBetween20And39YearsWithPoisoning.setName("malediedCasepatientsBetween20And39YearsWithPoisoning");
		malediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithPoisoning
		        .addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsBetween20And39YearsWithPoisoning
		        .addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		malediedCasepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsBetween20And39YearsWithPoisoning.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsBetween20And39YearsWithPoisoning.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsBetween20And39YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsBetween20And39YearsWithPoisoningIndicator",
		    malediedCasepatientsBetween20And39YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.D.M.2039",
		    "Died Poisoning Male between 20 and 39 years",
		    new Mapped(malediedCasepatientsBetween20And39YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsBetween20And39YearsWithPoisoning = new CompositionCohortDefinition();
		femalediedCasepatientsBetween20And39YearsWithPoisoning
		        .setName("femalediedCasepatientsBetween20And39YearsWithPoisoning");
		femalediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("startDate", "startDate",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("onOrAfter", "onOrAfter",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore",
		        Date.class));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientBetween20And39Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.getSearches().put("3",
		    new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsBetween20And39YearsWithPoisoning.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsBetween20And39YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsBetween20And39YearsWithPoisoningIndicator",
		    femalediedCasepatientsBetween20And39YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.D.F.2039",
		    "Died Poisoning Female between 20 and 39 years",
		    new Mapped(femalediedCasepatientsBetween20And39YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		// 40 +
		
		CompositionCohortDefinition malediedCasepatientsAbove40YearsWithPoisoning = new CompositionCohortDefinition();
		malediedCasepatientsAbove40YearsWithPoisoning.setName("malediedCasepatientsAbove40YearsWithPoisoning");
		malediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		malediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		malediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		malediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		malediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		malediedCasepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		malediedCasepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		malediedCasepatientsAbove40YearsWithPoisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		malediedCasepatientsAbove40YearsWithPoisoning.setCompositionString("1 and 2 and 3");
		
		CohortIndicator malediedCasepatientsAbove40YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "malediedCasepatientsAbove40YearsWithPoisoningIndicator", malediedCasepatientsAbove40YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.D.M.40",
		    "Died Poisoning Male above 40",
		    new Mapped(malediedCasepatientsAbove40YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
		CompositionCohortDefinition femalediedCasepatientsAbove40YearsWithPoisoning = new CompositionCohortDefinition();
		femalediedCasepatientsAbove40YearsWithPoisoning.setName("femalediedCasepatientsAbove40YearsWithPoisoning");
		femalediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("effectiveDate", "effectiveDate",
		        Date.class));
		femalediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("startDate", "startDate", Date.class));
		femalediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("endDate", "endDate", Date.class));
		femalediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrAfter", "onOrAfter", Date.class));
		femalediedCasepatientsAbove40YearsWithPoisoning.addParameter(new Parameter("onOrBefore", "onOrBefore", Date.class));
		femalediedCasepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "1",
		    new Mapped<CohortDefinition>(diedPoisoning, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")));
		femalediedCasepatientsAbove40YearsWithPoisoning.getSearches().put(
		    "2",
		    new Mapped<CohortDefinition>(patientAbove40Years, ParameterizableUtil
		            .createParameterMappings("effectiveDate=${effectiveDate}")));
		femalediedCasepatientsAbove40YearsWithPoisoning.getSearches().put("3", new Mapped<CohortDefinition>(males, null));
		femalediedCasepatientsAbove40YearsWithPoisoning.setCompositionString("1 and 2 and (not 3)");
		
		CohortIndicator femalediedCasepatientsAbove40YearsWithPoisoningIndicator = Indicators.newCohortIndicator(
		    "femalediedCasepatientsAbove40YearsWithPoisoningIndicator", femalediedCasepatientsAbove40YearsWithPoisoning,
		    ParameterizableUtil.createParameterMappings("startDate=${startDate},endDate=${endDate}"));
		dsd.addColumn(
		    "VI.I.9.D.F.40",
		    "Died Poisoning Female above 40",
		    new Mapped(femalediedCasepatientsAbove40YearsWithPoisoningIndicator, ParameterizableUtil
		            .createParameterMappings("startDate=${startDate},endDate=${endDate}")), "");
		
	}
	
	// VII. Palliative care
	
	private void createCohortMonthlyIndicatorsVII(CohortIndicatorDataSetDefinition dsd) {
		
	}
	
	// VIII. Community Checkup
	
	private void createCohortMonthlyIndicatorsVIII(CohortIndicatorDataSetDefinition dsd) {
		
	}
	
	// IX.  Cancer screening
	
	private void createCohortMonthlyIndicatorsIX(CohortIndicatorDataSetDefinition dsd) {
		
	}
	
	private void setUpProperties() {
		
		onOrAfterOnOrBefore.add("onOrAfter");
		
		onOrAfterOnOrBefore.add("onOrBefore");
		
		OPDForm = Context.getFormService().getFormByUuid("a4d59540-9c55-4cda-8e0d-0337a743540e");
		
		caseStatus = Context.getConceptService().getConceptByUuid("14183f94-59b2-4b62-bad7-2c788a21a422");
		
		newCase = Context.getConceptService().getConceptByUuid("f7b5bf49-cb07-4fca-8c15-93ba92249344");
		
		oldCase = Context.getConceptService().getConceptByUuid("ae5ba489-9be2-4960-8e44-8d09071ab8ca");
		
		noneInsuranceID = Integer.parseInt(Context.getAdministrationService().getGlobalProperty("reports.NoneInsuranceID"));
		
		hundrepercentInsuredInsuranceIDs = Context.getAdministrationService().getGlobalProperty(
		    "reports.hundrepercentInsuredInsuranceIDs");
		
		indigentsInsuranceIDs = Context.getAdministrationService().getGlobalProperty("reports.indigentsInsuranceIDs");
		
		ICDConceptClassId = Integer.parseInt(Context.getAdministrationService().getGlobalProperty(
		    "reports.ICDConceptClassId"));
		
	}
	
	private AgeCohortDefinition patientWithAgeBelow(int age) {
		AgeCohortDefinition patientsWithAgebilow = new AgeCohortDefinition();
		patientsWithAgebilow.setName("patientsWithAgebilow");
		patientsWithAgebilow.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		patientsWithAgebilow.setMaxAge(age - 1);
		patientsWithAgebilow.setMaxAgeUnit(DurationUnit.YEARS);
		return patientsWithAgebilow;
	}
	
	private AgeCohortDefinition patientWithAgeBelowAndIncuded(int age) {
		AgeCohortDefinition patientsWithAgebilow = new AgeCohortDefinition();
		patientsWithAgebilow.setName("patientsWithAgebilow");
		patientsWithAgebilow.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		patientsWithAgebilow.setMaxAge(age);
		patientsWithAgebilow.setMaxAgeUnit(DurationUnit.YEARS);
		return patientsWithAgebilow;
	}
	
	private AgeCohortDefinition patientWithAgeBetween(int age1, int age2) {
		AgeCohortDefinition patientsWithAge = new AgeCohortDefinition();
		patientsWithAge.setName("patientsWithAge");
		patientsWithAge.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		patientsWithAge.setMinAge(age1);
		patientsWithAge.setMaxAge(age2);
		patientsWithAge.setMinAgeUnit(DurationUnit.YEARS);
		patientsWithAge.setMaxAgeUnit(DurationUnit.YEARS);
		return patientsWithAge;
	}
	
	private AgeCohortDefinition patientWithAgeAbove(int age) {
		AgeCohortDefinition patientsWithAge = new AgeCohortDefinition();
		patientsWithAge.setName("patientsWithAge");
		patientsWithAge.addParameter(new Parameter("effectiveDate", "effectiveDate", Date.class));
		patientsWithAge.setMinAge(age);
		patientsWithAge.setMinAgeUnit(DurationUnit.YEARS);
		return patientsWithAge;
	}
	
	/*	private SqlCohortDefinition patientWithICDCodeObsByStartDateAndEndDate(String ICDCode){

			SqlCohortDefinition patientWithIDCObs=new SqlCohortDefinition("select o.person_id from obs o where o.value_coded in (select distinct concept_id from concept_name where name like '%"+ICDCode+"%') and o.value_coded in (select distinct concept_id from concept where class_id="+ICDConceptClassId+") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate");
			patientWithIDCObs.setName("patientWithIDCObs");
			patientWithIDCObs.addParameter(new Parameter("startDate", "startDate", Date.class));
			patientWithIDCObs.addParameter(new Parameter("endDate", "endDate", Date.class));

			return patientWithIDCObs;

		}*/
	
	private SqlCohortDefinition patientWithICDCodeObsByStartDateAndEndDate(String ICDCode, Concept caseStatusQuestion,
	        Concept caseAnswer) {
		
		SqlCohortDefinition patientWithIDCObs = new SqlCohortDefinition("select o.person_id from obs o "
		        + "inner join obs o2 on o.encounter_id=o2.encounter_id"
		        + " where o.value_coded in (select distinct concept_id from concept_name where name like '%" + ICDCode
		        + "%') and o.value_coded in (select distinct concept_id from concept where class_id=" + ICDConceptClassId
		        + ") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate and o2.concept_id="
		        + caseStatusQuestion.getConceptId() + " and o2.value_coded=" + caseAnswer.getConceptId() + "");
		patientWithIDCObs.setName("patientWithIDCObs");
		patientWithIDCObs.addParameter(new Parameter("startDate", "startDate", Date.class));
		patientWithIDCObs.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		return patientWithIDCObs;
		
	}
	
	private SqlCohortDefinition patientWithICDCodesObsByStartDateAndEndDate(String ICDCodes, Concept caseStatusQuestion,
	        Concept caseAnswer) {
		
		String icdTencodes[] = ICDCodes.split(",");
		
		StringBuilder q = new StringBuilder();
		q.append("select o.person_id from obs o " + "inner join obs o2 on o.encounter_id=o2.encounter_id"
		        + " where o.value_coded in (select distinct concept_id from concept_name where ");
		int i = 0;
		for (String c : icdTencodes) {
			if (i == 0) {
				q.append("name like '%" + c + "%'");
				i++;
			} else {
				q.append(" or name like '%" + c + "%'");
				i++;
			}
		}
		q.append(") and o.value_coded in (select distinct concept_id from concept where class_id=" + ICDConceptClassId
		        + ") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate and o2.concept_id="
		        + caseStatusQuestion.getConceptId() + " and o2.value_coded=" + caseAnswer.getConceptId() + "");
		
		SqlCohortDefinition patientWithIDCObs = new SqlCohortDefinition(q.toString());
		patientWithIDCObs.setName("patientWithIDCObs");
		patientWithIDCObs.addParameter(new Parameter("startDate", "startDate", Date.class));
		patientWithIDCObs.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		return patientWithIDCObs;
		
	}
	
	private SqlCohortDefinition diedPatientWithICDCodeObsByStartDateAndEndDate(String ICDCode) {
		
		SqlCohortDefinition patientWithIDCObs = new SqlCohortDefinition(
		        "select o.person_id from obs o "
		                + "inner join person p on o.person_id=p.person_id"
		                + " where o.value_coded in (select distinct concept_id from concept_name where name like '%"
		                + ICDCode
		                + "%') and o.value_coded in (select distinct concept_id from concept where class_id="
		                + ICDConceptClassId
		                + ") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate and p.dead=1 and p.voided=0");
		patientWithIDCObs.setName("patientWithIDCObs");
		patientWithIDCObs.addParameter(new Parameter("startDate", "startDate", Date.class));
		patientWithIDCObs.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		return patientWithIDCObs;
		
	}
	
	private SqlCohortDefinition diedPatientWithICDCodesObsByStartDateAndEndDate(String ICDCodes) {
		
		String icdTencodes[] = ICDCodes.split(",");
		
		StringBuilder q = new StringBuilder();
		q.append("select o.person_id from obs o " + "inner join person p on o.person_id=p.person_id"
		        + " where o.value_coded in (select distinct concept_id from concept_name where ");
		int i = 0;
		for (String c : icdTencodes) {
			if (i == 0) {
				q.append("name like '%" + c + "%'");
				i++;
			} else {
				q.append(" or name like '%" + c + "%'");
				i++;
			}
		}
		q.append(") and o.value_coded in (select distinct concept_id from concept where class_id="
		        + ICDConceptClassId
		        + ") and o.voided=0 and o.obs_datetime>= :startDate and o.obs_datetime<= :endDate  and p.dead=1 and p.voided=0");
		
		SqlCohortDefinition patientWithIDCObs = new SqlCohortDefinition(q.toString());
		patientWithIDCObs.setName("patientWithIDCObs");
		patientWithIDCObs.addParameter(new Parameter("startDate", "startDate", Date.class));
		patientWithIDCObs.addParameter(new Parameter("endDate", "endDate", Date.class));
		
		return patientWithIDCObs;
		
	}
	
}
